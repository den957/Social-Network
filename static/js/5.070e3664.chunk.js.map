{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/ProfilePostCreate/ProfilePost.module.css","components/Profile/ProfilePostList/ProfilePostList.module.css","assets/images/logo.jpg","components/Profile/ProfilePostCreate/ProfilePost.tsx","components/Profile/ProfilePostList/ProfilePostList.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["module","exports","ProfileReduxPost","reduxForm","form","modalPost","handleSubmit","setModalPost","onSubmit","className","s","addPost__form","Field","component","AutoHeightTextarea","addPost__textarea","name","addPost__button","type","onClick","addPost__close","icon","faTimes","addPost__input","placeholder","readOnly","ProfilePostList","profilePosts","profileMeInfo","removeProfilePost","posts","map","post","profile__newPost","cn","newPostProfile__row","newPostProfile","newPostProfile__logo","src","photos","small","newPostProfile__body","newPostProfile__name","fullName","newPostProfile__date","date","newPostProfileContent","newPostProfileRemove","e","id","Profile","setProfileImage","addProfilePost","profileInfo","isOwner","profileStatus","editModalStatus","isAuth","props","useState","isShowDetails","editIsShowDetails","generateDate","Date","profile","profile__row","profile__narrow","profile__me","meProfile__photo","logo","meProfile__block","meProfile__refresh","refreshProfile__fake","htmlFor","faArrowAltCircleUp","refreshProfile__arrowTop","refreshProfile__input","onChange","target","files","length","onChangeAvatar","profile__edit","editProfile__settings","to","profile__enter","faHome","enterProfile__link","editProfile__messages","profile__wide","profile__info","infoProfile__fullName","infoProfile__status","infoProfile__fakeStatus","statusProfile__user","statusProfile__empty","infoProfile__line","infoProfile__information","informationProfile__row","informationProfile","informationProfile__title","aboutMe","informationProfile__answer","lookingForAJobDescription","lookingForAJob","infoProfile__showDetails","contacts","youtube","facebook","website","github","profile__addPost","addPostProfile__row","addPostProfile__logo","dataPosts","toString","toLocaleDateString","toLocaleTimeString","dataPost","ProfileContainer","match","history","userId","getProfileInfo","getProfileMeInfo","getProfileStatus","profileImage","useEffect","params","push","preloader__profileWrapper","preloader__profileBlock","Preloader","withRouterUrlUserId","withRouter","connect","state","auth","dispatch","image"],"mappings":"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","file":"static/js/5.070e3664.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__row\":\"Profile_profile__row__1CVWG\",\"profile__narrow\":\"Profile_profile__narrow__1OWXU\",\"profile__wide\":\"Profile_profile__wide__18zXg\",\"profile__me\":\"Profile_profile__me__3rVSh\",\"meProfile__photo\":\"Profile_meProfile__photo__31lpA\",\"meProfile__block\":\"Profile_meProfile__block__2Xu6f\",\"refreshProfile__fake\":\"Profile_refreshProfile__fake__3hbm-\",\"refreshProfile__input\":\"Profile_refreshProfile__input__uXC4n\",\"refreshProfile__arrowTop\":\"Profile_refreshProfile__arrowTop__1HwEN\",\"profile__edit\":\"Profile_profile__edit__21_4X\",\"editProfile__settings\":\"Profile_editProfile__settings__2TiCS\",\"editProfile__messages\":\"Profile_editProfile__messages__2UMg9\",\"profile__enter\":\"Profile_profile__enter__u-Jpm\",\"enterProfile__link\":\"Profile_enterProfile__link__1zvji\",\"profile__info\":\"Profile_profile__info__3LONr\",\"infoProfile__fullName\":\"Profile_infoProfile__fullName__28uuA\",\"infoProfile__status\":\"Profile_infoProfile__status__2SFhu\",\"infoProfile__fakeStatus\":\"Profile_infoProfile__fakeStatus__KX2pA\",\"statusProfile__user\":\"Profile_statusProfile__user__1TfzD\",\"statusProfile__empty\":\"Profile_statusProfile__empty__1bxLY\",\"infoProfile__line\":\"Profile_infoProfile__line__3Jgdk\",\"informationProfile\":\"Profile_informationProfile__1oCrd\",\"informationProfile__row\":\"Profile_informationProfile__row__3e5PC\",\"informationProfile__title\":\"Profile_informationProfile__title__2tvxr\",\"informationProfile__answer\":\"Profile_informationProfile__answer__2UYoY\",\"infoProfile__showDetails\":\"Profile_infoProfile__showDetails__22RDe\",\"profile__addPost\":\"Profile_profile__addPost__3b4r9\",\"addPostProfile__row\":\"Profile_addPostProfile__row__3kzTp\",\"addPostProfile__logo\":\"Profile_addPostProfile__logo__23IWY\",\"preloader__profileWrapper\":\"Profile_preloader__profileWrapper__kbwou\",\"preloader__profileBlock\":\"Profile_preloader__profileBlock__1RE-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost__form\":\"ProfilePost_addPost__form__V73P5\",\"addPost__textarea\":\"ProfilePost_addPost__textarea__2IIEd\",\"addPost__button\":\"ProfilePost_addPost__button__2l3uW\",\"addPost__input\":\"ProfilePost_addPost__input__39O1q\",\"addPost__close\":\"ProfilePost_addPost__close__3_o1E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__newPost\":\"ProfilePostList_profile__newPost__3QRUc\",\"newPostProfileRemove\":\"ProfilePostList_newPostProfileRemove__2nJRU\",\"newPostProfile\":\"ProfilePostList_newPostProfile__ZkUOf\",\"newPostProfile__row\":\"ProfilePostList_newPostProfile__row__1Iatl\",\"newPostProfile__logo\":\"ProfilePostList_newPostProfile__logo__5hIoe\",\"newPostProfile__body\":\"ProfilePostList_newPostProfile__body__3vnUI\",\"newPostProfile__name\":\"ProfilePostList_newPostProfile__name__3_Me3\",\"newPostProfile__date\":\"ProfilePostList_newPostProfile__date__oQYEX\",\"newPostProfileContent\":\"ProfilePostList_newPostProfileContent__1irN2\"};","export default __webpack_public_path__ + \"static/media/logo.94e5c599.jpg\";","import React from \"react\"\r\nimport s from './ProfilePost.module.css'\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { AutoHeightTextarea } from \"../../Common/FormControl/FormControl\"\r\nimport { PostType } from \"../../../redux/profile.reducer\"\r\ntype OwnPropsType = {\r\n   modalPost: boolean,\r\n   setModalPost: (el: boolean) => void\r\n}\r\nconst ProfilePost: React.FC<InjectedFormProps<PostType, OwnPropsType> & OwnPropsType> = ({ modalPost, handleSubmit, setModalPost }) => {\r\n   return (\r\n      !modalPost\r\n         ? <form onSubmit={handleSubmit} className={s.addPost__form}>\r\n            <Field component={'input'} name={'posts'} className={s.addPost__input} placeholder={'Anything new?'} onClick={() => setModalPost(true)} readOnly />\r\n         </form >\r\n         : <>\r\n            <form onSubmit={handleSubmit} className={s.addPost__form}>\r\n               <Field component={AutoHeightTextarea} className={s.addPost__textarea} name={'post'} />\r\n               <button className={s.addPost__button} type={'submit'}>Publish</button>\r\n            </form >\r\n            <div onClick={() => setModalPost(false)} className={s.addPost__close}>\r\n               <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n         </>\r\n   )\r\n}\r\nexport const ProfileReduxPost = reduxForm<PostType, OwnPropsType>({ form: 'profilePost' })(ProfilePost)","import React from 'react'\r\nimport s from './ProfilePostList.module.css'\r\nimport cn from 'classnames'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { PostType, InfoType } from '../../../redux/profile.reducer'\r\ntype PropsType = {\r\n   profilePosts: Array<PostType>,\r\n   profileMeInfo: InfoType,\r\n   removeProfilePost: (id: string) => void\r\n}\r\nconst ProfilePostList: React.FC<PropsType> = ({ profilePosts, profileMeInfo, removeProfilePost }) => {\r\n   let posts = profilePosts.map((post) => {\r\n      return (\r\n         <div key={post.id} className={s.profile__newPost}>\r\n            <div className={cn(s.newPostProfile__row, s.newPostProfile)}>\r\n               <div className={s.newPostProfile__logo}>\r\n                  <img src={profileMeInfo.photos.small as string} />\r\n               </div>\r\n               <div className={s.newPostProfile__body}>\r\n                  <div className={s.newPostProfile__name}>\r\n                     {profileMeInfo.fullName}\r\n                  </div>\r\n                  <div className={s.newPostProfile__date}>\r\n                     {post.date}\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className={s.newPostProfileContent}>\r\n               {post.post}\r\n            </div>\r\n            <div className={s.newPostProfileRemove} onClick={(e) => { removeProfilePost(post.id) }}>\r\n               <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n         </div>\r\n      )\r\n   })\r\n   return (\r\n      <>\r\n         {posts}\r\n      </>\r\n   )\r\n}\r\nexport default ProfilePostList","import React, { ChangeEvent, useState } from 'react'\r\nimport s from './Profile.module.css'\r\nimport cn from 'classnames'\r\nimport { NavLink } from 'react-router-dom'\r\nimport logo from '../../assets/images/logo.jpg'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowAltCircleUp, faHome } from '@fortawesome/free-solid-svg-icons'\r\nimport { ProfileReduxPost } from './ProfilePostCreate/ProfilePost'\r\nimport ProfilePostList from './ProfilePostList/ProfilePostList'\r\nimport { InfoType, PostType } from '../../redux/profile.reducer'\r\n\r\ntype PropsType = {\r\n   setProfileImage: (image: File) => void,\r\n   addProfilePost: (dataPost: PostType) => void,\r\n   profileInfo: InfoType,\r\n   isOwner: boolean,\r\n   profileStatus: string,\r\n   editModalStatus: (el: boolean) => void,\r\n   isAuth: boolean,\r\n   profileMeInfo: InfoType,\r\n   profilePosts: Array<PostType>,\r\n   removeProfilePost: (id: string) => void,\r\n}\r\nconst Profile: React.FC<PropsType> = ({ setProfileImage, addProfilePost, profileInfo, isOwner, profileStatus, editModalStatus, isAuth, ...props }) => {\r\n   const [modalPost, setModalPost] = useState<boolean>(false)\r\n   const [isShowDetails, editIsShowDetails] = useState<boolean>(false)\r\n   const onChangeAvatar = (e: ChangeEvent<HTMLInputElement>) => {\r\n      if (e.target.files?.length) {\r\n         setProfileImage(e.target.files[0])\r\n      }\r\n   }\r\n   const generateDate = () => {\r\n      return new Date()\r\n   }\r\n   const onSubmit = (dataPosts: PostType) => {\r\n      setModalPost(false)\r\n      let id = `f${(+new Date).toString(16)}`;\r\n      let date = `${generateDate().toLocaleDateString()} at ${generateDate().toLocaleTimeString()}`\r\n      const dataPost = {\r\n         id: id,\r\n         post: dataPosts.post,\r\n         date: date\r\n      }\r\n      addProfilePost(dataPost)\r\n   }\r\n   return (\r\n      <div className={s.profile}>\r\n         <div className={s.profile__row}>\r\n            {/* NARROW COLUMN */}\r\n            <div className={s.profile__narrow}>\r\n               <div className={s.profile__me}>\r\n                  <div className={s.meProfile__photo}><img src={profileInfo.photos.small ? profileInfo.photos.small : logo} />\r\n                     {isOwner &&\r\n                        <div className={s.meProfile__block}>\r\n                           <div className={s.meProfile__refresh}>\r\n                              <label className={s.refreshProfile__fake} htmlFor={'avatar-img'}><FontAwesomeIcon icon={faArrowAltCircleUp} className={s.refreshProfile__arrowTop} /><span>Refresh photo</span></label>\r\n                              <input className={s.refreshProfile__input} type='file' id={'avatar-img'} name='avatar-img' onChange={(e) => { onChangeAvatar(e) }} />\r\n                           </div>\r\n                        </div>\r\n                     }\r\n                  </div>\r\n               </div>\r\n               {isOwner\r\n                  ? <>\r\n                     <div className={s.profile__edit}>\r\n                        <NavLink className={s.editProfile__settings} to={'/settings'}>Edit</NavLink>\r\n                     </div>\r\n                     <div className={s.profile__enter}>\r\n                        <NavLink to={'/settings'}><span><FontAwesomeIcon icon={faHome} className={s.enterProfile__link} />Enter your contacts</span></NavLink>\r\n                     </div>\r\n                  </>\r\n                  : < div className={s.profile__edit}>\r\n                     <NavLink className={s.editProfile__messages} to={'/messages'}>Write a message</NavLink>\r\n                  </div>\r\n               }\r\n            </div>\r\n            {/* WIDE COLUMN */}\r\n            <div className={s.profile__wide}>\r\n               <div className={s.profile__info}>\r\n                  <div className={s.infoProfile__fullName}>\r\n                     <h4>{profileInfo.fullName}</h4>\r\n                  </div>\r\n                  {isOwner\r\n                     ? <>\r\n                        {profileStatus\r\n                           ? <div className={s.infoProfile__status} >\r\n                              <div onClick={(e) => { editModalStatus(true) }}>{profileStatus}</div>\r\n                           </div>\r\n                           : <div className={s.infoProfile__status} >\r\n                              <div className={s.infoProfile__fakeStatus} onClick={() => { editModalStatus(true) }}>status</div>\r\n                           </div>\r\n                        }\r\n                     </>\r\n                     : <>\r\n                        {profileStatus\r\n                           ? <div className={s.statusProfile__user}>\r\n                              <div>{profileStatus}</div>\r\n                           </div>\r\n                           : <div className={s.statusProfile__empty}></div>\r\n                        }\r\n                     </>\r\n                  }\r\n                  <div className={s.infoProfile__line}></div>\r\n                  <div className={s.infoProfile__information}>\r\n                     <div className={cn(s.informationProfile__row, s.informationProfile)}>\r\n                        <span className={s.informationProfile__title}>About me: </span>\r\n                        {profileInfo.aboutMe\r\n                           ? <span className={s.informationProfile__answer} >{profileInfo.aboutMe}</span>\r\n                           : <span className={s.informationProfile__answer}>not specified</span>\r\n                        }\r\n                        <span className={s.informationProfile__title}>Town: </span>\r\n                        {profileInfo.lookingForAJobDescription\r\n                           ? <span className={s.informationProfile__answer}>{profileInfo.lookingForAJobDescription}</span>\r\n                           : <span className={s.informationProfile__answer}>not specified</span>\r\n                        }\r\n                        <span className={s.informationProfile__title}>Family status: </span>\r\n                        {profileInfo.lookingForAJob\r\n                           ? <span className={s.informationProfile__answer}>married</span>\r\n                           : <span className={s.informationProfile__answer}>not married</span>\r\n                        }\r\n                     </div>\r\n                  </div>\r\n                  {isShowDetails\r\n                     ? <>\r\n                        <div className={s.infoProfile__showDetails} onClick={() => editIsShowDetails(false)}>\r\n                           <span>Hide detailed information</span>\r\n                        </div>\r\n                        <div className={s.infoProfile__information}>\r\n                           <div className={s.infoProfile__line}></div>\r\n                           <div className={cn(s.informationProfile__row, s.informationProfile)}>\r\n                              <span className={s.informationProfile__title}>YouTube: </span>\r\n                              {profileInfo.contacts.youtube\r\n                                 ? <span className={s.informationProfile__answer}>{profileInfo.contacts.youtube}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>Facebook: </span>\r\n                              {profileInfo.contacts.facebook\r\n                                 ? <span className={s.informationProfile__answer}>{profileInfo.contacts.facebook}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>LinkedIn: </span>\r\n                              {profileInfo.contacts.website\r\n                                 ? <span className={s.informationProfile__answer}>{profileInfo.contacts.website}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>GitHub: </span>\r\n                              {profileInfo.contacts.github\r\n                                 ? <span className={s.informationProfile__answer}>{profileInfo.contacts.github}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                           </div>\r\n                        </div>\r\n                     </>\r\n                     : <>\r\n                        <div className={s.infoProfile__showDetails} onClick={(e) => editIsShowDetails(true)}>\r\n                           <span>Show details</span>\r\n                        </div>\r\n                        <div></div>\r\n                     </>\r\n                  }\r\n                  <div className={s.infoProfile__line}></div>\r\n               </div>\r\n               {isOwner && isAuth &&\r\n                  <>\r\n                     <div className={s.profile__addPost}>\r\n                        <div className={s.addPostProfile__row}>\r\n                           <div className={s.addPostProfile__logo}>\r\n                              <img src={props.profileMeInfo.photos.small as string} />\r\n                           </div>\r\n                           <ProfileReduxPost onSubmit={onSubmit} setModalPost={setModalPost} modalPost={modalPost} />\r\n                        </div>\r\n                     </div>\r\n                     {props.profilePosts.length > 0 &&\r\n                        <ProfilePostList removeProfilePost={props.removeProfilePost} profileMeInfo={props.profileMeInfo} profilePosts={props.profilePosts} />\r\n                     }\r\n                  </>\r\n               }\r\n            </div>\r\n         </div>\r\n      </div >\r\n   )\r\n}\r\nexport default Profile","import React, { useEffect } from 'react'\r\nimport s from './Profile.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter, RouteComponentProps } from 'react-router'\r\nimport Profile from './Profile'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\nimport { addProfilePost, getProfileInfo, getProfileMeInfo, getProfileStatus, InfoType, PostType, removeProfilePost, setProfileImage } from '../../redux/profile.reducer'\r\nimport { AppReducerType } from '../../redux/store'\r\nimport { ThunkDispatch } from 'redux-thunk'\r\nimport { AnyAction } from 'redux'\r\n\r\ntype MapStateToPropsType = {\r\n   userId: number | null,\r\n   profileInfo: InfoType | null,\r\n   profileStatus: string,\r\n   isAuth: boolean,\r\n   profileMeInfo: InfoType | null,\r\n   profilePosts: Array<PostType>,\r\n   profileImage: string | null\r\n}\r\ntype MapDispatchToPropsType = {\r\n   getProfileInfo: (userId: number) => void,\r\n   getProfileMeInfo: (userId: number) => void,\r\n   getProfileStatus: (userId: number) => void,\r\n   setProfileImage: (image: File) => void,\r\n   addProfilePost: (dataPost: PostType) => void,\r\n   removeProfilePost: (id: string) => void,\r\n}\r\ntype OwnPropsType = {\r\n   editModalStatus: (el: boolean) => void\r\n}\r\ntype MathParamsType = {\r\n   userId: string\r\n}\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType & OwnPropsType & RouteComponentProps<MathParamsType>\r\nexport const ProfileContainer: React.FC<PropsType> = ({ match, history, userId, getProfileInfo, getProfileMeInfo, getProfileStatus, profileImage, ...props }) => {\r\n   useEffect(() => {\r\n      let id: number | null = +match.params.userId\r\n      if (!id) {\r\n         if (!userId) {\r\n            history.push('/login')\r\n         }\r\n         else {\r\n            getProfileInfo(userId)\r\n            getProfileMeInfo(userId)\r\n            getProfileStatus(userId)\r\n         }\r\n      }\r\n      else {\r\n         getProfileInfo(id)\r\n         getProfileStatus(id)\r\n      }\r\n   }, [match.params.userId, profileImage, props.isAuth])\r\n\r\n   return (\r\n      <>\r\n         {props.isAuth\r\n            ?\r\n            <>{\r\n               props.profileInfo && props.profileMeInfo\r\n                  ? <Profile removeProfilePost={props.removeProfilePost} profilePosts={props.profilePosts} addProfilePost={props.addProfilePost} profileMeInfo={props.profileMeInfo} editModalStatus={props.editModalStatus} profileInfo={props.profileInfo} setProfileImage={props.setProfileImage} isOwner={!match.params.userId} profileStatus={props.profileStatus} isAuth={props.isAuth} />\r\n                  : <div className={s.preloader__profileWrapper}>\r\n                     <div className={s.preloader__profileBlock}>\r\n                        <Preloader />\r\n                     </div>\r\n                  </div >\r\n            }</>\r\n            : <>{props.profileInfo\r\n               ? <Profile removeProfilePost={props.removeProfilePost} profilePosts={props.profilePosts} addProfilePost={props.addProfilePost} profileMeInfo={props.profileMeInfo as InfoType} editModalStatus={props.editModalStatus} profileInfo={props.profileInfo} setProfileImage={props.setProfileImage} isOwner={!match.params.userId} profileStatus={props.profileStatus} isAuth={props.isAuth} />\r\n               : <div className={s.preloader__profileWrapper}>\r\n                  <div className={s.preloader__profileBlock}>\r\n                     <Preloader />\r\n                  </div>\r\n               </div >\r\n            }</>\r\n         }\r\n      </>\r\n   )\r\n}\r\nconst mapStateToProps = (state: AppReducerType): MapStateToPropsType => {\r\n   return {\r\n      userId: state.auth.id,\r\n      isAuth: state.auth.isAuth,\r\n      profileInfo: state.profile.profileInfo,\r\n      profileStatus: state.profile.profileStatus,\r\n      profileMeInfo: state.profile.profileMeInfo,\r\n      profilePosts: state.profile.profilePosts,\r\n      profileImage: state.profile.profileImage\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>): MapDispatchToPropsType => {\r\n   return {\r\n      getProfileInfo: (userId: number) => { dispatch(getProfileInfo(userId)) },\r\n      setProfileImage: (image: File) => { dispatch(setProfileImage(image)) },\r\n      getProfileStatus: (userId: number) => { dispatch(getProfileStatus(userId)) },\r\n      getProfileMeInfo: (userId: number) => { dispatch(getProfileMeInfo(userId)) },\r\n      addProfilePost: (dataPost: PostType) => { dispatch(addProfilePost(dataPost)) },\r\n      removeProfilePost: (id: string) => { dispatch(removeProfilePost(id)) }\r\n   }\r\n}\r\nlet withRouterUrlUserId = withRouter(ProfileContainer)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouterUrlUserId)"],"sourceRoot":""}