{"version":3,"sources":["assets/images/userIcon.png","components/Users/Users.module.css","components/Common/Paginator/Paginator.module.css","components/Users/UsersSearch/UsersSearch.module.css","components/Common/Paginator/Paginator.tsx","components/Users/UsersSearch/UsersSearch.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"names":["module","exports","Paginator","totalCount","countFollowed","pageFollowed","onPageChange","useState","portionNumber","setPortionNumber","pagesCount","Math","ceil","pages","i","push","portionsCount","leftPortionPageNumber","rightPortionNumber","filter","el","className","s","paginationClassic","paginationClassic__row","paginationClassic__buttonLeft","paginationClassic__buttonAble","icon","faChevronLeft","onClick","paginationClassic__buttonDisAble","paginationClassic__content","paginationClassic__buttonRight","faChevronRight","UsersSearch","isUserSelected","getUsersSelectTC","usersUnfollowed","isOnChange","setIsOnChange","debounceSave","useCallback","debounce","value","users__searchTitle","users__searchForm","users__searchForm__row","searchForm__icon","faSearch","searchForm__form","initialValues","name","onSubmit","handleChange","handleSubmit","searchForm__search","type","onChange","event","target","onHandleChange","placeholder","users__searchItems","length","map","user","users__searchItem","users__searchItem__row","searchItem__photo","to","id","src","photos","small","userIcon","alt","searchItem__name","users__error","preloader__usersWrapper","preloader__usersBlock","Preloader","Users","isAuth","usersFollowed","readyToggle","unfollowUserTC","props","users","users__row","users__wide","users__title","users__menu","menuUsers__row","menuUsers__title","menuUsers__button","users__request","followed","requestUsers__item","itemUsers__row","itemUsers__image","itemUsers__body","bodyUsers__name","bodyUsers__navigation","navigationUsers__row","navigationUsers__message","navigationUsers__subscribe","disabled","some","userId","e","faUserMinus","requestUsers__line","login__warning","users__narrow","connect","state","isReadyPage","auth","dispatch","count","pageUnfollowed","follower","term","getUsersFollowedTC","getOnceUnfollowedTC","isFetchingOnce","setIsFetchingOnce","useEffect","PreloaderLine"],"mappings":"wGAAe,QAA0B,sC,oBCCzCA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,WAAa,0BAA0B,YAAc,2BAA2B,cAAgB,6BAA6B,aAAe,4BAA4B,YAAc,2BAA2B,eAAiB,8BAA8B,iBAAmB,gCAAgC,kBAAoB,iCAAiC,mBAAqB,kCAAkC,eAAiB,8BAA8B,iBAAmB,gCAAgC,gBAAkB,+BAA+B,gBAAkB,+BAA+B,sBAAwB,qCAAqC,qBAAuB,oCAAoC,yBAA2B,wCAAwC,2BAA6B,0CAA0C,mBAAqB,kCAAkC,eAAiB,8BAA8B,wBAA0B,uCAAuC,sBAAwB,uC,oBCAnlCD,EAAOC,QAAU,CAAC,kBAAoB,qCAAqC,8BAAgC,iDAAiD,8BAAgC,iDAAiD,iCAAmC,oDAAoD,+BAAiC,kDAAkD,2BAA6B,8CAA8C,uBAAyB,4C,oBCA3fD,EAAOC,QAAU,CAAC,mBAAqB,wCAAwC,kBAAoB,uCAAuC,uBAAyB,4CAA4C,iBAAmB,sCAAsC,iBAAmB,sCAAsC,mBAAqB,wCAAwC,mBAAqB,wCAAwC,kBAAoB,uCAAuC,uBAAyB,4CAA4C,kBAAoB,uCAAuC,iBAAmB,sCAAsC,wBAA0B,6CAA6C,sBAAwB,6C,sJC4C/vBC,EAnCwB,SAAC,GAIrC,IAJoG,IAA7DC,EAA4D,EAA5DA,WAAYC,EAAgD,EAAhDA,cAAeC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAAmB,EAC3DC,mBAAiB,GAD0C,mBAC9FC,EAD8F,KAC/EC,EAD+E,KAE/FC,EAAaC,KAAKC,KAAKT,EAAuBC,GAC9CS,EAAuB,GAClBC,EAAI,EAAGA,GAAKJ,EAAYI,IAC9BD,EAAME,KAAKD,GAEd,IACIE,EAAgBL,KAAKC,KAAKF,EADZ,GAEdO,EAFc,GAEYT,EAAgB,GAAoB,EAC9DU,EAHc,EAGOV,EAIzB,OAHAK,EAAQA,EAAMM,QAAO,SAACC,GACnB,OAAOA,GAAMH,GAAyBG,GAAMF,KAG5C,qBAAKG,UAAWC,IAAEC,kBAAlB,SACG,sBAAKF,UAAWC,IAAEE,uBAAlB,UACG,qBAAKH,UAAWC,IAAEG,8BAAlB,SACIjB,EAAgB,EACZ,cAAC,IAAD,CAAiBa,UAAWC,IAAEI,8BAA+BC,KAAMC,IAAeC,QAAS,WAAQpB,EAAiBD,EAAgB,GAAIF,EAAaD,GAAgB,MACrK,cAAC,IAAD,CAAiBgB,UAAWC,IAAEQ,iCAAkCH,KAAMC,QAG9E,qBAAKP,UAAWC,IAAES,2BAAlB,SAA+ClB,IAC/C,qBAAKQ,UAAWC,IAAEU,+BAAlB,SACIxB,EAAgBQ,EACZ,cAAC,IAAD,CAAiBK,UAAWC,IAAEI,8BAA+BC,KAAMM,IAAgBJ,QAAS,WAAQpB,EAAiBD,EAAgB,GAAIF,EAAaD,GAAgB,MACtK,cAAC,IAAD,CAAiBgB,UAAWC,IAAEQ,iCAAkCH,KAAMM,c,6DCrB7EC,EAAmC,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,eAAgBC,EAAwC,EAAxCA,iBAAkBC,EAAsB,EAAtBA,gBAAsB,EACpE9B,oBAAkB,GADkD,mBACjG+B,EADiG,KACrFC,EADqF,KAKlGC,EAAeC,sBAAYC,oBAAS,SAACC,GAAD,OAAWP,EAAiB,GAAI,GAAG,EAAOO,KAAQ,KAAO,IAQnG,OACG,qCACG,qBAAKtB,UAAWC,IAAEsB,mBAAlB,0BAGA,qBAAKvB,UAAWC,IAAEuB,kBAAlB,SACG,sBAAKxB,UAAWC,IAAEwB,uBAAlB,UACG,qBAAKzB,UAAWC,IAAEyB,iBAAlB,SACG,cAAC,IAAD,CAAiBpB,KAAMqB,QAE1B,qBAAK3B,UAAWC,IAAE2B,iBAAlB,SACG,cAAC,IAAD,CAAQC,cAtBD,CACnBC,KAAM,IAqB4CC,SAbpC,aAaF,SACI,gBACEC,EADF,EACEA,aACAC,EAFF,EAEEA,aAFF,OAIE,cAAC,IAAD,CAAMF,SAAUE,EAAhB,SACG,cAAC,IAAD,CAAOjC,UAAWC,IAAEiC,mBAAoBC,KAAK,OAAOL,KAAK,OAAOM,SAAU,SAACC,IAxB5E,SAACA,GACrB,IAAIf,EAAQe,EAAMC,OAAOhB,MACzBH,EAAaG,GACbJ,GAAc,GAqB6HqB,CAAeF,GAAQL,EAAaK,IAAUG,YAAa,mCAOnM,qBAAKxC,UAAWC,IAAEwC,mBAAlB,SACI3B,EACI,mCAAGE,EAAgB0B,OAAS,EACzB1B,EAAgB2B,KAAI,SAACC,GACpB,OACG,qBAAK5C,UAAWC,IAAE4C,kBAAlB,SACG,sBAAK7C,UAAWC,IAAE6C,uBAAlB,UACG,cAAC,IAAD,CAAS9C,UAAWC,IAAE8C,kBAAmBC,GAAE,mBAAcJ,EAAKK,IAA9D,SACG,qBAAKC,IAAKN,EAAKO,OAAOC,MAAQR,EAAKO,OAAOC,MAAQC,IAAUC,IAAI,OAEnE,cAAC,IAAD,CAAStD,UAAWC,IAAEsD,iBAAkBP,GAAE,mBAAcJ,EAAKK,IAA7D,SACIL,EAAKd,eAKnB,qBAAK9B,UAAWC,IAAEuD,aAAlB,yBAEH,mCAAGvC,GACF,qBAAKjB,UAAWC,IAAEwD,wBAAlB,SACG,qBAAKzD,UAAWC,IAAEyD,sBAAlB,SACG,cAACC,EAAA,EAAD,gBCYTC,EA/DoB,SAAC,GAAsE,IAApEC,EAAmE,EAAnEA,OAAQC,EAA2D,EAA3DA,cAAeC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,eAAmBC,EAAY,yEACtG,OACG,mCACG,qBAAKjE,UAAWC,IAAEiE,MAAlB,SACG,sBAAKlE,UAAWC,IAAEkE,WAAlB,UAEG,sBAAKnE,UAAWC,IAAEmE,YAAlB,UACG,qBAAKpE,UAAWC,IAAEoE,aAAlB,mBAGA,qBAAKrE,UAAWC,IAAEqE,YAAlB,SACG,sBAAKtE,UAAWC,IAAEsE,eAAlB,UACG,qBAAKvE,UAAWC,IAAEuE,iBAAlB,yBAGA,cAAC,IAAD,CAASxE,UAAWC,IAAEwE,kBAAmBzB,GAAI,aAA7C,4BAGLa,EACI,sBAAM7D,UAAWC,IAAEyE,eAAnB,UACEZ,EAAcnB,KAAI,SAACC,GACjB,OACGA,EAAK+B,UACL,sBAAK3E,UAAWC,IAAE2E,mBAAlB,UACG,sBAAK5E,UAAWC,IAAE4E,eAAlB,UACG,cAAC,IAAD,CAAS7E,UAAWC,IAAE6E,iBAAkB9B,GAAE,mBAAcJ,EAAKK,IAA7D,SACKL,EAAKO,OAAOC,MAET,qBAAKF,IAAKN,EAAKO,OAAOC,QADtB,qBAAKF,IAAKG,QAIlB,sBAAKrD,UAAWC,IAAE8E,gBAAlB,UACG,cAAC,IAAD,CAAS/E,UAAWC,IAAE+E,gBAAiBhC,GAAE,mBAAcJ,EAAKK,IAA5D,SAAmEL,EAAKd,OACxE,qBAAK9B,UAAWC,IAAEgF,sBAAlB,SACG,sBAAKjF,UAAWC,IAAEiF,qBAAlB,UACG,cAAC,IAAD,CAASlF,UAAWC,IAAEkF,yBAA0BnC,GAAI,YAApD,6BACA,qBAAKhD,UAAWC,IAAEmF,2BAAlB,SACG,wBAAQC,SAAUtB,EAAYuB,MAAK,SAACC,GAAD,OAAYA,IAAW3C,EAAKK,MAAKzC,QAAS,SAACgF,GAAQxB,EAAepB,EAAKK,KAA1G,SAAiH,cAAC,IAAD,CAAiB3C,KAAMmF,qBAMvJ,qBAAKzF,UAAWC,IAAEyF,uBApBsB9C,EAAKK,OAwBtD,cAAC,EAAD,CAAWjE,aAAciF,EAAMjF,aAAcD,cAAekF,EAAMlF,cAAeD,WAAYmF,EAAMnF,WAAYG,aAAcgF,EAAMhF,kBAEpI,qBAAKe,UAAWC,IAAE0F,eAAlB,+DAMR,qBAAK3F,UAAWC,IAAE2F,cAAlB,SACG,cAAC,EAAD,CAAa9E,eAAgBmD,EAAMnD,eAAgBC,iBAAkBkD,EAAMlD,iBAAkBC,gBAAiBiD,EAAMjD,4BCCvH6E,uBArBS,SAACC,GACtB,MAAO,CACJ/G,cAAe+G,EAAM5B,MAAMnF,cAC3BC,aAAc8G,EAAM5B,MAAMlF,aAC1BF,WAAYgH,EAAM5B,MAAMpF,WACxBgF,cAAegC,EAAM5B,MAAMJ,cAC3BiC,YAAaD,EAAM5B,MAAM6B,YACzBhC,YAAa+B,EAAM5B,MAAMH,YACzBF,OAAQiC,EAAME,KAAKnC,OACnB7C,gBAAiB8E,EAAM5B,MAAMlD,gBAC7BF,eAAgBgF,EAAM5B,MAAMpD,mBAGP,SAACmF,GACzB,MAAO,CACJlF,iBAAkB,SAACmF,EAAeC,EAAwBC,EAAmBC,GAAyBJ,EAASlF,YAAiBmF,EAAOC,EAAgBC,EAAUC,KACjKC,mBAAoB,SAACJ,EAAelH,EAAsBoH,EAAmBC,GAAmBJ,EAASK,YAAmBJ,EAAOlH,EAAcoH,EAAUC,KAC3JrC,eAAgB,SAACuB,GAAqBU,EAASjC,YAAeuB,KAC9DgB,oBAAqB,WAAcN,EAASM,mBAGnCV,EAlD6B,SAAC,GAAuF,IAArFU,EAAoF,EAApFA,oBAAqBxH,EAA+D,EAA/DA,cAAegH,EAAgD,EAAhDA,YAAaO,EAAmC,EAAnCA,mBAAuBrC,EAAY,4FACpF/E,oBAAS,GAD2E,mBACzHsH,EADyH,KACzGC,EADyG,KAEhIC,qBAAU,WACFF,IACFD,IACAE,GAAkB,MAErB,IACHC,qBAAU,WAEPJ,EADwBvH,EAAH,GACW,EAAM,MACtC,IAKH,OACG,mCACIgH,EACI,cAAC,EAAD,CAAOjF,eAAgBmD,EAAMnD,eAAgBC,iBAAkBkD,EAAMlD,iBAAkB8C,OAAQI,EAAMJ,OAAQ7C,gBAAiBiD,EAAMjD,gBAAiBhC,aAAciF,EAAMjF,aAAc8E,cAAeG,EAAMH,cAAe/E,cAAeA,EAAeD,WAAYmF,EAAMnF,WAAYG,aAP/Q,SAACD,GAEjBsH,EADYvH,EACcC,GAAc,EAAM,KAK6QgF,eAAgBC,EAAMD,eAAgBD,YAAaE,EAAMF,cAC5W,qBAAK/D,UAAWC,IAAEwD,wBAAlB,SACC,qBAAKzD,UAAWC,IAAEyD,sBAAlB,SACG,cAACiD,EAAA,EAAD","file":"static/js/4.d9eb0365.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/userIcon.77e62bce.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3owS2\",\"users__row\":\"Users_users__row__AgI0d\",\"users__wide\":\"Users_users__wide__dtQym\",\"users__narrow\":\"Users_users__narrow__6j9rR\",\"users__title\":\"Users_users__title__2D5iZ\",\"users__menu\":\"Users_users__menu__31-0O\",\"menuUsers__row\":\"Users_menuUsers__row__Ztvi7\",\"menuUsers__title\":\"Users_menuUsers__title__1Y3Ls\",\"menuUsers__button\":\"Users_menuUsers__button__1iPNP\",\"requestUsers__item\":\"Users_requestUsers__item__M6AX5\",\"itemUsers__row\":\"Users_itemUsers__row__20z76\",\"itemUsers__image\":\"Users_itemUsers__image__1hc5R\",\"itemUsers__body\":\"Users_itemUsers__body__3VY2f\",\"bodyUsers__name\":\"Users_bodyUsers__name__3Rgfu\",\"bodyUsers__navigation\":\"Users_bodyUsers__navigation__1cOv9\",\"navigationUsers__row\":\"Users_navigationUsers__row__3PUav\",\"navigationUsers__message\":\"Users_navigationUsers__message__3Sdb5\",\"navigationUsers__subscribe\":\"Users_navigationUsers__subscribe__YWG9u\",\"requestUsers__line\":\"Users_requestUsers__line__3jv6z\",\"login__warning\":\"Users_login__warning__hyNoA\",\"preloader__usersWrapper\":\"Users_preloader__usersWrapper__1nF3g\",\"preloader__usersBlock\":\"Users_preloader__usersBlock__1p_FH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationClassic\":\"Paginator_paginationClassic__Y3x1U\",\"paginationClassic__buttonLeft\":\"Paginator_paginationClassic__buttonLeft__3ieFq\",\"paginationClassic__buttonAble\":\"Paginator_paginationClassic__buttonAble__2iL_1\",\"paginationClassic__buttonDisAble\":\"Paginator_paginationClassic__buttonDisAble__O9HZu\",\"paginationClassic__buttonRight\":\"Paginator_paginationClassic__buttonRight__LlYbg\",\"paginationClassic__content\":\"Paginator_paginationClassic__content__WTmMv\",\"paginationClassic__row\":\"Paginator_paginationClassic__row__UFxw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users__searchTitle\":\"UsersSearch_users__searchTitle__290yp\",\"users__searchForm\":\"UsersSearch_users__searchForm__1bZI1\",\"users__searchForm__row\":\"UsersSearch_users__searchForm__row__2bJBS\",\"searchForm__icon\":\"UsersSearch_searchForm__icon__2LOKa\",\"searchForm__form\":\"UsersSearch_searchForm__form__33pCS\",\"searchForm__search\":\"UsersSearch_searchForm__search__9Kolu\",\"users__searchItems\":\"UsersSearch_users__searchItems__2SzLg\",\"users__searchItem\":\"UsersSearch_users__searchItem__tvQPX\",\"users__searchItem__row\":\"UsersSearch_users__searchItem__row__2noZt\",\"searchItem__photo\":\"UsersSearch_searchItem__photo__2pHy_\",\"searchItem__name\":\"UsersSearch_searchItem__name__Dfshs\",\"preloader__usersWrapper\":\"UsersSearch_preloader__usersWrapper__1czih\",\"preloader__usersBlock\":\"UsersSearch_preloader__usersBlock__3vGnU\"};","import React, { useState } from 'react'\r\nimport s from './Paginator.module.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\ntype PropsType = {\r\n   totalCount: number | null,\r\n   countFollowed: number,\r\n   pageFollowed: number,\r\n   onPageChange: (pageFollowed: number) => void\r\n}\r\nconst Paginator: React.FC<PropsType> = ({ totalCount, countFollowed, pageFollowed, onPageChange }) => {\r\n   let [portionNumber, setPortionNumber] = useState<number>(1)\r\n   let pagesCount = Math.ceil(totalCount as number / countFollowed)\r\n   let pages: Array<number> = []\r\n   for (let i = 1; i <= pagesCount; i++) {\r\n      pages.push(i)\r\n   }\r\n   let portionSize = 1\r\n   let portionsCount = Math.ceil(pagesCount / portionSize)\r\n   let leftPortionPageNumber = ((portionNumber - 1) * portionSize) + 1\r\n   let rightPortionNumber = portionNumber * portionSize\r\n   pages = pages.filter((el) => {\r\n      return el >= leftPortionPageNumber && el <= rightPortionNumber\r\n   })\r\n   return (\r\n      <div className={s.paginationClassic}>\r\n         <div className={s.paginationClassic__row}>\r\n            <div className={s.paginationClassic__buttonLeft}>\r\n               {portionNumber > 1\r\n                  ? <FontAwesomeIcon className={s.paginationClassic__buttonAble} icon={faChevronLeft} onClick={() => { setPortionNumber(portionNumber - 1); onPageChange(pageFollowed -= 1) }} />\r\n                  : <FontAwesomeIcon className={s.paginationClassic__buttonDisAble} icon={faChevronLeft} />\r\n               }\r\n            </div>\r\n            <div className={s.paginationClassic__content}>{pages}</div>\r\n            <div className={s.paginationClassic__buttonRight}>\r\n               {portionNumber < portionsCount\r\n                  ? <FontAwesomeIcon className={s.paginationClassic__buttonAble} icon={faChevronRight} onClick={() => { setPortionNumber(portionNumber + 1); onPageChange(pageFollowed += 1) }} />\r\n                  : <FontAwesomeIcon className={s.paginationClassic__buttonDisAble} icon={faChevronRight} />\r\n               }\r\n            </div>\r\n         </div>\r\n      </div >\r\n\r\n   )\r\n}\r\nexport default Paginator","import React, { ChangeEvent, useCallback, useState } from 'react'\r\nimport s from './UsersSearch.module.css'\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { debounce } from 'lodash';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport userIcon from '../../../assets/images/userIcon.png'\r\nimport { NavLink } from 'react-router-dom';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport { UsersType } from '../../../redux/users.reducer';\r\n\r\ntype PropsType = {\r\n   isUserSelected: boolean,\r\n   getUsersSelectTC: (count: number, pageUnfollowed: number, follower: boolean, term: string) => void,\r\n   usersUnfollowed: Array<UsersType>\r\n}\r\nexport const UsersSearch: React.FC<PropsType> = ({ isUserSelected, getUsersSelectTC, usersUnfollowed }) => {\r\n   const [isOnChange, setIsOnChange] = useState<boolean>(false)\r\n   const initialValues = {\r\n      name: ''\r\n   }\r\n   const debounceSave = useCallback(debounce((value) => getUsersSelectTC(10, 1, false, value), 1000), [])\r\n   const onHandleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n      let value = event.target.value\r\n      debounceSave(value)\r\n      setIsOnChange(true)\r\n   }\r\n   const onSubmit = () => {\r\n   }\r\n   return (\r\n      <>\r\n         <div className={s.users__searchTitle}>\r\n            Find friends\r\n         </div>\r\n         <div className={s.users__searchForm}>\r\n            <div className={s.users__searchForm__row}>\r\n               <div className={s.searchForm__icon}>\r\n                  <FontAwesomeIcon icon={faSearch} />\r\n               </div>\r\n               <div className={s.searchForm__form}>\r\n                  <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n                     {({\r\n                        handleChange,\r\n                        handleSubmit\r\n                     }) => (\r\n                        <Form onSubmit={handleSubmit}>\r\n                           <Field className={s.searchForm__search} type=\"text\" name=\"name\" onChange={(event: ChangeEvent<HTMLInputElement>) => { onHandleChange(event); handleChange(event) }} placeholder={'Enter your request'} />\r\n                        </Form>\r\n                     )}\r\n                  </Formik>\r\n               </div>\r\n            </div>\r\n         </div>\r\n         <div className={s.users__searchItems}>\r\n            {isUserSelected\r\n               ? <>{usersUnfollowed.length > 0\r\n                  ? usersUnfollowed.map((user) => {\r\n                     return (\r\n                        <div className={s.users__searchItem}>\r\n                           <div className={s.users__searchItem__row}>\r\n                              <NavLink className={s.searchItem__photo} to={`/profile/${user.id}`}>\r\n                                 <img src={user.photos.small ? user.photos.small : userIcon} alt='' />\r\n                              </NavLink>\r\n                              <NavLink className={s.searchItem__name} to={`/profile/${user.id}`}>\r\n                                 {user.name}\r\n                              </NavLink>\r\n                           </div>\r\n                        </div>)\r\n                  })\r\n                  : <div className={s.users__error}>Not found</div>}\r\n               </>\r\n               : <>{isOnChange &&\r\n                  <div className={s.preloader__usersWrapper}>\r\n                     <div className={s.preloader__usersBlock}>\r\n                        <Preloader />\r\n                     </div>\r\n                  </div >\r\n               }</>\r\n            }\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport s from './Users.module.css'\r\nimport Paginator from '../Common/Paginator/Paginator'\r\nimport { NavLink } from 'react-router-dom'\r\nimport userIcon from '../../assets/images/userIcon.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserMinus } from '@fortawesome/free-solid-svg-icons'\r\nimport { UsersType } from '../../redux/users.reducer'\r\nimport { UsersSearch } from './UsersSearch/UsersSearch'\r\n\r\ntype PropsType = {\r\n   isAuth: boolean,\r\n   usersFollowed: Array<UsersType>,\r\n   readyToggle: Array<number>,\r\n   totalCount: number | null,\r\n   isUserSelected: boolean,\r\n   countFollowed: number,\r\n   pageFollowed: number,\r\n   usersUnfollowed: Array<UsersType>,\r\n   onPageChange: (pageFollowed: number) => void\r\n   unfollowUserTC: (userId: number) => void,\r\n   getUsersSelectTC: (count: number, pageUnfollowed: number, follower: boolean, term: string) => void\r\n}\r\nconst Users: React.FC<PropsType> = ({ isAuth, usersFollowed, readyToggle, unfollowUserTC, ...props }) => {\r\n   return (\r\n      <>\r\n         <div className={s.users}>\r\n            <div className={s.users__row}>\r\n               {/*---WIDE COLUMN---*/}\r\n               <div className={s.users__wide}>\r\n                  <div className={s.users__title}>\r\n                     Users\r\n                  </div>\r\n                  <div className={s.users__menu}>\r\n                     <div className={s.menuUsers__row}>\r\n                        <div className={s.menuUsers__title}>\r\n                           My requests\r\n                  </div>\r\n                        <NavLink className={s.menuUsers__button} to={'/users/all'}>Find more</NavLink>\r\n                     </div>\r\n                  </div>\r\n                  {isAuth\r\n                     ? < div className={s.users__request}>\r\n                        {usersFollowed.map((user) => {\r\n                           return (\r\n                              user.followed &&\r\n                              <div className={s.requestUsers__item} key={user.id}>\r\n                                 <div className={s.itemUsers__row}>\r\n                                    <NavLink className={s.itemUsers__image} to={`/profile/${user.id}`}>\r\n                                       {!user.photos.small\r\n                                          ? <img src={userIcon} />\r\n                                          : <img src={user.photos.small} />\r\n                                       }\r\n                                    </NavLink>\r\n                                    <div className={s.itemUsers__body}>\r\n                                       <NavLink className={s.bodyUsers__name} to={`/profile/${user.id}`}>{user.name}</NavLink>\r\n                                       <div className={s.bodyUsers__navigation}>\r\n                                          <div className={s.navigationUsers__row}>\r\n                                             <NavLink className={s.navigationUsers__message} to={'/messages'}>Write a message</NavLink>\r\n                                             <div className={s.navigationUsers__subscribe}>\r\n                                                <button disabled={readyToggle.some((userId) => userId === user.id)} onClick={(e) => { unfollowUserTC(user.id) }}><FontAwesomeIcon icon={faUserMinus} /></button>\r\n                                             </div>\r\n                                          </div>\r\n                                       </div>\r\n                                    </div>\r\n                                 </div>\r\n                                 <div className={s.requestUsers__line}></div>\r\n                              </div>\r\n                           )\r\n                        })}\r\n                        <Paginator pageFollowed={props.pageFollowed} countFollowed={props.countFollowed} totalCount={props.totalCount} onPageChange={props.onPageChange} />\r\n                     </div>\r\n                     : <div className={s.login__warning}>\r\n                        To view this page, you need to go to the site.\r\n               </div>\r\n                  }\r\n               </div>\r\n               {/*---NARROW COLUMN---*/}\r\n               <div className={s.users__narrow}>\r\n                  <UsersSearch isUserSelected={props.isUserSelected} getUsersSelectTC={props.getUsersSelectTC} usersUnfollowed={props.usersUnfollowed} />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\nexport default Users\r\n","import React, { useEffect, useState } from 'react'\r\nimport s from './Users.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { AppReducerType } from '../../redux/store'\r\nimport { getOnceUnfollowedTC, getUsersFollowedTC, getUsersSelectTC, getUsersUnfollowedTC, unfollowUserTC } from '../../redux/users.reducer'\r\nimport { UsersType } from '../../redux/users.reducer'\r\nimport PreloaderLine from '../Common/Preloader/PreloaderLine/PreloaderLine'\r\nimport Users from './Users'\r\nimport { AnyAction } from 'redux'\r\nimport { ThunkDispatch } from 'redux-thunk'\r\n\r\ntype MapStateToPropsType = {\r\n   isAuth: boolean,\r\n   usersFollowed: Array<UsersType>,\r\n   readyToggle: Array<number>,\r\n   totalCount: number | null,\r\n   countFollowed: number,\r\n   pageFollowed: number,\r\n   isReadyPage: boolean,\r\n   usersUnfollowed: Array<UsersType>,\r\n   isUserSelected: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n   unfollowUserTC: (userId: number) => void,\r\n   getUsersFollowedTC: (count: number, pageFollowed: number, boolean: boolean, term: string) => void,\r\n   getOnceUnfollowedTC: () => void,\r\n   getUsersSelectTC: (count: number, pageUnfollowed: number, follower: boolean, term: string) => void\r\n}\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst UsersContainer: React.FC<PropsType> = ({ getOnceUnfollowedTC, countFollowed, isReadyPage, getUsersFollowedTC, ...props }) => {\r\n   const [isFetchingOnce, setIsFetchingOnce] = useState(false)\r\n   useEffect(() => {\r\n      if (!isFetchingOnce) {\r\n         getOnceUnfollowedTC()\r\n         setIsFetchingOnce(true)\r\n      }\r\n   }, [])\r\n   useEffect(() => {\r\n      let [page, count] = [1, countFollowed]\r\n      getUsersFollowedTC(count, page, true, '')\r\n   }, [])\r\n   let onPageChange = (pageFollowed: number) => {\r\n      let count = countFollowed\r\n      getUsersFollowedTC(count, pageFollowed, true, '')\r\n   }\r\n   return (\r\n      <>\r\n         {isReadyPage\r\n            ? <Users isUserSelected={props.isUserSelected} getUsersSelectTC={props.getUsersSelectTC} isAuth={props.isAuth} usersUnfollowed={props.usersUnfollowed} pageFollowed={props.pageFollowed} usersFollowed={props.usersFollowed} countFollowed={countFollowed} totalCount={props.totalCount} onPageChange={onPageChange} unfollowUserTC={props.unfollowUserTC} readyToggle={props.readyToggle} />\r\n            : <div className={s.preloader__usersWrapper}>\r\n               <div className={s.preloader__usersBlock}>\r\n                  <PreloaderLine />\r\n               </div>\r\n            </div >\r\n         }\r\n      </>\r\n   )\r\n}\r\nconst mapStateToProps = (state: AppReducerType): MapStateToPropsType => {\r\n   return {\r\n      countFollowed: state.users.countFollowed,\r\n      pageFollowed: state.users.pageFollowed,\r\n      totalCount: state.users.totalCount,\r\n      usersFollowed: state.users.usersFollowed,\r\n      isReadyPage: state.users.isReadyPage,\r\n      readyToggle: state.users.readyToggle,\r\n      isAuth: state.auth.isAuth,\r\n      usersUnfollowed: state.users.usersUnfollowed,\r\n      isUserSelected: state.users.isUserSelected\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>): MapDispatchToPropsType => {\r\n   return {\r\n      getUsersSelectTC: (count: number, pageUnfollowed: number, follower: boolean, term: string): void => { dispatch(getUsersSelectTC(count, pageUnfollowed, follower, term)) },\r\n      getUsersFollowedTC: (count: number, pageFollowed: number, follower: boolean, term: string) => { dispatch(getUsersFollowedTC(count, pageFollowed, follower, term)) },\r\n      unfollowUserTC: (userId: number) => { dispatch(unfollowUserTC(userId)) },\r\n      getOnceUnfollowedTC: (): void => { dispatch(getOnceUnfollowedTC()) }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer)"],"sourceRoot":""}