{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/ProfilePostCreate/ProfilePost.module.css","components/Profile/ProfilePostList/ProfilePostList.module.css","assets/images/logo.jpg","components/Profile/ProfilePostCreate/ProfilePost.jsx","components/Profile/ProfilePostList/ProfilePostList.jsx","components/Profile/Profile.jsx"],"names":["module","exports","ProfileReduxPost","reduxForm","form","props","modalPost","onSubmit","handleSubmit","className","s","addPost__form","Field","component","input","textareaRef","useRef","useState","currentValue","setCurrentValue","useEffect","current","style","height","scrollHeight","ref","autoFocus","addPost__textarea","value","onChange","e","target","placeholder","name","addPost__button","type","onClick","setModalPost","addPost__close","icon","faTimes","addPost__input","readOnly","ProfilePostList","posts","profilePosts","map","post","profile__newPost","cn","newPostProfile__row","newPostProfile","newPostProfile__logo","src","profileMeInfo","photos","small","newPostProfile__body","newPostProfile__name","fullName","newPostProfile__date","date","newPostProfileContent","newPostProfileRemove","removeProfilePost","id","Profile","isShowDetails","editIsShowDetails","generateDate","Date","profile","profile__row","profile__narrow","profile__me","meProfile__photo","profileInfo","logo","isOwner","meProfile__block","meProfile__refresh","refreshProfile__fake","htmlFor","faArrowAltCircleUp","refreshProfile__arrowTop","refreshProfile__input","image","files","setProfileImage","onChangeAvatar","profile__edit","editProfile__settings","to","profile__enter","faHome","enterProfile__link","editProfile__messages","profile__wide","profile__info","infoProfile__fullName","profileStatus","infoProfile__status","editModalStatus","infoProfile__fakeStatus","statusProfile__user","statusProfile__empty","infoProfile__line","infoProfile__information","informationProfile__row","informationProfile","informationProfile__title","aboutMe","informationProfile__answer","lookingForAJobDescription","lookingForAJob","infoProfile__showDetails","contacts","youtube","facebook","website","github","isAuth","profile__addPost","addPostProfile__row","addPostProfile__logo","dataPosts","toString","toLocaleDateString","toLocaleTimeString","dataPost","addProfilePost","length","ProfileContainer","userId","match","params","getProfileInfo","getProfileStatus","getProfileMeInfo","history","push","profileImage","modalStatus","birthday","setProfileStatus","preloader__profileWrapper","preloader__profileBlock","Preloader","withRouterUrlUserId","withRouter","connect","state","auth","dispatch","status"],"mappings":"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","file":"static/js/3.6b35eb93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__row\":\"Profile_profile__row__1CVWG\",\"profile__narrow\":\"Profile_profile__narrow__1OWXU\",\"profile__wide\":\"Profile_profile__wide__18zXg\",\"profile__me\":\"Profile_profile__me__3rVSh\",\"meProfile__photo\":\"Profile_meProfile__photo__31lpA\",\"meProfile__block\":\"Profile_meProfile__block__2Xu6f\",\"refreshProfile__fake\":\"Profile_refreshProfile__fake__3hbm-\",\"refreshProfile__input\":\"Profile_refreshProfile__input__uXC4n\",\"refreshProfile__arrowTop\":\"Profile_refreshProfile__arrowTop__1HwEN\",\"profile__edit\":\"Profile_profile__edit__21_4X\",\"editProfile__settings\":\"Profile_editProfile__settings__2TiCS\",\"editProfile__messages\":\"Profile_editProfile__messages__2UMg9\",\"profile__enter\":\"Profile_profile__enter__u-Jpm\",\"enterProfile__link\":\"Profile_enterProfile__link__1zvji\",\"profile__info\":\"Profile_profile__info__3LONr\",\"infoProfile__fullName\":\"Profile_infoProfile__fullName__28uuA\",\"infoProfile__status\":\"Profile_infoProfile__status__2SFhu\",\"infoProfile__fakeStatus\":\"Profile_infoProfile__fakeStatus__KX2pA\",\"statusProfile__user\":\"Profile_statusProfile__user__1TfzD\",\"statusProfile__empty\":\"Profile_statusProfile__empty__1bxLY\",\"infoProfile__line\":\"Profile_infoProfile__line__3Jgdk\",\"informationProfile\":\"Profile_informationProfile__1oCrd\",\"informationProfile__row\":\"Profile_informationProfile__row__3e5PC\",\"informationProfile__title\":\"Profile_informationProfile__title__2tvxr\",\"informationProfile__answer\":\"Profile_informationProfile__answer__2UYoY\",\"infoProfile__showDetails\":\"Profile_infoProfile__showDetails__22RDe\",\"profile__addPost\":\"Profile_profile__addPost__3b4r9\",\"addPostProfile__row\":\"Profile_addPostProfile__row__3kzTp\",\"addPostProfile__logo\":\"Profile_addPostProfile__logo__23IWY\",\"preloader__profileWrapper\":\"Profile_preloader__profileWrapper__kbwou\",\"preloader__profileBlock\":\"Profile_preloader__profileBlock__1RE-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost__form\":\"ProfilePost_addPost__form__V73P5\",\"addPost__textarea\":\"ProfilePost_addPost__textarea__2IIEd\",\"addPost__button\":\"ProfilePost_addPost__button__2l3uW\",\"addPost__input\":\"ProfilePost_addPost__input__39O1q\",\"addPost__close\":\"ProfilePost_addPost__close__3_o1E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__newPost\":\"ProfilePostList_profile__newPost__3QRUc\",\"newPostProfileRemove\":\"ProfilePostList_newPostProfileRemove__2nJRU\",\"newPostProfile\":\"ProfilePostList_newPostProfile__ZkUOf\",\"newPostProfile__row\":\"ProfilePostList_newPostProfile__row__1Iatl\",\"newPostProfile__logo\":\"ProfilePostList_newPostProfile__logo__5hIoe\",\"newPostProfile__body\":\"ProfilePostList_newPostProfile__body__3vnUI\",\"newPostProfile__name\":\"ProfilePostList_newPostProfile__name__3_Me3\",\"newPostProfile__date\":\"ProfilePostList_newPostProfile__date__oQYEX\",\"newPostProfileContent\":\"ProfilePostList_newPostProfileContent__1irN2\"};","export default __webpack_public_path__ + \"static/media/logo.94e5c599.jpg\";","import React, { useEffect, useRef, useState } from \"react\"\r\nimport s from './ProfilePost.module.css'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst ProfilePost = (props) => {\r\n   const AutoHeightTextarea = ({ input, ...props }) => {\r\n      const textareaRef = useRef()\r\n      const [currentValue, setCurrentValue] = useState(\"\")\r\n      useEffect(() => {\r\n         textareaRef.current.style.height = '2.8em'\r\n         const scrollHeight = textareaRef.current.scrollHeight\r\n         textareaRef.current.style.height = `${scrollHeight}px`\r\n      }, [currentValue]);\r\n      return (\r\n         <textarea {...input}{...props} ref={textareaRef} autoFocus={true} className={s.addPost__textarea} value={currentValue} onChange={e => setCurrentValue(e.target.value)} placeholder={'Anything new?'} />\r\n      )\r\n   }\r\n   return (\r\n      !props.modalPost\r\n         ? <form onSubmit={props.handleSubmit} className={s.addPost__form}>\r\n            <Field component={'input'} name={'posts'} className={s.addPost__input} placeholder={'Anything new?'} onClick={() => props.setModalPost(true)} readOnly />\r\n         </form >\r\n         : <>\r\n            <form onSubmit={props.handleSubmit} className={s.addPost__form}>\r\n               <Field component={AutoHeightTextarea} className={s.addPost__textarea} name={'post'} />\r\n               <button className={s.addPost__button} type={'submit'}>Publish</button>\r\n            </form >\r\n            <div onClick={() => props.setModalPost(false)} className={s.addPost__close}>\r\n               <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n         </>\r\n   )\r\n}\r\nexport const ProfileReduxPost = reduxForm({ form: 'profilePost' })(ProfilePost)","import React from 'react'\r\nimport s from './ProfilePostList.module.css'\r\nimport cn from 'classnames'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst ProfilePostList = (props) => {\r\n   let posts = props.profilePosts.map((post) => {\r\n      return (\r\n         <div key={post.id} className={s.profile__newPost}>\r\n            <div className={cn(s.newPostProfile__row, s.newPostProfile)}>\r\n               <div className={s.newPostProfile__logo}>\r\n                  <img src={props.profileMeInfo.photos.small} />\r\n               </div>\r\n               <div className={s.newPostProfile__body}>\r\n                  <div className={s.newPostProfile__name}>\r\n                     {props.profileMeInfo.fullName}\r\n                  </div>\r\n                  <div className={s.newPostProfile__date}>\r\n                     {post.date}\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className={s.newPostProfileContent}>\r\n               {post.post}\r\n            </div>\r\n            <div className={s.newPostProfileRemove} onClick={(e) => { props.removeProfilePost(post.id) }}>\r\n               <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n         </div>\r\n      )\r\n   })\r\n   return (\r\n      <>\r\n         {posts}\r\n      </>\r\n   )\r\n}\r\nexport default ProfilePostList","import React, { useEffect, useState } from 'react'\r\nimport s from './Profile.module.css'\r\nimport cn from 'classnames'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink, withRouter } from 'react-router-dom'\r\nimport { addProfilePost, getProfileInfo, getProfileMeInfo, getProfileStatus, removeProfilePost, setProfileImage, setProfileStatus } from '../../redux/profile.reducer'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\nimport logo from '../../assets/images/logo.jpg'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowAltCircleUp, faHome } from '@fortawesome/free-solid-svg-icons'\r\nimport { ProfileReduxPost } from './ProfilePostCreate/ProfilePost'\r\nimport ProfilePostList from './ProfilePostList/ProfilePostList'\r\n\r\nconst Profile = (props) => {\r\n   const [modalPost, setModalPost] = useState(false)\r\n   const [isShowDetails, editIsShowDetails] = useState(false)\r\n   const onChangeAvatar = (e) => {\r\n      let image = e.target.files[0]\r\n      props.setProfileImage(image)\r\n   }\r\n   const generateDate = () => {\r\n      return new Date()\r\n   }\r\n   const onSubmit = (dataPosts) => {\r\n      setModalPost(false)\r\n      let id = `f${(+new Date).toString(16)}`;\r\n      let date = `${generateDate().toLocaleDateString()} at ${generateDate().toLocaleTimeString()}`\r\n      const dataPost = {\r\n         id: id,\r\n         post: dataPosts.post,\r\n         date: date\r\n      }\r\n      props.addProfilePost(dataPost)\r\n   }\r\n   return (\r\n      <div className={s.profile}>\r\n         <div className={s.profile__row}>\r\n            {/* NARROW COLUMN */}\r\n            <div className={s.profile__narrow}>\r\n               <div className={s.profile__me}>\r\n                  <div className={s.meProfile__photo}><img src={props.profileInfo.photos.small ? props.profileInfo.photos.small : logo} />\r\n                     {props.isOwner &&\r\n                        <div className={s.meProfile__block}>\r\n                           <div className={s.meProfile__refresh}>\r\n                              <label className={s.refreshProfile__fake} htmlFor={'avatar-img'}><FontAwesomeIcon icon={faArrowAltCircleUp} className={s.refreshProfile__arrowTop} /><span>Refresh photo</span></label>\r\n                              <input className={s.refreshProfile__input} type='file' id={'avatar-img'} name='avatar-img' onChange={(e) => { onChangeAvatar(e) }} />\r\n                           </div>\r\n                        </div>\r\n                     }\r\n                  </div>\r\n               </div>\r\n               {props.isOwner\r\n                  ? <>\r\n                     <div className={s.profile__edit}>\r\n                        <NavLink className={s.editProfile__settings} to={'/settings'}>Edit</NavLink>\r\n                     </div>\r\n                     <div className={s.profile__enter}>\r\n                        <NavLink to={'/settings'}><span><FontAwesomeIcon icon={faHome} className={s.enterProfile__link} />Enter your contacts</span></NavLink>\r\n                     </div>\r\n                  </>\r\n                  : < div className={s.profile__edit}>\r\n                     <NavLink className={s.editProfile__messages} to={'/messages'}>Write a message</NavLink>\r\n                  </div>\r\n               }\r\n            </div>\r\n            {/* WIDE COLUMN */}\r\n            <div className={s.profile__wide}>\r\n               <div className={s.profile__info}>\r\n                  <div className={s.infoProfile__fullName}>\r\n                     <h4>{props.profileInfo.fullName}</h4>\r\n                  </div>\r\n                  {props.isOwner\r\n                     ? <>\r\n                        {props.profileStatus\r\n                           ? <div className={s.infoProfile__status} >\r\n                              <div onClick={(e) => { props.editModalStatus(true) }}>{props.profileStatus}</div>\r\n                           </div>\r\n                           : <div className={s.infoProfile__status} >\r\n                              <div className={s.infoProfile__fakeStatus} onClick={(e) => { props.editModalStatus(true) }}>status</div>\r\n                           </div>\r\n                        }\r\n                     </>\r\n                     : <>\r\n                        {props.profileStatus\r\n                           ? <div className={s.statusProfile__user}>\r\n                              <div>{props.profileStatus}</div>\r\n                           </div>\r\n                           : <div className={s.statusProfile__empty}></div>\r\n                        }\r\n                     </>\r\n                  }\r\n                  <div className={s.infoProfile__line}></div>\r\n                  <div className={s.infoProfile__information}>\r\n                     <div className={cn(s.informationProfile__row, s.informationProfile)}>\r\n                        <span className={s.informationProfile__title}>About me: </span>\r\n                        {props.profileInfo.aboutMe\r\n                           ? <span className={s.informationProfile__answer} >{props.profileInfo.aboutMe}</span>\r\n                           : <span className={s.informationProfile__answer}>not specified</span>\r\n                        }\r\n                        <span className={s.informationProfile__title}>Town: </span>\r\n                        {props.profileInfo.lookingForAJobDescription\r\n                           ? <span className={s.informationProfile__answer}>{props.profileInfo.lookingForAJobDescription}</span>\r\n                           : <span className={s.informationProfile__answer}>not specified</span>\r\n                        }\r\n                        <span className={s.informationProfile__title}>Family status: </span>\r\n                        {props.profileInfo.lookingForAJob\r\n                           ? <span className={s.informationProfile__answer}>married</span>\r\n                           : <span className={s.informationProfile__answer}>not married</span>\r\n                        }\r\n                     </div>\r\n                  </div>\r\n                  {isShowDetails\r\n                     ? <>\r\n                        <div className={s.infoProfile__showDetails} onClick={(e) => editIsShowDetails(false)}>\r\n                           <span>Hide detailed information</span>\r\n                        </div>\r\n                        <div className={s.infoProfile__information}>\r\n                           <div className={s.infoProfile__line}></div>\r\n                           <div className={cn(s.informationProfile__row, s.informationProfile)}>\r\n                              <span className={s.informationProfile__title}>YouTube: </span>\r\n                              {props.profileInfo.contacts.youtube\r\n                                 ? <span className={s.informationProfile__answer}>{props.profileInfo.contacts.youtube}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>Facebook: </span>\r\n                              {props.profileInfo.contacts.facebook\r\n                                 ? <span className={s.informationProfile__answer}>{props.profileInfo.contacts.facebook}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>LinkedIn: </span>\r\n                              {props.profileInfo.contacts.website\r\n                                 ? <span className={s.informationProfile__answer}>{props.profileInfo.contacts.website}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>GitHub: </span>\r\n                              {props.profileInfo.contacts.github\r\n                                 ? <span className={s.informationProfile__answer}>{props.profileInfo.contacts.github}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                           </div>\r\n                        </div>\r\n                     </>\r\n                     : <>\r\n                        <div className={s.infoProfile__showDetails} onClick={(e) => editIsShowDetails(true)}>\r\n                           <span>Show details</span>\r\n                        </div>\r\n                        <div></div>\r\n                     </>\r\n                  }\r\n                  <div className={s.infoProfile__line}></div>\r\n               </div>\r\n               {props.isOwner && props.isAuth &&\r\n                  <>\r\n                     <div className={s.profile__addPost}>\r\n                        <div className={s.addPostProfile__row}>\r\n                           <div className={s.addPostProfile__logo}>\r\n                              <img src={props.profileMeInfo.photos.small} />\r\n                           </div>\r\n                           <ProfileReduxPost onSubmit={onSubmit} setModalPost={setModalPost} modalPost={modalPost} />\r\n                        </div>\r\n                     </div>\r\n                     {props.profilePosts.length > 0 &&\r\n                        <ProfilePostList removeProfilePost={props.removeProfilePost} profileMeInfo={props.profileMeInfo} profilePosts={props.profilePosts} />\r\n                     }\r\n                  </>\r\n               }\r\n            </div>\r\n         </div>\r\n      </div >\r\n   )\r\n}\r\nexport const ProfileContainer = (props) => {\r\n   useEffect(() => {\r\n      let userId = props.match.params.userId\r\n      if (!userId) {\r\n         userId = props.userId\r\n         if (!userId) {\r\n            props.history.push('/login')\r\n         }\r\n         else {\r\n            props.getProfileInfo(userId)\r\n            props.getProfileMeInfo(userId)\r\n            props.getProfileStatus(userId)\r\n         }\r\n      }\r\n      else {\r\n         props.getProfileInfo(userId)\r\n         props.getProfileStatus(userId)\r\n      }\r\n   }, [props.match.params.userId, props.profileImage, props.isAuth])\r\n\r\n\r\n   return (\r\n      <>\r\n         {props.isAuth\r\n            ? props.profileInfo && props.profileMeInfo\r\n               ? <Profile removeProfilePost={props.removeProfilePost} profilePosts={props.profilePosts} addProfilePost={props.addProfilePost} profileMeInfo={props.profileMeInfo} modalStatus={props.modalStatus} editModalStatus={props.editModalStatus} profileInfo={props.profileInfo} birthday={props.birthday} lookingForAJobDescription={props.lookingForAJobDescription} setProfileImage={props.setProfileImage} isOwner={!props.match.params.userId} profileStatus={props.profileStatus} profileImage={props.profileImage} setProfileStatus={props.setProfileStatus} lookingForAJob={props.lookingForAJob} isAuth={props.isAuth} />\r\n               : <div className={s.preloader__profileWrapper}>\r\n                  <div className={s.preloader__profileBlock}>\r\n                     <Preloader />\r\n                  </div>\r\n               </div >\r\n            : props.profileInfo\r\n               ? <Profile removeProfilePost={props.removeProfilePost} profilePosts={props.profilePosts} addProfilePost={props.addProfilePost} modalStatus={props.modalStatus} editModalStatus={props.editModalStatus} profileInfo={props.profileInfo} birthday={props.birthday} lookingForAJobDescription={props.lookingForAJobDescription} setProfileImage={props.setProfileImage} isOwner={!props.match.params.userId} profileStatus={props.profileStatus} profileImage={props.profileImage} setProfileStatus={props.setProfileStatus} lookingForAJob={props.lookingForAJob} />\r\n               : <div className={s.preloader__profileWrapper}>\r\n                  <div className={s.preloader__profileBlock}>\r\n                     <Preloader />\r\n                  </div>\r\n               </div >\r\n         }\r\n      </>\r\n   )\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      userId: state.auth.id,\r\n      isAuth: state.auth.isAuth,\r\n      profileInfo: state.profile.profileInfo,\r\n      profileImage: state.profile.profileImage,\r\n      profileStatus: state.profile.profileStatus,\r\n      profileMeInfo: state.profile.profileMeInfo,\r\n      profilePosts: state.profile.profilePosts\r\n\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      getProfileInfo: (userId) => { dispatch(getProfileInfo(userId)) },\r\n      setProfileImage: (image) => { dispatch(setProfileImage(image)) },\r\n      getProfileStatus: (userId) => { dispatch(getProfileStatus(userId)) },\r\n      setProfileStatus: (status) => { dispatch(setProfileStatus(status)) },\r\n      getProfileMeInfo: (userId) => { dispatch(getProfileMeInfo(userId)) },\r\n      addProfilePost: (dataPost) => { dispatch(addProfilePost(dataPost)) },\r\n      removeProfilePost: (id) => { dispatch(removeProfilePost(id)) }\r\n   }\r\n}\r\nlet withRouterUrlUserId = withRouter(ProfileContainer)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouterUrlUserId)"],"sourceRoot":""}