{"version":3,"sources":["components/Login/Login.module.css","components/Login/LoginForm.module.css","components/Login/LoginForm.jsx","components/Login/Login.jsx"],"names":["module","exports","LoginReduxForm","reduxForm","form","props","useState","checked","editChecked","s","login__checkbox","classChecked","editClassChecked","className","login__form","onSubmit","handleSubmit","login__item","Field","login__input","component","Input","type","name","validate","required","onClick","e","CheckBoxLogin","checkbox__active","isCaptcha","src","urlCaptcha","login__button","Login","isAuth","to","login","login__title","login__warning","dataForm","email","password","rememberMe","captcha","logInServerTC","connect","state","auth","dispatch"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,aAAe,4BAA4B,eAAiB,gC,oBCA3GD,EAAOC,QAAU,CAAC,YAAc,+BAA+B,YAAc,+BAA+B,aAAe,gCAAgC,gBAAkB,mCAAmC,iBAAmB,oCAAoC,cAAgB,mC,sMCuC1QC,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAjCL,SAACE,GAAW,IAAD,EACFC,oBAAS,GADP,mBAC1BC,EAD0B,KACjBC,EADiB,OAEQF,mBAAS,GAAD,OAAIG,IAAEC,kBAFtB,mBAE1BC,EAF0B,KAEZC,EAFY,KAWjC,OACG,uBAAMC,UAAWJ,IAAEK,YAAaC,SAAUV,EAAMW,aAAhD,UACG,qBAAKH,UAAWJ,IAAEQ,YAAlB,SAA+B,cAACC,EAAA,EAAD,CAAOL,UAAWJ,IAAEU,aAAcC,UAAWC,IAAOC,KAAM,QAASC,KAAM,QAASC,SAAUC,QAC3H,qBAAKZ,UAAWJ,IAAEQ,YAAlB,SAA+B,cAACC,EAAA,EAAD,CAAOL,UAAWJ,IAAEU,aAAcC,UAAWC,IAAOC,KAAM,WAAYC,KAAM,WAAYC,SAAUC,QAC/HlB,EAKG,sBAAKmB,QAAS,SAACC,GAAD,OAZtBnB,GAAY,QACZI,EAAiB,GAAD,OAAIH,IAAEC,mBAWyBG,UAAWF,EAAlD,UACC,cAACO,EAAA,EAAD,CAAOE,UAAWQ,IAAeN,KAAM,WAAYC,KAAM,aAAchB,QAASA,IAChF,kDAND,sBAAKmB,QAAS,SAACC,GAAD,OAZtBnB,GAAY,QACZI,EAAiB,GAAD,OAAIH,IAAEC,gBAAN,YAAyBD,IAAEoB,oBAWIhB,UAAWF,EAAlD,UACC,cAACO,EAAA,EAAD,CAAOE,UAAWQ,IAAeN,KAAM,WAAYC,KAAM,aAAcC,SAAUC,IAAUlB,QAASA,IACpG,kDAON,gCACIF,EAAMyB,WAAa,qBAAKC,IAAK1B,EAAM2B,aACnC3B,EAAMyB,WAAa,cAACZ,EAAA,EAAD,CAAOE,UAAW,QAASE,KAAM,QAASC,KAAM,eAEvE,wBAAQV,UAAWJ,IAAEwB,cAAeX,KAAM,SAA1C,8BC7BIY,EAAQ,SAAC7B,GAKnB,OAAIA,EAAM8B,OACA,cAAC,IAAD,CAAUC,GAAI,aAGrB,sBAAKvB,UAAWJ,IAAE4B,MAAlB,UACG,qBAAKxB,UAAWJ,IAAE6B,aAAlB,mBAGA,qBAAKzB,UAAWJ,IAAE8B,eAAlB,4DAGA,cAACrC,EAAD,CAAgB4B,UAAWzB,EAAMyB,UAAWf,SAfjC,SAACyB,GAAc,IAAD,EACiB,CAACA,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,SAA1GH,EADuB,KAChBC,EADgB,KACNC,EADM,KACMC,EADN,KAE5BvC,EAAMwC,cAAcJ,EAAOC,EAAUC,EAAYC,IAakBZ,WAAY3B,EAAM2B,iBAgB5Ec,uBAPS,SAACC,GACtB,MAAO,CACJjB,UAAWiB,EAAMC,KAAKlB,UACtBE,WAAYe,EAAMC,KAAKhB,WACvBG,OAAQY,EAAMC,KAAKb,WATE,SAACc,GACzB,MAAO,CACJJ,cAAe,SAACJ,EAAOC,EAAUC,EAAYC,GAAcK,EAASJ,YAAcJ,EAAOC,EAAUC,EAAYC,QAUtGE,CAA6CZ","file":"static/js/5.e6050902.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1Ljrk\",\"login__title\":\"Login_login__title__1p6ih\",\"login__warning\":\"Login_login__warning__2IgUm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__form\":\"LoginForm_login__form__3Qu-U\",\"login__item\":\"LoginForm_login__item__24SHY\",\"login__input\":\"LoginForm_login__input__pFU4O\",\"login__checkbox\":\"LoginForm_login__checkbox__1g-9G\",\"checkbox__active\":\"LoginForm_checkbox__active__10e8-\",\"login__button\":\"LoginForm_login__button__19CmG\"};","import React from 'react'\r\nimport s from './LoginForm.module.css'\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required } from \"../../validators/validators\";\r\nimport { useState } from \"react\";\r\nimport { Input, CheckBoxLogin } from \"../Common/FormControl/FormControl\";\r\n\r\nexport const LoginForm = (props) => {\r\n   const [checked, editChecked] = useState(false)\r\n   const [classChecked, editClassChecked] = useState(`${s.login__checkbox}`)\r\n   const checkedSuccess = () => {\r\n      editChecked(true)\r\n      editClassChecked(`${s.login__checkbox} ${s.checkbox__active}`)\r\n   }\r\n   const checkedFailure = () => {\r\n      editChecked(false)\r\n      editClassChecked(`${s.login__checkbox}`)\r\n   }\r\n   return (\r\n      <form className={s.login__form} onSubmit={props.handleSubmit}>\r\n         <div className={s.login__item}><Field className={s.login__input} component={Input} type={'input'} name={'email'} validate={required} /></div>\r\n         <div className={s.login__item}><Field className={s.login__input} component={Input} type={'password'} name={'password'} validate={required} /></div>\r\n         {!checked\r\n            ? <div onClick={(e) => checkedSuccess()} className={classChecked}>\r\n               <Field component={CheckBoxLogin} type={'checkbox'} name={'rememberMe'} validate={required} checked={checked} />\r\n               <span>Remember me</span>\r\n            </div>\r\n            : <div onClick={(e) => checkedFailure()} className={classChecked}>\r\n               <Field component={CheckBoxLogin} type={'checkbox'} name={'rememberMe'} checked={checked} />\r\n               <span>Remember me</span>\r\n            </div>\r\n         }\r\n         <div>\r\n            {props.isCaptcha && <img src={props.urlCaptcha} />}\r\n            {props.isCaptcha && <Field component={'input'} type={'input'} name={'captcha'} />}\r\n         </div>\r\n         <button className={s.login__button} type={'submit'}>To come in</button>\r\n      </form>\r\n   )\r\n}\r\nexport const LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)","import React from 'react'\r\nimport s from './Login.module.css'\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { logInServerTC } from \"../../redux/auth.reducer\"\r\nimport { LoginReduxForm } from \"./LoginForm\"\r\n\r\nexport const Login = (props) => {\r\n   const onSubmit = (dataForm) => {\r\n      let [email, password, rememberMe, captcha] = [dataForm.email, dataForm.password, dataForm.rememberMe, dataForm.captcha]\r\n      props.logInServerTC(email, password, rememberMe, captcha)\r\n   }\r\n   if (props.isAuth) {\r\n      return <Redirect to={'/profile'} />\r\n   }\r\n   return (\r\n      <div className={s.login}>\r\n         <div className={s.login__title}>\r\n            Login\r\n         </div>\r\n         <div className={s.login__warning}>\r\n            To view this page, you need to go to the site.\r\n         </div>\r\n         <LoginReduxForm isCaptcha={props.isCaptcha} onSubmit={onSubmit} urlCaptcha={props.urlCaptcha} />\r\n      </div>\r\n   )\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      logInServerTC: (email, password, rememberMe, captcha) => { dispatch(logInServerTC(email, password, rememberMe, captcha)) }\r\n   }\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      isCaptcha: state.auth.isCaptcha,\r\n      urlCaptcha: state.auth.urlCaptcha,\r\n      isAuth: state.auth.isAuth\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)"],"sourceRoot":""}