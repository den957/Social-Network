[{"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\reportWebVitals.js":"1","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Messages\\Messages.jsx":"2","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\app.reducer.ts":"3","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\auth.reducer.ts":"4","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\login.reducer.ts":"5","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\profile.reducer.ts":"6","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\users.reducer.ts":"7","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Paginator\\Paginator.tsx":"8","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\Users.tsx":"9","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\store.ts":"10","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersContainer.tsx":"11","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersAll\\UsersAll.tsx":"12","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersAll\\UsersAllContainer.tsx":"13","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Settings\\Settings.tsx":"14","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Settings\\SettingsForm.tsx":"15","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\api\\api.ts":"16","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\validators\\validators.ts":"17","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\FormControl\\FormControl.tsx":"18","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\Profile.tsx":"19","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfilePostCreate\\ProfilePost.tsx":"20","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfilePostList\\ProfilePostList.tsx":"21","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\hoc\\withAuthRedirect.tsx":"22","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"23","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\modals\\ModalStatus\\ModalStatus.tsx":"24","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\modals\\ModalStatus\\ModalStatusForm.tsx":"25","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Login\\Login.tsx":"26","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Login\\LoginForm.tsx":"27","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Header\\Header.tsx":"28","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Header\\HeaderContainer.tsx":"29","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\App.tsx":"30","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Aside\\Aside.tsx":"31","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Preloader\\Preloader.tsx":"32","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Preloader\\PreloaderLine\\PreloaderLine.tsx":"33","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\hoc\\withSuspense.tsx":"34","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\index.tsx":"35","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersSearch\\UsersSearch.tsx":"36"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"38"},{"size":506,"mtime":1613091159281,"results":"39","hashOfConfig":"38"},{"size":1104,"mtime":1615901132457,"results":"40","hashOfConfig":"38"},{"size":3333,"mtime":1615817294802,"results":"41","hashOfConfig":"38"},{"size":968,"mtime":1615806803235,"results":"42","hashOfConfig":"38"},{"size":5936,"mtime":1616071695622,"results":"43","hashOfConfig":"38"},{"size":8749,"mtime":1616261123546,"results":"44","hashOfConfig":"38"},{"size":2200,"mtime":1616002052462,"results":"45","hashOfConfig":"38"},{"size":4475,"mtime":1616259542348,"results":"46","hashOfConfig":"38"},{"size":782,"mtime":1615714813632,"results":"47","hashOfConfig":"38"},{"size":3755,"mtime":1616259560361,"results":"48","hashOfConfig":"38"},{"size":3012,"mtime":1616007306805,"results":"49","hashOfConfig":"38"},{"size":3592,"mtime":1616172424600,"results":"50","hashOfConfig":"38"},{"size":3268,"mtime":1615924254866,"results":"51","hashOfConfig":"38"},{"size":5040,"mtime":1616264475746,"results":"52","hashOfConfig":"38"},{"size":3828,"mtime":1616171955664,"results":"53","hashOfConfig":"38"},{"size":2099,"mtime":1615844757549,"results":"54","hashOfConfig":"38"},{"size":1191,"mtime":1616002079479,"results":"55","hashOfConfig":"38"},{"size":9794,"mtime":1616250116408,"results":"56","hashOfConfig":"38"},{"size":1486,"mtime":1615916440136,"results":"57","hashOfConfig":"38"},{"size":1633,"mtime":1615978257513,"results":"58","hashOfConfig":"38"},{"size":848,"mtime":1615932369729,"results":"59","hashOfConfig":"38"},{"size":4617,"mtime":1616015187030,"results":"60","hashOfConfig":"38"},{"size":1841,"mtime":1616002823672,"results":"61","hashOfConfig":"38"},{"size":869,"mtime":1615991311831,"results":"62","hashOfConfig":"38"},{"size":2118,"mtime":1615996183205,"results":"63","hashOfConfig":"38"},{"size":2623,"mtime":1615996240995,"results":"64","hashOfConfig":"38"},{"size":3424,"mtime":1615999292678,"results":"65","hashOfConfig":"38"},{"size":1849,"mtime":1615999493185,"results":"66","hashOfConfig":"38"},{"size":3263,"mtime":1616005382685,"results":"67","hashOfConfig":"38"},{"size":1271,"mtime":1616002128497,"results":"68","hashOfConfig":"38"},{"size":276,"mtime":1616001941385,"results":"69","hashOfConfig":"38"},{"size":777,"mtime":1616001990474,"results":"70","hashOfConfig":"38"},{"size":389,"mtime":1616006188974,"results":"71","hashOfConfig":"38"},{"size":495,"mtime":1616006489324,"results":"72","hashOfConfig":"38"},{"size":3609,"mtime":1616264540772,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"s4zipz",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"81"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"81"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"81"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"81"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"81"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"81"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"120","usedDeprecatedRules":"81"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"81"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"81"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"81"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"81"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"81"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"81"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"81"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"81"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\reportWebVitals.js",[],["163","164"],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Messages\\Messages.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\app.reducer.ts",[],["165","166"],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\auth.reducer.ts",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\login.reducer.ts",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\profile.reducer.ts",["167"],"import { AppReducerType } from './store';\r\nimport { ThunkAction } from \"redux-thunk\"\r\nimport { profileApi, ResultCode } from \"../api/api\"\r\nimport { InfoContactsPhotoType } from \"./users.reducer\"\r\n\r\nconst getProfileInfoSuccessType = 'GET_PROFILE_INFO_SUCCESS'\r\nconst setProfileImageSuccessType = 'SET_PROFILE_IMAGE_SUCCESS'\r\nconst getProfileStatusSuccessType = 'GET_PROFILE_STATUS_SUCCESS'\r\nconst getProfileMeInfoSuccessType = 'GET_PROFILE_ME_INFO_SUCCESS'\r\nconst addProfilePostType = \"ADD_PROFILE_POST_TYPE\"\r\nconst removeProfilePostType = \"REMOVE_PROFILE_POST_TYPE\"\r\n\r\nexport type InfoType = {\r\n   userId: number,\r\n   lookingForAJob: boolean,\r\n   lookingForAJobDescription: string,\r\n   fullName: string,\r\n   aboutMe: string\r\n   contacts: {\r\n      github: string,\r\n      facebook: string,\r\n      twitter: string,\r\n      website: string,\r\n      youtube: string,\r\n      mainLink: string\r\n   },\r\n   photos: InfoContactsPhotoType\r\n\r\n}\r\nexport type PostType = {\r\n   id: string,\r\n   date: string,\r\n   post: string\r\n}\r\n\r\nconst initialState = {\r\n   profileMeInfo: null as InfoType | null,\r\n   profileInfo: null as InfoType | null,\r\n   profileImage: null as string | null,\r\n   profileStatus: '' as string,\r\n   profilePosts: [] as Array<PostType>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = GetProfileInfoSuccessType | SetProfileImageSuccessType | GetProfileStatusSuccess | GetProfileMeInfoSuccessType | AddProfilePost | RemoveProfilePost\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n   switch (action.type) {\r\n      case getProfileInfoSuccessType: {\r\n         return {\r\n            ...state,\r\n            profileInfo: action.data\r\n         }\r\n      }\r\n      case setProfileImageSuccessType: {\r\n         return {\r\n            ...state,\r\n            profileImage: action.img,\r\n         }\r\n      }\r\n      case getProfileStatusSuccessType: {\r\n         return {\r\n            ...state,\r\n            profileStatus: action.status\r\n         }\r\n      }\r\n      case getProfileMeInfoSuccessType: {\r\n         return {\r\n            ...state,\r\n            profileMeInfo: action.dataMe,\r\n         }\r\n      }\r\n      case addProfilePostType: {\r\n         return {\r\n            ...state,\r\n            ...state.profilePosts.push(action.dataPost) as {}\r\n         }\r\n      }\r\n      case removeProfilePostType: {\r\n         return {\r\n            ...state,\r\n            profilePosts: state.profilePosts.filter((post) => {\r\n               if (post.id !== action.id) {\r\n                  return true\r\n               }\r\n            })\r\n         }\r\n      }\r\n      default: {\r\n         return state\r\n      }\r\n   }\r\n}\r\nexport default profileReducer\r\ntype GetProfileInfoSuccessType = {\r\n   type: typeof getProfileInfoSuccessType,\r\n   data: InfoType\r\n}\r\ntype SetProfileImageSuccessType = {\r\n   type: typeof setProfileImageSuccessType,\r\n   img: string\r\n}\r\ntype GetProfileStatusSuccess = {\r\n   type: typeof getProfileStatusSuccessType,\r\n   status: string\r\n}\r\ntype GetProfileMeInfoSuccessType = {\r\n   type: typeof getProfileMeInfoSuccessType,\r\n   dataMe: InfoType\r\n}\r\ntype AddProfilePost = {\r\n   type: typeof addProfilePostType,\r\n   dataPost: PostType\r\n}\r\ntype RemoveProfilePost = {\r\n   type: typeof removeProfilePostType,\r\n   id: string\r\n}\r\nexport const getProfileInfoSuccess = (data: InfoType): GetProfileInfoSuccessType => ({ type: getProfileInfoSuccessType, data })\r\nexport const setProfileImageSuccess = (img: string): SetProfileImageSuccessType => ({ type: setProfileImageSuccessType, img })\r\nexport const getProfileStatusSuccess = (status: string): GetProfileStatusSuccess => ({ type: getProfileStatusSuccessType, status })\r\nexport const getProfileMeInfoSuccess = (dataMe: InfoType): GetProfileMeInfoSuccessType => ({ type: getProfileMeInfoSuccessType, dataMe })\r\nexport const addProfilePost = (dataPost: PostType): AddProfilePost => ({ type: addProfilePostType, dataPost })\r\nexport const removeProfilePost = (id: string): RemoveProfilePost => ({ type: removeProfilePostType, id })\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppReducerType, unknown, ActionsType>\r\n\r\nexport const getProfileInfo = (userId: number): ThunkType =>\r\n   async dispatch => {\r\n      let data = await profileApi.getProfile(userId)\r\n      dispatch(getProfileInfoSuccess(data))\r\n   }\r\nexport const getProfileMeInfo = (userId: number): ThunkType =>\r\n   async dispatch => {\r\n      let data = await profileApi.getProfile(userId)\r\n      dispatch(getProfileMeInfoSuccess(data))\r\n   }\r\nexport const setProfileImage = (image: File): ThunkType =>\r\n   async dispatch => {\r\n      let data = await profileApi.setImage(image)\r\n      if (data.resultCode === ResultCode.Success) {\r\n         dispatch(setProfileImageSuccess(data.data.photos.small))\r\n      }\r\n   }\r\nexport const getProfileStatus = (userId: number): ThunkType =>\r\n   async dispatch => {\r\n      let response = await profileApi.getStatus(userId)\r\n      if (!response.data) {\r\n         dispatch(getProfileStatusSuccess(response.data))\r\n      }\r\n      dispatch(getProfileStatusSuccess(response.data))\r\n   }\r\nexport const setProfileStatus = (status: string): ThunkType =>\r\n   async dispatch => {\r\n      let data = await profileApi.setStatus(status)\r\n      if (data.resultCode === ResultCode.Success) {\r\n         dispatch(getProfileStatusSuccess(status))\r\n      }\r\n   }\r\nexport const setProfileContactInfo = (fullName: string, aboutMe: string, lookingForAJobDescription: string, isMarried: boolean, youtube: string, website: string, facebook: string, github: string, userId: number | null): ThunkType =>\r\n   async dispatch => {\r\n      let data = await profileApi.setContactInfo(fullName, aboutMe, lookingForAJobDescription, isMarried, youtube, website, facebook, github)\r\n      if (data.resultCode === ResultCode.Success) {\r\n         if (userId != null) {\r\n            dispatch(getProfileMeInfo(userId))\r\n            dispatch(getProfileInfo(userId))\r\n         }\r\n      }\r\n   }","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\users.reducer.ts",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Paginator\\Paginator.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\Users.tsx",["168","169"],"import React from 'react'\r\nimport s from './Users.module.css'\r\nimport Paginator from '../Common/Paginator/Paginator'\r\nimport { NavLink } from 'react-router-dom'\r\nimport userIcon from '../../assets/images/userIcon.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserMinus } from '@fortawesome/free-solid-svg-icons'\r\nimport { UsersType } from '../../redux/users.reducer'\r\nimport { UsersSearch } from './UsersSearch/UsersSearch'\r\n\r\ntype PropsType = {\r\n   isAuth: boolean,\r\n   usersFollowed: Array<UsersType>,\r\n   readyToggle: Array<number>,\r\n   totalCount: number | null,\r\n   countFollowed: number,\r\n   pageFollowed: number,\r\n   usersUnfollowed: Array<UsersType>,\r\n   onPageChange: (pageFollowed: number) => void\r\n   unfollowUserTC: (userId: number) => void,\r\n   getUsersSelectTC: (count: number, pageUnfollowed: number, follower: boolean, term: string) => void\r\n}\r\nconst Users: React.FC<PropsType> = ({ isAuth, usersFollowed, readyToggle, unfollowUserTC, ...props }) => {\r\n   return (\r\n      <>\r\n         <div className={s.users}>\r\n            <div className={s.users__row}>\r\n               {/*---WIDE COLUMN---*/}\r\n               <div className={s.users__wide}>\r\n                  <div className={s.users__title}>\r\n                     Users\r\n                  </div>\r\n                  <div className={s.users__menu}>\r\n                     <div className={s.menuUsers__row}>\r\n                        <div className={s.menuUsers__title}>\r\n                           My requests\r\n                  </div>\r\n                        <NavLink className={s.menuUsers__button} to={'/users/all'}>Find more</NavLink>\r\n                     </div>\r\n                  </div>\r\n                  {isAuth\r\n                     ? < div className={s.users__request}>\r\n                        {usersFollowed.map((user) => {\r\n                           return (\r\n                              user.followed &&\r\n                              <div className={s.requestUsers__item} key={user.id}>\r\n                                 <div className={s.itemUsers__row}>\r\n                                    <NavLink className={s.itemUsers__image} to={`/profile/${user.id}`}>\r\n                                       {!user.photos.small\r\n                                          ? <img src={userIcon} />\r\n                                          : <img src={user.photos.small} />\r\n                                       }\r\n                                    </NavLink>\r\n                                    <div className={s.itemUsers__body}>\r\n                                       <NavLink className={s.bodyUsers__name} to={`/profile/${user.id}`}>{user.name}</NavLink>\r\n                                       <div className={s.bodyUsers__navigation}>\r\n                                          <div className={s.navigationUsers__row}>\r\n                                             <NavLink className={s.navigationUsers__message} to={'/messages'}>Write a message</NavLink>\r\n                                             <div className={s.navigationUsers__subscribe}>\r\n                                                <button disabled={readyToggle.some((userId) => userId === user.id)} onClick={(e) => { unfollowUserTC(user.id) }}><FontAwesomeIcon icon={faUserMinus} /></button>\r\n                                             </div>\r\n                                          </div>\r\n                                       </div>\r\n                                    </div>\r\n                                 </div>\r\n                                 <div className={s.requestUsers__line}></div>\r\n                              </div>\r\n                           )\r\n                        })}\r\n                        <Paginator pageFollowed={props.pageFollowed} countFollowed={props.countFollowed} totalCount={props.totalCount} onPageChange={props.onPageChange} />\r\n                     </div>\r\n                     : <div className={s.login__warning}>\r\n                        To view this page, you need to go to the site.\r\n               </div>\r\n                  }\r\n               </div>\r\n               {/*---NARROW COLUMN---*/}\r\n               <div className={s.users__narrow}>\r\n                  <UsersSearch getUsersSelectTC={props.getUsersSelectTC} usersUnfollowed={props.usersUnfollowed} />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\nexport default Users\r\n","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\store.ts",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersContainer.tsx",["170","171","172"],"import React, { useEffect, useState } from 'react'\r\nimport s from './Users.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { AppReducerType } from '../../redux/store'\r\nimport { getOnceUnfollowedTC, getUsersFollowedTC, getUsersSelectTC, getUsersUnfollowedTC, unfollowUserTC } from '../../redux/users.reducer'\r\nimport { UsersType } from '../../redux/users.reducer'\r\nimport PreloaderLine from '../Common/Preloader/PreloaderLine/PreloaderLine'\r\nimport Users from './Users'\r\nimport { AnyAction } from 'redux'\r\nimport { ThunkDispatch } from 'redux-thunk'\r\n\r\ntype MapStateToPropsType = {\r\n   isAuth: boolean,\r\n   usersFollowed: Array<UsersType>,\r\n   readyToggle: Array<number>,\r\n   totalCount: number | null,\r\n   countFollowed: number,\r\n   pageFollowed: number,\r\n   isReadyPage: boolean,\r\n   usersUnfollowed: Array<UsersType>,\r\n   isUserSelected: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n   unfollowUserTC: (userId: number) => void,\r\n   getUsersFollowedTC: (count: number, pageFollowed: number, boolean: boolean, term: string) => void,\r\n   getOnceUnfollowedTC: () => void,\r\n   getUsersSelectTC: (count: number, pageUnfollowed: number, follower: boolean, term: string) => void\r\n}\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst UsersContainer: React.FC<PropsType> = ({ getOnceUnfollowedTC, countFollowed, isReadyPage, getUsersFollowedTC, ...props }) => {\r\n   const [isFetchingOnce, setIsFetchingOnce] = useState(false)\r\n   useEffect(() => {\r\n      if (!isFetchingOnce) {\r\n         getOnceUnfollowedTC()\r\n         setIsFetchingOnce(true)\r\n      }\r\n   }, [])\r\n   useEffect(() => {\r\n      let [page, count] = [1, countFollowed]\r\n      getUsersFollowedTC(count, page, true, '')\r\n   }, [])\r\n   let onPageChange = (pageFollowed: number) => {\r\n      let count = countFollowed\r\n      getUsersFollowedTC(count, pageFollowed, true, '')\r\n   }\r\n   return (\r\n      <>\r\n         {isReadyPage\r\n            ? <Users isUserSelected={props.isUserSelected} getUsersSelectTC={props.getUsersSelectTC} isAuth={props.isAuth} usersUnfollowed={props.usersUnfollowed} pageFollowed={props.pageFollowed} usersFollowed={props.usersFollowed} countFollowed={countFollowed} totalCount={props.totalCount} onPageChange={onPageChange} unfollowUserTC={props.unfollowUserTC} readyToggle={props.readyToggle} />\r\n            : <div className={s.preloader__usersWrapper}>\r\n               <div className={s.preloader__usersBlock}>\r\n                  <PreloaderLine />\r\n               </div>\r\n            </div >\r\n         }\r\n      </>\r\n   )\r\n}\r\nconst mapStateToProps = (state: AppReducerType): MapStateToPropsType => {\r\n   return {\r\n      countFollowed: state.users.countFollowed,\r\n      pageFollowed: state.users.pageFollowed,\r\n      totalCount: state.users.totalCount,\r\n      usersFollowed: state.users.usersFollowed,\r\n      isReadyPage: state.users.isReadyPage,\r\n      readyToggle: state.users.readyToggle,\r\n      isAuth: state.auth.isAuth,\r\n      usersUnfollowed: state.users.usersUnfollowed,\r\n      isUserSelected: state.users.isUserSelected\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>): MapDispatchToPropsType => {\r\n   return {\r\n      getUsersSelectTC: (count: number, pageUnfollowed: number, follower: boolean, term: string): void => { dispatch(getUsersSelectTC(count, pageUnfollowed, follower, term)) },\r\n      getUsersFollowedTC: (count: number, pageFollowed: number, follower: boolean, term: string) => { dispatch(getUsersFollowedTC(count, pageFollowed, follower, term)) },\r\n      unfollowUserTC: (userId: number) => { dispatch(unfollowUserTC(userId)) },\r\n      getOnceUnfollowedTC: (): void => { dispatch(getOnceUnfollowedTC()) }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersAll\\UsersAll.tsx",["173","174"],"import React from 'react'\r\nimport s from './UsersAll.module.css'\r\nimport cn from 'classnames'\r\nimport userIcon from '../../../assets/images/userIcon.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { NavLink } from 'react-router-dom'\r\nimport PreloaderLine from '../../Common/Preloader/PreloaderLine/PreloaderLine'\r\nimport { UsersType } from '../../../redux/users.reducer'\r\n\r\ntype PropsType = {\r\n   isAuth: boolean,\r\n   usersUnfollowed: Array<UsersType>,\r\n   readyToggle: Array<number>,\r\n   followUserTC: (userId: number) => void,\r\n}\r\nexport const UsersAll: React.FC<PropsType> = ({ usersUnfollowed, isAuth, readyToggle, followUserTC }) => {\r\n   return (\r\n      <div className={s.usersAll}>\r\n         <div className={s.usersAll__title}>\r\n            Find friends\r\n         </div>\r\n         <div className={s.usersAll__body}>\r\n            <div className={s.bodyUsersAll__row}>\r\n               {usersUnfollowed.map((user) => {\r\n                  return (\r\n                     <div className={s.bodyUsersAll__item} key={user.id}>\r\n                        <NavLink className={s.bodyUsersAll__image} to={`/profile/${user.id}`}>\r\n                           {user.photos.small\r\n                              ? <img src={user.photos.small} />\r\n                              : <img src={userIcon} />\r\n                           }\r\n                        </NavLink>\r\n                        <div className={s.bodyUsersAll__body}>\r\n                           <div className={cn(s.bodyUsersAll__row, s.bodyUsersAll)}>\r\n                              <NavLink className={s.bodyUsersAll__name} to={`/profile/${user.id}`}>\r\n                                 <span>{user.name}</span>\r\n                              </NavLink>\r\n                              <div className={s.bodyUsersAll__subscribe}>\r\n                                 {!user.followed && isAuth\r\n                                    ? <button className={s.bodyUsersAll__abled} disabled={readyToggle.some((userId) => userId === user.id)} onClick={(e) => { followUserTC(user.id) }}><FontAwesomeIcon icon={faUserPlus} /></button>\r\n                                    : <button className={s.bodyUsersAll__disabled} disabled={true}><FontAwesomeIcon icon={faUserPlus} /></button>\r\n                                 }\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                  )\r\n               })\r\n               }\r\n               {\r\n                  function () {\r\n                     return (\r\n                        <div className={s.preloader__UsersAllWrapper}>\r\n                           <div className={s.preloader__UsersAllBlock}>\r\n                              <PreloaderLine />\r\n                           </div>\r\n                        </div >\r\n                     )\r\n                  }()\r\n               }\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersAll\\UsersAllContainer.tsx",["175","176","177"],"import React, { useEffect, useState } from 'react'\r\nimport s from './UsersAll.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { followUserTC, getOnceUnfollowedTC, getUsersUnfollowedTC, isFetchingUsers } from '../../../redux/users.reducer'\r\nimport Preloader from '../../Common/Preloader/Preloader'\r\nimport { UsersType } from '../../../redux/users.reducer'\r\nimport { AppReducerType } from '../../../redux/store'\r\nimport { UsersAll } from './UsersAll'\r\nimport { ThunkDispatch } from 'redux-thunk'\r\nimport { AnyAction } from 'redux'\r\n\r\ntype MapStateToPropsType = {\r\n   isAuth: boolean,\r\n   readyToggle: Array<number>,\r\n   usersUnfollowed: Array<UsersType>,\r\n   countUnfollowed: number,\r\n   pageUnfollowed: number,\r\n   isFetching: boolean,\r\n}\r\ntype MapDispatchToPropsType = {\r\n   followUserTC: (userId: number) => void,\r\n   getUsersUnfollowedTC: (count: number, page: number, boolean: boolean, term: string) => void,\r\n   getOnceUnfollowedTC: () => void,\r\n   isFetchingUsers: (bool: boolean) => void,\r\n}\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst UserAllContainer: React.FC<PropsType> = ({ isFetchingUsers, pageUnfollowed, isFetching, countUnfollowed, getOnceUnfollowedTC, getUsersUnfollowedTC, ...props }) => {\r\n   const [isFetchingOnce, setIsFetchingOnce] = useState(false)\r\n   let [page, count] = [pageUnfollowed, countUnfollowed]\r\n   useEffect(() => {\r\n      if (!isFetchingOnce) {\r\n         getOnceUnfollowedTC()\r\n         setIsFetchingOnce(true)\r\n      }\r\n   }, [])\r\n   useEffect(() => {\r\n      if (isFetching) {\r\n         getUsersUnfollowedTC(count, page, false, '')\r\n      }\r\n   }, [isFetching])\r\n   useEffect(() => {\r\n      document.addEventListener('scroll', scrollHandler)\r\n      return () => {\r\n         document.removeEventListener('scroll', scrollHandler)\r\n      }\r\n   }, [])\r\n   const scrollHandler = (e: any): void => {\r\n      const [scrollHeight, scrollTop, innerHeight] = [e.target.documentElement.scrollHeight, e.target.documentElement.scrollTop, window.innerHeight]\r\n      if (scrollTop + 100 >= scrollHeight - innerHeight) {\r\n         isFetchingUsers(true)\r\n      }\r\n   }\r\n   return (\r\n      <>\r\n         {isFetchingOnce\r\n            ? <UsersAll isAuth={props.isAuth} followUserTC={props.followUserTC} usersUnfollowed={props.usersUnfollowed} readyToggle={props.readyToggle} />\r\n            : <div className={s.preloader__UsersAllContainerWrapper}>\r\n               <div className={s.preloader__UsersAllContainerBlock}>\r\n                  <Preloader />\r\n               </div>\r\n            </div >\r\n         }\r\n      </>\r\n   )\r\n}\r\nconst mapStateToProps = (state: AppReducerType): MapStateToPropsType => {\r\n   return {\r\n      usersUnfollowed: state.users.usersUnfollowed,\r\n      countUnfollowed: state.users.countUnfollowed,\r\n      pageUnfollowed: state.users.pageUnfollowed,\r\n      isFetching: state.users.isFetching,\r\n      readyToggle: state.users.readyToggle,\r\n      isAuth: state.auth.isAuth\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>): MapDispatchToPropsType => {\r\n   return {\r\n      getUsersUnfollowedTC: (count: number, pageUnfollowed: number, follower: boolean, term: string): void => { dispatch(getUsersUnfollowedTC(count, pageUnfollowed, follower, term)) },\r\n      isFetchingUsers: (bool: boolean): void => { dispatch(isFetchingUsers(bool)) },\r\n      followUserTC: (userId: number): void => { dispatch(followUserTC(userId)) },\r\n      getOnceUnfollowedTC: (): void => { dispatch(getOnceUnfollowedTC()) }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAllContainer)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Settings\\Settings.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Settings\\SettingsForm.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\api\\api.ts",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\validators\\validators.ts",["178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207"],"export const required = (value: string): string | undefined => {\r\n   if (value) {\r\n      return undefined\r\n   }\r\n   else {\r\n      return 'Require filed'\r\n   }\r\n}\r\nexport const minLengthCreator = (minLength: number) => {\r\n   return (value: string): string | undefined => {\r\n      if (value && value.length > minLength) {\r\n         return 'Field is too long'\r\n      }\r\n      return undefined\r\n   }\r\n}\r\nexport const validUrlFormat = () => {\r\n   return (value: string): string | undefined => {\r\n      let regExp = /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/\r\n      if (regExp.test(value) === true) {\r\n         return undefined\r\n      }\r\n      return 'Invalid url address'\r\n   }\r\n}\r\nexport const validDateFormat = () => {\r\n   return (value: string): string | undefined => {\r\n      let regExp = /^(\\d{1,2})[\\s\\.\\/-](\\d{1,2})[\\s\\.\\/-](\\d{4})$/\r\n      if (regExp.test(value) === true) {\r\n         return undefined\r\n      }\r\n      return 'Invalid date'\r\n   }\r\n}\r\n","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\FormControl\\FormControl.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\Profile.tsx",["208","209","210"],"import React, { ChangeEvent, useState } from 'react'\r\nimport s from './Profile.module.css'\r\nimport cn from 'classnames'\r\nimport { NavLink } from 'react-router-dom'\r\nimport logo from '../../assets/images/logo.jpg'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowAltCircleUp, faHome } from '@fortawesome/free-solid-svg-icons'\r\nimport { ProfileReduxPost } from './ProfilePostCreate/ProfilePost'\r\nimport ProfilePostList from './ProfilePostList/ProfilePostList'\r\nimport { InfoType, PostType } from '../../redux/profile.reducer'\r\n\r\ntype PropsType = {\r\n   setProfileImage: (image: File) => void,\r\n   addProfilePost: (dataPost: PostType) => void,\r\n   profileInfo: InfoType,\r\n   isOwner: boolean,\r\n   profileStatus: string,\r\n   editModalStatus: (el: boolean) => void,\r\n   isAuth: boolean,\r\n   profileMeInfo: InfoType,\r\n   profilePosts: Array<PostType>,\r\n   removeProfilePost: (id: string) => void,\r\n}\r\nconst Profile: React.FC<PropsType> = ({ setProfileImage, addProfilePost, profileInfo, isOwner, profileStatus, editModalStatus, isAuth, ...props }) => {\r\n   const [modalPost, setModalPost] = useState<boolean>(false)\r\n   const [isShowDetails, editIsShowDetails] = useState<boolean>(false)\r\n   const onChangeAvatar = (e: ChangeEvent<HTMLInputElement>) => {\r\n      if (e.target.files?.length) {\r\n         setProfileImage(e.target.files[0])\r\n      }\r\n   }\r\n   const generateDate = () => {\r\n      return new Date()\r\n   }\r\n   const onSubmit = (dataPosts: PostType) => {\r\n      setModalPost(false)\r\n      let id = `f${(+new Date).toString(16)}`;\r\n      let date = `${generateDate().toLocaleDateString()} at ${generateDate().toLocaleTimeString()}`\r\n      const dataPost = {\r\n         id: id,\r\n         post: dataPosts.post,\r\n         date: date\r\n      }\r\n      addProfilePost(dataPost)\r\n   }\r\n   return (\r\n      <div className={s.profile}>\r\n         <div className={s.profile__row}>\r\n            {/* NARROW COLUMN */}\r\n            <div className={s.profile__narrow}>\r\n               <div className={s.profile__me}>\r\n                  <div className={s.meProfile__photo}><img src={profileInfo.photos.small ? profileInfo.photos.small : logo} />\r\n                     {isOwner &&\r\n                        <div className={s.meProfile__block}>\r\n                           <div className={s.meProfile__refresh}>\r\n                              <label className={s.refreshProfile__fake} htmlFor={'avatar-img'}><FontAwesomeIcon icon={faArrowAltCircleUp} className={s.refreshProfile__arrowTop} /><span>Refresh photo</span></label>\r\n                              <input className={s.refreshProfile__input} type='file' id={'avatar-img'} name='avatar-img' onChange={(e) => { onChangeAvatar(e) }} />\r\n                           </div>\r\n                        </div>\r\n                     }\r\n                  </div>\r\n               </div>\r\n               {isOwner\r\n                  ? <>\r\n                     <div className={s.profile__edit}>\r\n                        <NavLink className={s.editProfile__settings} to={'/settings'}>Edit</NavLink>\r\n                     </div>\r\n                     <div className={s.profile__enter}>\r\n                        <NavLink to={'/settings'}><span><FontAwesomeIcon icon={faHome} className={s.enterProfile__link} />Enter your contacts</span></NavLink>\r\n                     </div>\r\n                  </>\r\n                  : < div className={s.profile__edit}>\r\n                     <NavLink className={s.editProfile__messages} to={'/messages'}>Write a message</NavLink>\r\n                  </div>\r\n               }\r\n            </div>\r\n            {/* WIDE COLUMN */}\r\n            <div className={s.profile__wide}>\r\n               <div className={s.profile__info}>\r\n                  <div className={s.infoProfile__fullName}>\r\n                     <h4>{profileInfo.fullName}</h4>\r\n                  </div>\r\n                  {isOwner\r\n                     ? <>\r\n                        {profileStatus\r\n                           ? <div className={s.infoProfile__status} >\r\n                              <div onClick={(e) => { editModalStatus(true) }}>{profileStatus}</div>\r\n                           </div>\r\n                           : <div className={s.infoProfile__status} >\r\n                              <div className={s.infoProfile__fakeStatus} onClick={() => { editModalStatus(true) }}>status</div>\r\n                           </div>\r\n                        }\r\n                     </>\r\n                     : <>\r\n                        {profileStatus\r\n                           ? <div className={s.statusProfile__user}>\r\n                              <div>{profileStatus}</div>\r\n                           </div>\r\n                           : <div className={s.statusProfile__empty}></div>\r\n                        }\r\n                     </>\r\n                  }\r\n                  <div className={s.infoProfile__line}></div>\r\n                  <div className={s.infoProfile__information}>\r\n                     <div className={cn(s.informationProfile__row, s.informationProfile)}>\r\n                        <span className={s.informationProfile__title}>About me: </span>\r\n                        {profileInfo.aboutMe\r\n                           ? <span className={s.informationProfile__answer} >{profileInfo.aboutMe}</span>\r\n                           : <span className={s.informationProfile__answer}>not specified</span>\r\n                        }\r\n                        <span className={s.informationProfile__title}>Town: </span>\r\n                        {profileInfo.lookingForAJobDescription\r\n                           ? <span className={s.informationProfile__answer}>{profileInfo.lookingForAJobDescription}</span>\r\n                           : <span className={s.informationProfile__answer}>not specified</span>\r\n                        }\r\n                        <span className={s.informationProfile__title}>Family status: </span>\r\n                        {profileInfo.lookingForAJob\r\n                           ? <span className={s.informationProfile__answer}>married</span>\r\n                           : <span className={s.informationProfile__answer}>not married</span>\r\n                        }\r\n                     </div>\r\n                  </div>\r\n                  {isShowDetails\r\n                     ? <>\r\n                        <div className={s.infoProfile__showDetails} onClick={() => editIsShowDetails(false)}>\r\n                           <span>Hide detailed information</span>\r\n                        </div>\r\n                        <div className={s.infoProfile__information}>\r\n                           <div className={s.infoProfile__line}></div>\r\n                           <div className={cn(s.informationProfile__row, s.informationProfile)}>\r\n                              <span className={s.informationProfile__title}>YouTube: </span>\r\n                              {profileInfo.contacts.youtube\r\n                                 ? <span className={s.informationProfile__answer}>{profileInfo.contacts.youtube}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>Facebook: </span>\r\n                              {profileInfo.contacts.facebook\r\n                                 ? <span className={s.informationProfile__answer}>{profileInfo.contacts.facebook}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>LinkedIn: </span>\r\n                              {profileInfo.contacts.website\r\n                                 ? <span className={s.informationProfile__answer}>{profileInfo.contacts.website}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>GitHub: </span>\r\n                              {profileInfo.contacts.github\r\n                                 ? <span className={s.informationProfile__answer}>{profileInfo.contacts.github}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                           </div>\r\n                        </div>\r\n                     </>\r\n                     : <>\r\n                        <div className={s.infoProfile__showDetails} onClick={(e) => editIsShowDetails(true)}>\r\n                           <span>Show details</span>\r\n                        </div>\r\n                        <div></div>\r\n                     </>\r\n                  }\r\n                  <div className={s.infoProfile__line}></div>\r\n               </div>\r\n               {isOwner && isAuth &&\r\n                  <>\r\n                     <div className={s.profile__addPost}>\r\n                        <div className={s.addPostProfile__row}>\r\n                           <div className={s.addPostProfile__logo}>\r\n                              <img src={props.profileMeInfo.photos.small as string} />\r\n                           </div>\r\n                           <ProfileReduxPost onSubmit={onSubmit} setModalPost={setModalPost} modalPost={modalPost} />\r\n                        </div>\r\n                     </div>\r\n                     {props.profilePosts.length > 0 &&\r\n                        <ProfilePostList removeProfilePost={props.removeProfilePost} profileMeInfo={props.profileMeInfo} profilePosts={props.profilePosts} />\r\n                     }\r\n                  </>\r\n               }\r\n            </div>\r\n         </div>\r\n      </div >\r\n   )\r\n}\r\nexport default Profile","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfilePostCreate\\ProfilePost.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfilePostList\\ProfilePostList.tsx",["211"],"import React from 'react'\r\nimport s from './ProfilePostList.module.css'\r\nimport cn from 'classnames'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { PostType, InfoType } from '../../../redux/profile.reducer'\r\ntype PropsType = {\r\n   profilePosts: Array<PostType>,\r\n   profileMeInfo: InfoType,\r\n   removeProfilePost: (id: string) => void\r\n}\r\nconst ProfilePostList: React.FC<PropsType> = ({ profilePosts, profileMeInfo, removeProfilePost }) => {\r\n   let posts = profilePosts.map((post) => {\r\n      return (\r\n         <div key={post.id} className={s.profile__newPost}>\r\n            <div className={cn(s.newPostProfile__row, s.newPostProfile)}>\r\n               <div className={s.newPostProfile__logo}>\r\n                  <img src={profileMeInfo.photos.small as string} />\r\n               </div>\r\n               <div className={s.newPostProfile__body}>\r\n                  <div className={s.newPostProfile__name}>\r\n                     {profileMeInfo.fullName}\r\n                  </div>\r\n                  <div className={s.newPostProfile__date}>\r\n                     {post.date}\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className={s.newPostProfileContent}>\r\n               {post.post}\r\n            </div>\r\n            <div className={s.newPostProfileRemove} onClick={(e) => { removeProfilePost(post.id) }}>\r\n               <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n         </div>\r\n      )\r\n   })\r\n   return (\r\n      <>\r\n         {posts}\r\n      </>\r\n   )\r\n}\r\nexport default ProfilePostList","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\hoc\\withAuthRedirect.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",["212"],"import React, { useEffect } from 'react'\r\nimport s from './Profile.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter, RouteComponentProps } from 'react-router'\r\nimport Profile from './Profile'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\nimport { addProfilePost, getProfileInfo, getProfileMeInfo, getProfileStatus, InfoType, PostType, removeProfilePost, setProfileImage } from '../../redux/profile.reducer'\r\nimport { AppReducerType } from '../../redux/store'\r\nimport { ThunkDispatch } from 'redux-thunk'\r\nimport { AnyAction } from 'redux'\r\n\r\ntype MapStateToPropsType = {\r\n   userId: number | null,\r\n   profileInfo: InfoType | null,\r\n   profileStatus: string,\r\n   isAuth: boolean,\r\n   profileMeInfo: InfoType | null,\r\n   profilePosts: Array<PostType>,\r\n   profileImage: string | null\r\n}\r\ntype MapDispatchToPropsType = {\r\n   getProfileInfo: (userId: number) => void,\r\n   getProfileMeInfo: (userId: number) => void,\r\n   getProfileStatus: (userId: number) => void,\r\n   setProfileImage: (image: File) => void,\r\n   addProfilePost: (dataPost: PostType) => void,\r\n   removeProfilePost: (id: string) => void,\r\n}\r\ntype OwnPropsType = {\r\n   editModalStatus: (el: boolean) => void\r\n}\r\ntype MathParamsType = {\r\n   userId: string\r\n}\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType & OwnPropsType & RouteComponentProps<MathParamsType>\r\nexport const ProfileContainer: React.FC<PropsType> = ({ match, history, userId, getProfileInfo, getProfileMeInfo, getProfileStatus, profileImage, ...props }) => {\r\n   useEffect(() => {\r\n      let id: number | null = +match.params.userId\r\n      if (!id) {\r\n         if (!userId) {\r\n            history.push('/login')\r\n         }\r\n         else {\r\n            getProfileInfo(userId)\r\n            getProfileMeInfo(userId)\r\n            getProfileStatus(userId)\r\n         }\r\n      }\r\n      else {\r\n         getProfileInfo(id)\r\n         getProfileStatus(id)\r\n      }\r\n   }, [match.params.userId, profileImage, props.isAuth])\r\n\r\n   return (\r\n      <>\r\n         {props.isAuth\r\n            ?\r\n            <>{\r\n               props.profileInfo && props.profileMeInfo\r\n                  ? <Profile removeProfilePost={props.removeProfilePost} profilePosts={props.profilePosts} addProfilePost={props.addProfilePost} profileMeInfo={props.profileMeInfo} editModalStatus={props.editModalStatus} profileInfo={props.profileInfo} setProfileImage={props.setProfileImage} isOwner={!match.params.userId} profileStatus={props.profileStatus} isAuth={props.isAuth} />\r\n                  : <div className={s.preloader__profileWrapper}>\r\n                     <div className={s.preloader__profileBlock}>\r\n                        <Preloader />\r\n                     </div>\r\n                  </div >\r\n            }</>\r\n            : <>{props.profileInfo\r\n               ? <Profile removeProfilePost={props.removeProfilePost} profilePosts={props.profilePosts} addProfilePost={props.addProfilePost} profileMeInfo={props.profileMeInfo as InfoType} editModalStatus={props.editModalStatus} profileInfo={props.profileInfo} setProfileImage={props.setProfileImage} isOwner={!match.params.userId} profileStatus={props.profileStatus} isAuth={props.isAuth} />\r\n               : <div className={s.preloader__profileWrapper}>\r\n                  <div className={s.preloader__profileBlock}>\r\n                     <Preloader />\r\n                  </div>\r\n               </div >\r\n            }</>\r\n         }\r\n      </>\r\n   )\r\n}\r\nconst mapStateToProps = (state: AppReducerType): MapStateToPropsType => {\r\n   return {\r\n      userId: state.auth.id,\r\n      isAuth: state.auth.isAuth,\r\n      profileInfo: state.profile.profileInfo,\r\n      profileStatus: state.profile.profileStatus,\r\n      profileMeInfo: state.profile.profileMeInfo,\r\n      profilePosts: state.profile.profilePosts,\r\n      profileImage: state.profile.profileImage\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>): MapDispatchToPropsType => {\r\n   return {\r\n      getProfileInfo: (userId: number) => { dispatch(getProfileInfo(userId)) },\r\n      setProfileImage: (image: File) => { dispatch(setProfileImage(image)) },\r\n      getProfileStatus: (userId: number) => { dispatch(getProfileStatus(userId)) },\r\n      getProfileMeInfo: (userId: number) => { dispatch(getProfileMeInfo(userId)) },\r\n      addProfilePost: (dataPost: PostType) => { dispatch(addProfilePost(dataPost)) },\r\n      removeProfilePost: (id: string) => { dispatch(removeProfilePost(id)) }\r\n   }\r\n}\r\nlet withRouterUrlUserId = withRouter(ProfileContainer)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouterUrlUserId)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\modals\\ModalStatus\\ModalStatus.tsx",["213"],"import React from 'react'\r\nimport s from './ModalStatus.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { InfoType, setProfileStatus } from '../../../redux/profile.reducer'\r\nimport ModalStatusReduxForm from './ModalStatusForm'\r\nimport { AppReducerType } from '../../../redux/store'\r\nimport { ThunkDispatch } from 'redux-thunk'\r\nimport { AnyAction } from 'redux'\r\nexport type DataFormStatusType = {\r\n   status: string\r\n}\r\ntype MapStateToProps = {\r\n   profileStatus: string\r\n}\r\ntype MapDispatchToProps = {\r\n   setProfileStatus: (status: string) => void\r\n}\r\ntype OwnProps = {\r\n   editModalStatus: (text: boolean) => void,\r\n}\r\ntype PropsType = MapStateToProps & MapDispatchToProps & OwnProps\r\nexport const ModalStatus: React.FC<PropsType> = ({ editModalStatus, setProfileStatus, ...props }) => {\r\n   const onSubmit = (dataForm: DataFormStatusType): void => {\r\n      if (Object.getOwnPropertyNames(dataForm).length > 0) {\r\n         setProfileStatus(dataForm.status)\r\n         editModalStatus(false)\r\n      }\r\n      else {\r\n         setProfileStatus('')\r\n         editModalStatus(false)\r\n      }\r\n   }\r\n   return (\r\n      <div className={s.modalStatus} onClick={() => editModalStatus(false)}>\r\n         <div className={s.modalStatus__window} onClick={(e) => e.stopPropagation()}>\r\n            <ModalStatusReduxForm onSubmit={onSubmit} profileStatus={props.profileStatus} />\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\nconst mapStateToProps = (state: AppReducerType): MapStateToProps => {\r\n   return {\r\n      profileStatus: state.profile.profileStatus\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>): MapDispatchToProps => {\r\n   return {\r\n      setProfileStatus: (status: string) => { dispatch(setProfileStatus(status)) }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalStatus)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\modals\\ModalStatus\\ModalStatusForm.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Login\\Login.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Login\\LoginForm.tsx",["214"],"import React from 'react'\r\nimport s from './LoginForm.module.css'\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\"\r\nimport { required } from \"../../validators/validators\"\r\nimport { useState } from \"react\"\r\nimport { Input } from \"../Common/FormControl/FormControl\"\r\nimport { DataFormLoginType } from './Login'\r\n\r\ntype OwnPropsType = {\r\n   isCaptcha: boolean,\r\n   urlCaptcha: string | null\r\n}\r\n\r\nexport const LoginForm: React.FC<InjectedFormProps<DataFormLoginType, OwnPropsType> & OwnPropsType> = ({ handleSubmit, isCaptcha, urlCaptcha }) => {\r\n   const [checked, setChecked] = useState<boolean>(false)\r\n   const [activeCheckbox, setActiveCheckbox] = useState<string>(`${s.login__checkbox}`)\r\n   return (\r\n      <form className={s.login__form} onSubmit={handleSubmit}>\r\n         <div className={s.login__item}><Field className={s.login__input} component={Input} type={'input'} name={'email'} validate={required} /></div>\r\n         <div className={s.login__item}><Field className={s.login__input} component={Input} type={'password'} name={'password'} validate={required} /></div>\r\n         <div className={s.login__item}>\r\n            {!checked\r\n               ? <label>\r\n                  <div className={s.login__checkboxBlock} onClick={() => { setActiveCheckbox(`${s.login__checkbox} ${s.checkbox__active}`); setChecked(true); }} >\r\n                     <div className={activeCheckbox}></div>\r\n                     <span>Remember me</span>\r\n                  </div>\r\n                  <Field className={s.checkboxLogin} component={'input'} type={'checkbox'} name={'rememberMe'} checked={checked} />\r\n               </label>\r\n               : <label>\r\n                  <div className={s.login__checkboxBlock} onClick={() => { setActiveCheckbox(`${s.login__checkbox}`); setChecked(false); }} >\r\n                     <div className={activeCheckbox}></div>\r\n                     <span>Remember me</span>\r\n                  </div>\r\n                  <Field className={s.checkboxLogin} component={'input'} type={'checkbox'} name={'rememberMe'} checked={checked} />\r\n               </label>\r\n            }\r\n         </div>\r\n         <div>\r\n            {isCaptcha && <img className={s.login__captcha} src={urlCaptcha as string} />}\r\n            {isCaptcha && <div className={s.login__item}><Field className={s.login__input} component={'input'} type={'input'} name={'captcha'} /></div>}\r\n         </div>\r\n         <button className={s.login__button} type={'submit'}>To come in</button>\r\n      </form>\r\n   )\r\n}\r\nexport const LoginReduxForm = reduxForm<DataFormLoginType, OwnPropsType>({ form: 'login' })(LoginForm)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Header\\Header.tsx",["215","216","217"],"import React, { useState } from 'react'\r\nimport s from './Header.module.css'\r\nimport cn from 'classnames'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\r\nimport logoImg from '../../assets/images/logoImg.png'\r\nimport { InfoType } from '../../redux/profile.reducer'\r\n\r\ntype PropsType = {\r\n   isAuth: boolean,\r\n   profileMeInfo: InfoType | null,\r\n   logOutServerTC: () => void\r\n}\r\nconst Header: React.FC<PropsType> = ({ isAuth, profileMeInfo, logOutServerTC }) => {\r\n   let [modal, editModal] = useState<boolean>(false)\r\n   return (\r\n      <div className={s.header} >\r\n         <div className={s.header__container}>\r\n            <div className={s.header__row}>\r\n               <div className={cn(s.header__logo, s.logoHeader)}>\r\n                  <div className={s.logoHeader__row}>\r\n                     <div className={s.logoHeader__img}>\r\n                        <img src={logoImg} />\r\n                     </div>\r\n                     <div className={s.logoHeader__name}>\r\n                        vkontakte\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               {isAuth\r\n                  ? <>\r\n                     {!modal\r\n                        ? <div className={cn(s.header__body, s.bodyHeader)} onClick={() => editModal(true)}>\r\n                           <div className={s.bodyHeader__row}>\r\n                              <div className={s.bodyHeader__fullName}>{isAuth && profileMeInfo?.fullName}</div>\r\n                              <div className={s.bodyHeader__logo}>{isAuth && <img src={(profileMeInfo as InfoType).photos.small as string} />}</div>\r\n                              <div className={s.bodyHeader__arrow}><FontAwesomeIcon icon={faChevronDown} /></div>\r\n                           </div>\r\n                        </div>\r\n                        : <div className={cn(s.header__body, s.bodyHeader)} onClick={() => editModal(false)}>\r\n                           <div className={s.bodyHeader__row}>\r\n                              <div className={s.bodyHeader__fullName}>{isAuth && profileMeInfo?.fullName}</div>\r\n                              <div className={s.bodyHeader__logo}>{isAuth && <img src={(profileMeInfo as InfoType).photos.small as string} />}</div>\r\n                              <div className={s.bodyHeader__arrow}><FontAwesomeIcon icon={faChevronDown} /></div>\r\n                           </div>\r\n                        </div>\r\n                     }\r\n                  </>\r\n                  : <div className={s.header__login}>\r\n                     <NavLink className={s.loginHeader__link} to={'/login'}>Login</NavLink>\r\n                  </div>\r\n               }\r\n            </div>\r\n            {modal &&\r\n               <div className={s.header__modal}>\r\n                  <div className={s.modalHeader__item} onClick={() => editModal(false)}>\r\n                     <NavLink to={'/settings'} className={s.modalHeader__link}>Settings</NavLink>\r\n                  </div>\r\n                  <div className={s.modalHeader__line}></div>\r\n                  <div className={s.modalHeader__link} onClick={() => { logOutServerTC(); editModal(false) }}>\r\n                     <span>Log Out</span>\r\n                  </div>\r\n               </div>\r\n            }\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\nexport default Header","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Header\\HeaderContainer.tsx",["218"],"import React, { useEffect } from 'react'\r\nimport s from './Header.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { logOutServerTC } from '../../redux/auth.reducer'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\nimport { getProfileMeInfo, InfoType } from '../../redux/profile.reducer'\r\nimport { AppReducerType } from '../../redux/store'\r\nimport { ThunkDispatch } from 'redux-thunk'\r\nimport { AnyAction } from 'redux'\r\nimport Header from './Header'\r\n\r\ntype PropsType = MapStateToProps & MapDispatchToProps\r\ntype MapStateToProps = {\r\n   isAuth: boolean,\r\n   userId: number | null,\r\n   profileMeInfo: InfoType | null,\r\n}\r\ntype MapDispatchToProps = {\r\n   logOutServerTC: () => void,\r\n   getProfileMeInfo: (userId: number) => void\r\n}\r\nconst HeaderContainer: React.FC<PropsType> = ({ getProfileMeInfo, userId, ...props }) => {\r\n   useEffect(() => {\r\n      if (props.isAuth) {\r\n         getProfileMeInfo(userId as number)\r\n      }\r\n   }, [props.isAuth])\r\n   if (props.isAuth) {\r\n      if (!props.profileMeInfo) {\r\n         return (\r\n            <div className={s.preloader__headerWrapper}>\r\n               <div className={s.preloader__headerBlock}>\r\n                  <Preloader />\r\n               </div>\r\n            </div >\r\n         )\r\n      }\r\n   }\r\n   return (\r\n      <Header {...props} />\r\n   )\r\n}\r\nconst mapStateToProps = (state: AppReducerType): MapStateToProps => {\r\n   return {\r\n      isAuth: state.auth.isAuth,\r\n      userId: state.auth.id,\r\n      profileMeInfo: state.profile.profileMeInfo,\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>) => {\r\n   return {\r\n      logOutServerTC: () => { dispatch(logOutServerTC()) },\r\n      getProfileMeInfo: (userId: number) => { dispatch(getProfileMeInfo(userId)) }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\App.tsx",["219"],"import React, { useEffect, useState } from 'react'\nimport s from './App.module.css';\nimport Aside from './components/Aside/Aside'\nimport Messages from './components/Messages/Messages'\nimport Settings from './components/Settings/Settings'\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { initializeTC } from './redux/app.reducer';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport ModalStatus from './components/modals/ModalStatus/ModalStatus';\nimport Header from './components/Header/HeaderContainer';\nimport { withSuspense } from './hoc/withSuspense';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { AppReducerType } from './redux/store';\n\nconst ProfileContainerLazy = React.lazy(() => { return import('./components/Profile/ProfileContainer') })\nconst UsersContainerLazy = React.lazy(() => { return import('./components/Users/UsersContainer') })\nconst LoginContainerLazy = React.lazy(() => { return import('./components/Login/Login') })\nconst UsersAllContainerLazy = React.lazy(() => { return import('./components/Users/UsersAll/UsersAllContainer') })\n\ntype PropsType = MapStateToProps & MapDispatchToProps\ntype MapDispatchToProps = {\n  initializeTC: () => void\n}\ntype MapStateToProps = {\n  initializer: boolean\n}\ntype OwnPropsType = {\n  modalStatus: boolean,\n  editModalStatus: (text: boolean) => void\n}\nexport const App: React.FC<PropsType> = ({ initializer, initializeTC }) => {\n  useEffect(() => {\n    initializeTC()\n  })\n  const [modalStatus, editModalStatus] = useState<boolean>(false)\n  if (!initializer) {\n    return (\n      <div className={s.preloader__AppWrapper}>\n        <div className={s.preloader__AppBlock}>\n          <Preloader />\n        </div>\n      </div>\n    )\n  }\n  else {\n    return (\n      <>\n        <div className={s.wrapper}>\n          <Header />\n          <div className={s.main}>\n            <div className={s.container}>\n              <div className={s.main__row}>\n                <div className={s.main__aside}>\n                  <Aside />\n                </div>\n                <div className={s.main__content}>\n                  <Route path={'/profile/:userId?'} render={withSuspense(() => <ProfileContainerLazy editModalStatus={editModalStatus} />)} />\n                  <Route path={'/messages'} render={() => <Messages />} />\n                  <Route exact path={'/users'} render={withSuspense(UsersContainerLazy)} />\n                  <Route path={'/settings'} render={() => <Settings />} />\n                  <Route path={'/login'} render={withSuspense(LoginContainerLazy)} />\n                  <Route path={'/users/all'} render={withSuspense(UsersAllContainerLazy)} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {modalStatus && <ModalStatus editModalStatus={editModalStatus} />}\n      </>\n    )\n  }\n}\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>): MapDispatchToProps => {\n  return {\n    initializeTC: () => { dispatch(initializeTC()) }\n  }\n}\nconst mapStateToProps = (state: AppReducerType): MapStateToProps => {\n  return {\n    initializer: state.app.initializer\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Aside\\Aside.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Preloader\\Preloader.tsx",["220"],"import React from 'react'\r\nimport loadingImage from '../../../assets/images/loading.svg'\r\nimport s from './Preloader.module.css'\r\n\r\nlet Preloader: React.FC = () => {\r\n   return (\r\n      <img src={loadingImage} className={s.preloader__img} />\r\n   )\r\n}\r\nexport default Preloader","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Preloader\\PreloaderLine\\PreloaderLine.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\hoc\\withSuspense.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\index.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersSearch\\UsersSearch.tsx",["221"],{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":81,"column":60,"nodeType":"228","messageId":"229","endLine":81,"endColumn":62},{"ruleId":"230","severity":1,"message":"231","line":50,"column":45,"nodeType":"232","endLine":50,"endColumn":67},{"ruleId":"230","severity":1,"message":"231","line":51,"column":45,"nodeType":"232","endLine":51,"endColumn":76},{"ruleId":"233","severity":1,"message":"234","line":5,"column":69,"nodeType":"235","messageId":"236","endLine":5,"endColumn":89},{"ruleId":"237","severity":1,"message":"238","line":38,"column":7,"nodeType":"239","endLine":38,"endColumn":9,"suggestions":"240"},{"ruleId":"237","severity":1,"message":"241","line":42,"column":7,"nodeType":"239","endLine":42,"endColumn":9,"suggestions":"242"},{"ruleId":"230","severity":1,"message":"231","line":30,"column":33,"nodeType":"232","endLine":30,"endColumn":64},{"ruleId":"230","severity":1,"message":"231","line":31,"column":33,"nodeType":"232","endLine":31,"endColumn":55},{"ruleId":"237","severity":1,"message":"238","line":36,"column":7,"nodeType":"239","endLine":36,"endColumn":9,"suggestions":"243"},{"ruleId":"237","severity":1,"message":"244","line":41,"column":7,"nodeType":"239","endLine":41,"endColumn":19,"suggestions":"245"},{"ruleId":"237","severity":1,"message":"246","line":47,"column":7,"nodeType":"239","endLine":47,"endColumn":9,"suggestions":"247"},{"ruleId":"248","severity":1,"message":"249","line":19,"column":120,"nodeType":"250","messageId":"251","endLine":19,"endColumn":121,"suggestions":"252"},{"ruleId":"248","severity":1,"message":"253","line":19,"column":124,"nodeType":"250","messageId":"251","endLine":19,"endColumn":125,"suggestions":"254"},{"ruleId":"248","severity":1,"message":"255","line":19,"column":126,"nodeType":"250","messageId":"251","endLine":19,"endColumn":127,"suggestions":"256"},{"ruleId":"248","severity":1,"message":"257","line":19,"column":128,"nodeType":"250","messageId":"251","endLine":19,"endColumn":129,"suggestions":"258"},{"ruleId":"248","severity":1,"message":"259","line":19,"column":130,"nodeType":"250","messageId":"251","endLine":19,"endColumn":131,"suggestions":"260"},{"ruleId":"248","severity":1,"message":"249","line":19,"column":830,"nodeType":"250","messageId":"251","endLine":19,"endColumn":831,"suggestions":"261"},{"ruleId":"248","severity":1,"message":"253","line":19,"column":834,"nodeType":"250","messageId":"251","endLine":19,"endColumn":835,"suggestions":"262"},{"ruleId":"248","severity":1,"message":"255","line":19,"column":836,"nodeType":"250","messageId":"251","endLine":19,"endColumn":837,"suggestions":"263"},{"ruleId":"248","severity":1,"message":"257","line":19,"column":838,"nodeType":"250","messageId":"251","endLine":19,"endColumn":839,"suggestions":"264"},{"ruleId":"248","severity":1,"message":"259","line":19,"column":840,"nodeType":"250","messageId":"251","endLine":19,"endColumn":841,"suggestions":"265"},{"ruleId":"248","severity":1,"message":"249","line":19,"column":934,"nodeType":"250","messageId":"251","endLine":19,"endColumn":935,"suggestions":"266"},{"ruleId":"248","severity":1,"message":"253","line":19,"column":938,"nodeType":"250","messageId":"251","endLine":19,"endColumn":939,"suggestions":"267"},{"ruleId":"248","severity":1,"message":"255","line":19,"column":940,"nodeType":"250","messageId":"251","endLine":19,"endColumn":941,"suggestions":"268"},{"ruleId":"248","severity":1,"message":"257","line":19,"column":942,"nodeType":"250","messageId":"251","endLine":19,"endColumn":943,"suggestions":"269"},{"ruleId":"248","severity":1,"message":"259","line":19,"column":944,"nodeType":"250","messageId":"251","endLine":19,"endColumn":945,"suggestions":"270"},{"ruleId":"248","severity":1,"message":"249","line":19,"column":1045,"nodeType":"250","messageId":"251","endLine":19,"endColumn":1046,"suggestions":"271"},{"ruleId":"248","severity":1,"message":"253","line":19,"column":1049,"nodeType":"250","messageId":"251","endLine":19,"endColumn":1050,"suggestions":"272"},{"ruleId":"248","severity":1,"message":"255","line":19,"column":1051,"nodeType":"250","messageId":"251","endLine":19,"endColumn":1052,"suggestions":"273"},{"ruleId":"248","severity":1,"message":"257","line":19,"column":1053,"nodeType":"250","messageId":"251","endLine":19,"endColumn":1054,"suggestions":"274"},{"ruleId":"248","severity":1,"message":"259","line":19,"column":1055,"nodeType":"250","messageId":"251","endLine":19,"endColumn":1056,"suggestions":"275"},{"ruleId":"248","severity":1,"message":"276","line":19,"column":1093,"nodeType":"250","messageId":"251","endLine":19,"endColumn":1094,"suggestions":"277"},{"ruleId":"248","severity":1,"message":"249","line":19,"column":1175,"nodeType":"250","messageId":"251","endLine":19,"endColumn":1176,"suggestions":"278"},{"ruleId":"248","severity":1,"message":"253","line":19,"column":1179,"nodeType":"250","messageId":"251","endLine":19,"endColumn":1180,"suggestions":"279"},{"ruleId":"248","severity":1,"message":"255","line":19,"column":1181,"nodeType":"250","messageId":"251","endLine":19,"endColumn":1182,"suggestions":"280"},{"ruleId":"248","severity":1,"message":"257","line":19,"column":1183,"nodeType":"250","messageId":"251","endLine":19,"endColumn":1184,"suggestions":"281"},{"ruleId":"248","severity":1,"message":"259","line":19,"column":1185,"nodeType":"250","messageId":"251","endLine":19,"endColumn":1186,"suggestions":"282"},{"ruleId":"248","severity":1,"message":"283","line":28,"column":34,"nodeType":"250","messageId":"251","endLine":28,"endColumn":35,"suggestions":"284"},{"ruleId":"248","severity":1,"message":"285","line":28,"column":36,"nodeType":"250","messageId":"251","endLine":28,"endColumn":37,"suggestions":"286"},{"ruleId":"248","severity":1,"message":"283","line":28,"column":52,"nodeType":"250","messageId":"251","endLine":28,"endColumn":53,"suggestions":"287"},{"ruleId":"248","severity":1,"message":"285","line":28,"column":54,"nodeType":"250","messageId":"251","endLine":28,"endColumn":55,"suggestions":"288"},{"ruleId":"289","severity":1,"message":"290","line":37,"column":22,"nodeType":"291","messageId":"292","endLine":37,"endColumn":30,"fix":"293"},{"ruleId":"230","severity":1,"message":"231","line":52,"column":55,"nodeType":"232","endLine":52,"endColumn":127},{"ruleId":"230","severity":1,"message":"231","line":168,"column":31,"nodeType":"232","endLine":168,"endColumn":87},{"ruleId":"230","severity":1,"message":"231","line":18,"column":19,"nodeType":"232","endLine":18,"endColumn":69},{"ruleId":"237","severity":1,"message":"294","line":53,"column":7,"nodeType":"239","endLine":53,"endColumn":56,"suggestions":"295"},{"ruleId":"233","severity":1,"message":"296","line":4,"column":10,"nodeType":"235","messageId":"236","endLine":4,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":40,"column":27,"nodeType":"232","endLine":40,"endColumn":90},{"ruleId":"230","severity":1,"message":"231","line":24,"column":25,"nodeType":"232","endLine":24,"endColumn":46},{"ruleId":"230","severity":1,"message":"231","line":37,"column":78,"nodeType":"232","endLine":37,"endColumn":142},{"ruleId":"230","severity":1,"message":"231","line":44,"column":78,"nodeType":"232","endLine":44,"endColumn":142},{"ruleId":"237","severity":1,"message":"297","line":27,"column":7,"nodeType":"239","endLine":27,"endColumn":21,"suggestions":"298"},{"ruleId":"233","severity":1,"message":"299","line":29,"column":6,"nodeType":"235","messageId":"236","endLine":29,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":7,"column":7,"nodeType":"232","endLine":7,"endColumn":62},{"ruleId":"237","severity":1,"message":"300","line":22,"column":25,"nodeType":"235","endLine":22,"endColumn":36},"no-native-reassign",["301"],"no-negated-in-lhs",["302"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'getUsersUnfollowedTC' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getOnceUnfollowedTC' and 'isFetchingOnce'. Either include them or remove the dependency array. If 'getOnceUnfollowedTC' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["303"],"React Hook useEffect has missing dependencies: 'countFollowed' and 'getUsersFollowedTC'. Either include them or remove the dependency array. If 'getUsersFollowedTC' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["304"],["305"],"React Hook useEffect has missing dependencies: 'count', 'getUsersUnfollowedTC', and 'page'. Either include them or remove the dependency array. If 'getUsersUnfollowedTC' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["306"],"React Hook useEffect has a missing dependency: 'scrollHandler'. Either include it or remove the dependency array.",["307"],"no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["308","309"],"Unnecessary escape character: \\(.",["310","311"],"Unnecessary escape character: \\).",["312","313"],"Unnecessary escape character: \\*.",["314","315"],"Unnecessary escape character: \\+.",["316","317"],["318","319"],["320","321"],["322","323"],["324","325"],["326","327"],["328","329"],["330","331"],["332","333"],["334","335"],["336","337"],["338","339"],["340","341"],["342","343"],["344","345"],["346","347"],"Unnecessary escape character: \\#.",["348","349"],["350","351"],["352","353"],["354","355"],["356","357"],["358","359"],"Unnecessary escape character: \\..",["360","361"],"Unnecessary escape character: \\/.",["362","363"],["364","365"],["366","367"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"368","text":"369"},"React Hook useEffect has missing dependencies: 'getProfileInfo', 'getProfileMeInfo', 'getProfileStatus', 'history', and 'userId'. Either include them or remove the dependency array. If 'getProfileInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["370"],"'InfoType' is defined but never used.","React Hook useEffect has missing dependencies: 'getProfileMeInfo' and 'userId'. Either include them or remove the dependency array. If 'getProfileMeInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["371"],"'OwnPropsType' is defined but never used.","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","no-global-assign","no-unsafe-negation",{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"372","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"messageId":"381","fix":"382","desc":"383"},{"messageId":"384","fix":"385","desc":"386"},{"messageId":"381","fix":"387","desc":"383"},{"messageId":"384","fix":"388","desc":"386"},{"messageId":"381","fix":"389","desc":"383"},{"messageId":"384","fix":"390","desc":"386"},{"messageId":"381","fix":"391","desc":"383"},{"messageId":"384","fix":"392","desc":"386"},{"messageId":"381","fix":"393","desc":"383"},{"messageId":"384","fix":"394","desc":"386"},{"messageId":"381","fix":"395","desc":"383"},{"messageId":"384","fix":"396","desc":"386"},{"messageId":"381","fix":"397","desc":"383"},{"messageId":"384","fix":"398","desc":"386"},{"messageId":"381","fix":"399","desc":"383"},{"messageId":"384","fix":"400","desc":"386"},{"messageId":"381","fix":"401","desc":"383"},{"messageId":"384","fix":"402","desc":"386"},{"messageId":"381","fix":"403","desc":"383"},{"messageId":"384","fix":"404","desc":"386"},{"messageId":"381","fix":"405","desc":"383"},{"messageId":"384","fix":"406","desc":"386"},{"messageId":"381","fix":"407","desc":"383"},{"messageId":"384","fix":"408","desc":"386"},{"messageId":"381","fix":"409","desc":"383"},{"messageId":"384","fix":"410","desc":"386"},{"messageId":"381","fix":"411","desc":"383"},{"messageId":"384","fix":"412","desc":"386"},{"messageId":"381","fix":"413","desc":"383"},{"messageId":"384","fix":"414","desc":"386"},{"messageId":"381","fix":"415","desc":"383"},{"messageId":"384","fix":"416","desc":"386"},{"messageId":"381","fix":"417","desc":"383"},{"messageId":"384","fix":"418","desc":"386"},{"messageId":"381","fix":"419","desc":"383"},{"messageId":"384","fix":"420","desc":"386"},{"messageId":"381","fix":"421","desc":"383"},{"messageId":"384","fix":"422","desc":"386"},{"messageId":"381","fix":"423","desc":"383"},{"messageId":"384","fix":"424","desc":"386"},{"messageId":"381","fix":"425","desc":"383"},{"messageId":"384","fix":"426","desc":"386"},{"messageId":"381","fix":"427","desc":"383"},{"messageId":"384","fix":"428","desc":"386"},{"messageId":"381","fix":"429","desc":"383"},{"messageId":"384","fix":"430","desc":"386"},{"messageId":"381","fix":"431","desc":"383"},{"messageId":"384","fix":"432","desc":"386"},{"messageId":"381","fix":"433","desc":"383"},{"messageId":"384","fix":"434","desc":"386"},{"messageId":"381","fix":"435","desc":"383"},{"messageId":"384","fix":"436","desc":"386"},{"messageId":"381","fix":"437","desc":"383"},{"messageId":"384","fix":"438","desc":"386"},{"messageId":"381","fix":"439","desc":"383"},{"messageId":"384","fix":"440","desc":"386"},{"messageId":"381","fix":"441","desc":"383"},{"messageId":"384","fix":"442","desc":"386"},{"messageId":"381","fix":"443","desc":"383"},{"messageId":"384","fix":"444","desc":"386"},[1548,1548],"()",{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},"Update the dependencies array to be: [getOnceUnfollowedTC, isFetchingOnce]",{"range":"449","text":"450"},"Update the dependencies array to be: [countFollowed, getUsersFollowedTC]",{"range":"451","text":"452"},{"range":"453","text":"450"},"Update the dependencies array to be: [count, getUsersUnfollowedTC, isFetching, page]",{"range":"454","text":"455"},"Update the dependencies array to be: [scrollHandler]",{"range":"456","text":"457"},"removeEscape",{"range":"458","text":"459"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"460","text":"461"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"462","text":"459"},{"range":"463","text":"461"},{"range":"464","text":"459"},{"range":"465","text":"461"},{"range":"466","text":"459"},{"range":"467","text":"461"},{"range":"468","text":"459"},{"range":"469","text":"461"},{"range":"470","text":"459"},{"range":"471","text":"461"},{"range":"472","text":"459"},{"range":"473","text":"461"},{"range":"474","text":"459"},{"range":"475","text":"461"},{"range":"476","text":"459"},{"range":"477","text":"461"},{"range":"478","text":"459"},{"range":"479","text":"461"},{"range":"480","text":"459"},{"range":"481","text":"461"},{"range":"482","text":"459"},{"range":"483","text":"461"},{"range":"484","text":"459"},{"range":"485","text":"461"},{"range":"486","text":"459"},{"range":"487","text":"461"},{"range":"488","text":"459"},{"range":"489","text":"461"},{"range":"490","text":"459"},{"range":"491","text":"461"},{"range":"492","text":"459"},{"range":"493","text":"461"},{"range":"494","text":"459"},{"range":"495","text":"461"},{"range":"496","text":"459"},{"range":"497","text":"461"},{"range":"498","text":"459"},{"range":"499","text":"461"},{"range":"500","text":"459"},{"range":"501","text":"461"},{"range":"502","text":"459"},{"range":"503","text":"461"},{"range":"504","text":"459"},{"range":"505","text":"461"},{"range":"506","text":"459"},{"range":"507","text":"461"},{"range":"508","text":"459"},{"range":"509","text":"461"},{"range":"510","text":"459"},{"range":"511","text":"461"},{"range":"512","text":"459"},{"range":"513","text":"461"},{"range":"514","text":"459"},{"range":"515","text":"461"},{"range":"516","text":"459"},{"range":"517","text":"461"},{"range":"518","text":"459"},{"range":"519","text":"461"},"Update the dependencies array to be: [getProfileInfo, getProfileMeInfo, getProfileStatus, history, match.params.userId, profileImage, props.isAuth, userId]",{"range":"520","text":"521"},"Update the dependencies array to be: [getProfileMeInfo, props.isAuth, userId]",{"range":"522","text":"523"},[1584,1586],"[getOnceUnfollowedTC, isFetchingOnce]",[1712,1714],"[countFollowed, getUsersFollowedTC]",[1502,1504],[1624,1636],"[count, getUsersUnfollowedTC, isFetching, page]",[1820,1822],"[scrollHandler]",[610,611],"",[610,610],"\\",[614,615],[614,614],[616,617],[616,616],[618,619],[618,618],[620,621],[620,620],[1320,1321],[1320,1320],[1324,1325],[1324,1324],[1326,1327],[1326,1326],[1328,1329],[1328,1328],[1330,1331],[1330,1330],[1424,1425],[1424,1424],[1428,1429],[1428,1428],[1430,1431],[1430,1430],[1432,1433],[1432,1432],[1434,1435],[1434,1434],[1535,1536],[1535,1535],[1539,1540],[1539,1539],[1541,1542],[1541,1541],[1543,1544],[1543,1543],[1545,1546],[1545,1545],[1583,1584],[1583,1583],[1665,1666],[1665,1665],[1669,1670],[1669,1669],[1671,1672],[1671,1671],[1673,1674],[1673,1673],[1675,1676],[1675,1675],[1948,1949],[1948,1948],[1950,1951],[1950,1950],[1966,1967],[1966,1966],[1968,1969],[1968,1968],[1937,1986],"[getProfileInfo, getProfileMeInfo, getProfileStatus, history, match.params.userId, profileImage, props.isAuth, userId]",[951,965],"[getProfileMeInfo, props.isAuth, userId]"]