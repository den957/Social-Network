[{"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\App.js":"2","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Header\\Header.jsx":"4","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Aside\\Aside.jsx":"5","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Messages\\Messages.jsx":"6","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\Profile.jsx":"7","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\Users.jsx":"8","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\store.js":"9","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\api\\api.js":"10","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Login\\Login.jsx":"11","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Login\\LoginForm.jsx":"12","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\validators\\validators.js":"13","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Preloader\\Preloader.jsx":"14","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Paginator\\Paginator.jsx":"15","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\modals\\ModalStatus\\ModalStatus.jsx":"16","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\modals\\ModalStatus\\ModalStatusForm.jsx":"17","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\FormControl\\FormControl.js":"18","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Settings\\SettingsContact.jsx":"19","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Settings\\SettingsContactForm.jsx":"20","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersAll.jsx":"21","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\hoc\\withAuthRedirect.js":"22","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Preloader\\PreloaderLine\\PreloaderLine.jsx":"23","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfilePostCreate\\ProfilePost.jsx":"24","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfilePostList\\ProfilePostList.jsx":"25","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\hoc\\withSuspense.js":"26","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\app.reducer.ts":"27","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\auth.reducer.ts":"28","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\login.reducer.ts":"29","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\profile.reducer.ts":"30","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\users.reducer.ts":"31"},{"size":709,"mtime":1614602397085,"results":"32","hashOfConfig":"33"},{"size":2879,"mtime":1615136301417,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":4633,"mtime":1614274149637,"results":"36","hashOfConfig":"33"},{"size":1259,"mtime":1615139566694,"results":"37","hashOfConfig":"33"},{"size":506,"mtime":1613091159281,"results":"38","hashOfConfig":"33"},{"size":12653,"mtime":1615659828862,"results":"39","hashOfConfig":"33"},{"size":5023,"mtime":1615139465479,"results":"40","hashOfConfig":"33"},{"size":710,"mtime":1615242015723,"results":"41","hashOfConfig":"33"},{"size":2439,"mtime":1613130518486,"results":"42","hashOfConfig":"33"},{"size":1411,"mtime":1615647541620,"results":"43","hashOfConfig":"33"},{"size":2349,"mtime":1615647387590,"results":"44","hashOfConfig":"33"},{"size":1979,"mtime":1615241539750,"results":"45","hashOfConfig":"33"},{"size":271,"mtime":1612897638793,"results":"46","hashOfConfig":"33"},{"size":2054,"mtime":1613411661775,"results":"47","hashOfConfig":"33"},{"size":1103,"mtime":1615209591245,"results":"48","hashOfConfig":"33"},{"size":622,"mtime":1615136780034,"results":"49","hashOfConfig":"33"},{"size":353,"mtime":1615647528115,"results":"50","hashOfConfig":"33"},{"size":2210,"mtime":1615284239695,"results":"51","hashOfConfig":"33"},{"size":4908,"mtime":1615284232449,"results":"52","hashOfConfig":"33"},{"size":5396,"mtime":1615137164007,"results":"53","hashOfConfig":"33"},{"size":646,"mtime":1614278925930,"results":"54","hashOfConfig":"33"},{"size":766,"mtime":1614273514917,"results":"55","hashOfConfig":"33"},{"size":1809,"mtime":1614449456374,"results":"56","hashOfConfig":"33"},{"size":1383,"mtime":1615203425903,"results":"57","hashOfConfig":"33"},{"size":342,"mtime":1614507884420,"results":"58","hashOfConfig":"33"},{"size":907,"mtime":1615663756254,"results":"59","hashOfConfig":"33"},{"size":3082,"mtime":1615663746216,"results":"60","hashOfConfig":"33"},{"size":913,"mtime":1615663731969,"results":"61","hashOfConfig":"33"},{"size":5630,"mtime":1615663707906,"results":"62","hashOfConfig":"33"},{"size":6965,"mtime":1615664657322,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"s4zipz",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"130"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\index.js",[],["140","141"],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\App.js",["142","143"],"import React, { useEffect, useState } from 'react'\nimport s from './App.module.css';\nimport Aside from './components/Aside/Aside'\nimport Messages from './components/Messages/Messages'\nimport SettingsContact from './components/Settings/SettingsContact'\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { initializeTC } from './redux/app.reducer';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport ModalStatus from './components/modals/ModalStatus/ModalStatus';\nimport Header from './components/Header/Header';\nimport { MetaTags } from 'react-meta-tags'\nimport { ReactTitle } from 'react-meta-tags'\nimport { withSuspense } from './hoc/withSuspense';\n\nconst ProfileContainerLazy = React.lazy(() => { return import('./components/Profile/Profile') })\nconst UsersContainerLazy = React.lazy(() => { return import('./components/Users/Users') })\nconst LoginContainerLazy = React.lazy(() => { return import('./components/Login/Login') })\nconst UsersAllContainerLazy = React.lazy(() => { return import('./components/Users/UsersAll') })\n\nexport const App = (props) => {\n  useEffect(() => {\n    props.initializeTC()\n  })\n  const [modalStatus, editModalStatus] = useState(false)\n  if (!props.initializer) {\n    return (\n      <div className={s.preloader__AppWrapper}>\n        <div className={s.preloader__AppBlock}>\n          <Preloader />\n        </div>\n      </div>\n    )\n  }\n  else {\n    return (\n      <>\n        <div className={s.wrapper}>\n          <Header />\n          <div className={s.main}>\n            <div className={s.container}>\n              <div className={s.main__row}>\n                <div className={s.main__aside}>\n                  <Aside />\n                </div>\n                <div className={s.main__content}>\n                  <Route path={'/profile/:userId?'} render={withSuspense(() => { return <ProfileContainerLazy editModalStatus={editModalStatus} modalStatus={modalStatus} /> })} />\n                  <Route path={'/messages'} render={() => <Messages />} />\n                  <Route exact path={'/users'} render={withSuspense(UsersContainerLazy)} />\n                  <Route path={'/settings'} render={() => <SettingsContact />} />\n                  <Route path={'/login'} render={withSuspense(LoginContainerLazy)} />\n                  <Route path={'/users/all'} render={withSuspense(UsersAllContainerLazy)} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {modalStatus && <ModalStatus modalStatus={modalStatus} editModalStatus={editModalStatus} />}\n      </>\n    )\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    initializeTC: () => { dispatch(initializeTC()) }\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    initializer: state.app.initializer\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Header\\Header.jsx",["144","145","146","147","148"],"import React, { useEffect, useState } from 'react'\r\nimport s from './Header.module.css'\r\nimport cn from 'classnames'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\r\nimport logoImg from '../../assets/images/logoImg.png'\r\nimport { connect } from 'react-redux'\r\nimport { logOutServerTC } from '../../redux/auth.reducer'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\nimport { getProfileMeInfo } from '../../redux/profile.reducer'\r\n\r\nexport const Header = (props) => {\r\n   let [modal, editModal] = useState(false)\r\n   return (\r\n      <div className={s.header} >\r\n         <div className={s.header__container}>\r\n            <div className={s.header__row}>\r\n               <div className={cn(s.header__logo, s.logoHeader)}>\r\n                  <div className={s.logoHeader__row}>\r\n                     <div className={s.logoHeader__img}>\r\n                        <img src={logoImg} />\r\n                     </div>\r\n                     <div className={s.logoHeader__name}>\r\n                        vkontakte\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               {props.isAuth\r\n                  ? <>\r\n                     {!modal\r\n                        ? <div className={cn(s.header__body, s.bodyHeader)} onClick={() => editModal(true)}>\r\n                           <div className={s.bodyHeader__row}>\r\n                              <div className={s.bodyHeader__fullName}>{props.isAuth && props.profileMeInfo.fullName}</div>\r\n                              <div className={s.bodyHeader__logo}>{props.isAuth && <img src={props.profileMeInfo.photos.small} />}</div>\r\n                              <div className={s.bodyHeader__arrow}><FontAwesomeIcon icon={faChevronDown} /></div>\r\n                           </div>\r\n                        </div>\r\n                        : <div className={s.header__body, s.bodyHeader} onClick={() => editModal(false)}>\r\n                           <div className={s.bodyHeader__row}>\r\n                              <div className={s.bodyHeader__fullName}>{props.isAuth && props.profileMeInfo.fullName}</div>\r\n                              <div className={s.bodyHeader__logo}>{props.isAuth && <img src={props.profileMeInfo.photos.small} />}</div>\r\n                              <div className={s.bodyHeader__arrow}><FontAwesomeIcon icon={faChevronDown} /></div>\r\n                           </div>\r\n                        </div>\r\n                     }\r\n                  </>\r\n                  : <div className={s.header__login}>\r\n                     <NavLink className={s.loginHeader__link} to={'/login'}>Login</NavLink>\r\n                  </div>\r\n               }\r\n            </div>\r\n            {modal &&\r\n               <div className={s.header__modal}>\r\n                  <div className={s.modalHeader__item} onClick={() => editModal(false)}>\r\n                     <NavLink to={'/settings'} className={s.modalHeader__link}>Settings</NavLink>\r\n                  </div>\r\n                  <div className={s.modalHeader__line}></div>\r\n                  <div className={s.modalHeader__link} onClick={() => { props.logOutServerTC(); editModal(false) }}>\r\n                     <span>Log Out</span>\r\n                  </div>\r\n               </div>\r\n            }\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst HeaderContainer = (props) => {\r\n   useEffect(() => {\r\n      if (props.isAuth) {\r\n         props.getProfileMeInfo(props.userId)\r\n      }\r\n   }, [props.isAuth])\r\n   if (props.isAuth) {\r\n      if (!props.profileMeInfo) {\r\n         return (\r\n            <div className={s.preloader__headerWrapper}>\r\n               <div className={s.preloader__headerBlock}>\r\n                  <Preloader />\r\n               </div>\r\n            </div >\r\n         )\r\n      }\r\n   }\r\n   return (\r\n      <Header profileMeInfo={props.profileMeInfo} userId={props.userId} login={props.login} isAuth={props.isAuth} logOutServerTC={props.logOutServerTC} getProfileMeInfo={props.getProfileMeInfo} />\r\n   )\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      isAuth: state.auth.isAuth,\r\n      login: state.auth.login,\r\n      userId: state.auth.id,\r\n      profileMeInfo: state.profile.profileMeInfo,\r\n      profileImage: state.profile.profileImage,\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      logOutServerTC: () => { dispatch(logOutServerTC()) },\r\n      getProfileMeInfo: (userId) => { dispatch(getProfileMeInfo(userId)) }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Aside\\Aside.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Messages\\Messages.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\Profile.jsx",["149","150","151","152"],"import React, { useEffect, useState } from 'react'\r\nimport s from './Profile.module.css'\r\nimport cn from 'classnames'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink, withRouter } from 'react-router-dom'\r\nimport { addProfilePost, getProfileInfo, getProfileMeInfo, getProfileStatus, removeProfilePost, setProfileImage, setProfileStatus } from '../../redux/profile.reducer'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\nimport logo from '../../assets/images/logo.jpg'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowAltCircleUp, faHome } from '@fortawesome/free-solid-svg-icons'\r\nimport { ProfileReduxPost } from './ProfilePostCreate/ProfilePost'\r\nimport ProfilePostList from './ProfilePostList/ProfilePostList'\r\n\r\nconst Profile = (props) => {\r\n   const [modalPost, setModalPost] = useState(false)\r\n   const [isShowDetails, editIsShowDetails] = useState(false)\r\n   const onChangeAvatar = (e) => {\r\n      let image = e.target.files[0]\r\n      props.setProfileImage(image)\r\n   }\r\n   const generateDate = () => {\r\n      return new Date()\r\n   }\r\n   const onSubmit = (dataPosts) => {\r\n      setModalPost(false)\r\n      let id = `f${(+new Date).toString(16)}`;\r\n      let date = `${generateDate().toLocaleDateString()} at ${generateDate().toLocaleTimeString()}`\r\n      const dataPost = {\r\n         id: id,\r\n         post: dataPosts.post,\r\n         date: date\r\n      }\r\n      props.addProfilePost(dataPost)\r\n   }\r\n   return (\r\n      <div className={s.profile}>\r\n         <div className={s.profile__row}>\r\n            {/* NARROW COLUMN */}\r\n            <div className={s.profile__narrow}>\r\n               <div className={s.profile__me}>\r\n                  <div className={s.meProfile__photo}><img src={props.profileInfo.photos.small ? props.profileInfo.photos.small : logo} />\r\n                     {props.isOwner &&\r\n                        <div className={s.meProfile__block}>\r\n                           <div className={s.meProfile__refresh}>\r\n                              <label className={s.refreshProfile__fake} htmlFor={'avatar-img'}><FontAwesomeIcon icon={faArrowAltCircleUp} className={s.refreshProfile__arrowTop} /><span>Refresh photo</span></label>\r\n                              <input className={s.refreshProfile__input} type='file' id={'avatar-img'} name='avatar-img' onChange={(e) => { onChangeAvatar(e) }} />\r\n                           </div>\r\n                        </div>\r\n                     }\r\n                  </div>\r\n               </div>\r\n               {props.isOwner\r\n                  ? <>\r\n                     <div className={s.profile__edit}>\r\n                        <NavLink className={s.editProfile__settings} to={'/settings'}>Edit</NavLink>\r\n                     </div>\r\n                     <div className={s.profile__enter}>\r\n                        <NavLink to={'/settings'}><span><FontAwesomeIcon icon={faHome} className={s.enterProfile__link} />Enter your contacts</span></NavLink>\r\n                     </div>\r\n                  </>\r\n                  : < div className={s.profile__edit}>\r\n                     <NavLink className={s.editProfile__messages} to={'/messages'}>Write a message</NavLink>\r\n                  </div>\r\n               }\r\n            </div>\r\n            {/* WIDE COLUMN */}\r\n            <div className={s.profile__wide}>\r\n               <div className={s.profile__info}>\r\n                  <div className={s.infoProfile__fullName}>\r\n                     <h4>{props.profileInfo.fullName}</h4>\r\n                  </div>\r\n                  {props.isOwner\r\n                     ? <div className={s.infoProfile__status} >\r\n                        <div onClick={(e) => { props.editModalStatus(true) }}>{props.profileStatus}</div>\r\n                     </div>\r\n                     : <>\r\n                        {props.profileStatus\r\n                           ? <div className={s.statusProfile__user}>\r\n                              <div>{props.profileStatus}</div>\r\n                           </div>\r\n                           : <div className={s.statusProfile__empty}></div>\r\n                        }\r\n                     </>\r\n                  }\r\n                  <div className={s.infoProfile__line}></div>\r\n                  <div className={s.infoProfile__information}>\r\n                     <div className={cn(s.informationProfile__row, s.informationProfile)}>\r\n                        <span className={s.informationProfile__title}>About me: </span>\r\n                        {props.profileInfo.aboutMe\r\n                           ? <span className={s.informationProfile__answer} >{props.profileInfo.aboutMe}</span>\r\n                           : <span className={s.informationProfile__answer}>not specified</span>\r\n                        }\r\n                        <span className={s.informationProfile__title}>Town: </span>\r\n                        {props.profileInfo.lookingForAJobDescription\r\n                           ? <span className={s.informationProfile__answer}>{props.profileInfo.lookingForAJobDescription}</span>\r\n                           : <span className={s.informationProfile__answer}>not specified</span>\r\n                        }\r\n                        <span className={s.informationProfile__title}>Family status: </span>\r\n                        {props.profileInfo.lookingForAJob\r\n                           ? <span className={s.informationProfile__answer}>married</span>\r\n                           : <span className={s.informationProfile__answer}>not married</span>\r\n                        }\r\n                     </div>\r\n                  </div>\r\n                  {isShowDetails\r\n                     ? <>\r\n                        <div className={s.infoProfile__showDetails} onClick={(e) => editIsShowDetails(false)}>\r\n                           <span>Hide detailed information</span>\r\n                        </div>\r\n                        <div className={s.infoProfile__information}>\r\n                           <div className={s.infoProfile__line}></div>\r\n                           <div className={cn(s.informationProfile__row, s.informationProfile)}>\r\n                              <span className={s.informationProfile__title}>YouTube: </span>\r\n                              {props.profileInfo.contacts.youtube\r\n                                 ? <span className={s.informationProfile__answer}>{props.profileInfo.contacts.youtube}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>Facebook: </span>\r\n                              {props.profileInfo.contacts.facebook\r\n                                 ? <span className={s.informationProfile__answer}>{props.profileInfo.contacts.facebook}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>LinkedIn: </span>\r\n                              {props.profileInfo.contacts.website\r\n                                 ? <span className={s.informationProfile__answer}>{props.profileInfo.contacts.website}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>GitHub: </span>\r\n                              {props.profileInfo.contacts.github\r\n                                 ? <span className={s.informationProfile__answer}>{props.profileInfo.contacts.github}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                           </div>\r\n                        </div>\r\n                     </>\r\n                     : <>\r\n                        <div className={s.infoProfile__showDetails} onClick={(e) => editIsShowDetails(true)}>\r\n                           <span>Show details</span>\r\n                        </div>\r\n                        <div></div>\r\n                     </>\r\n                  }\r\n                  <div className={s.infoProfile__line}></div>\r\n               </div>\r\n               {props.isOwner && props.isAuth &&\r\n                  <>\r\n                     <div className={s.profile__addPost}>\r\n                        <div className={s.addPostProfile__row}>\r\n                           <div className={s.addPostProfile__logo}>\r\n                              <img src={props.profileMeInfo.photos.small} />\r\n                           </div>\r\n                           <ProfileReduxPost onSubmit={onSubmit} setModalPost={setModalPost} modalPost={modalPost} />\r\n                        </div>\r\n                     </div>\r\n                     {props.profilePosts.length > 0 &&\r\n                        <ProfilePostList removeProfilePost={props.removeProfilePost} profileMeInfo={props.profileMeInfo} profilePosts={props.profilePosts} />\r\n                     }\r\n                  </>\r\n               }\r\n            </div>\r\n         </div>\r\n      </div >\r\n   )\r\n}\r\nexport const ProfileContainer = (props) => {\r\n   useEffect(() => {\r\n      let userId = props.match.params.userId\r\n      if (!userId) {\r\n         userId = props.userId\r\n         if (!userId) {\r\n            props.history.push('/login')\r\n         }\r\n         else {\r\n            props.getProfileInfo(userId)\r\n            props.getProfileMeInfo(userId)\r\n            props.getProfileStatus(userId)\r\n         }\r\n      }\r\n      else {\r\n         props.getProfileInfo(userId)\r\n         props.getProfileStatus(userId)\r\n      }\r\n   }, [props.match.params.userId, props.profileImage, props.isAuth])\r\n\r\n\r\n   return (\r\n      <>\r\n         {props.isAuth\r\n            ? props.profileInfo && props.profileMeInfo\r\n               ? <Profile removeProfilePost={props.removeProfilePost} profilePosts={props.profilePosts} addProfilePost={props.addProfilePost} profileMeInfo={props.profileMeInfo} modalStatus={props.modalStatus} editModalStatus={props.editModalStatus} profileInfo={props.profileInfo} birthday={props.birthday} lookingForAJobDescription={props.lookingForAJobDescription} setProfileImage={props.setProfileImage} isOwner={!props.match.params.userId} profileStatus={props.profileStatus} profileImage={props.profileImage} setProfileStatus={props.setProfileStatus} lookingForAJob={props.lookingForAJob} isAuth={props.isAuth} />\r\n               : <div className={s.preloader__profileWrapper}>\r\n                  <div className={s.preloader__profileBlock}>\r\n                     <Preloader />\r\n                  </div>\r\n               </div >\r\n            : props.profileInfo\r\n               ? <Profile removeProfilePost={props.removeProfilePost} profilePosts={props.profilePosts} addProfilePost={props.addProfilePost} modalStatus={props.modalStatus} editModalStatus={props.editModalStatus} profileInfo={props.profileInfo} birthday={props.birthday} lookingForAJobDescription={props.lookingForAJobDescription} setProfileImage={props.setProfileImage} isOwner={!props.match.params.userId} profileStatus={props.profileStatus} profileImage={props.profileImage} setProfileStatus={props.setProfileStatus} lookingForAJob={props.lookingForAJob} />\r\n               : <div className={s.preloader__profileWrapper}>\r\n                  <div className={s.preloader__profileBlock}>\r\n                     <Preloader />\r\n                  </div>\r\n               </div >\r\n         }\r\n      </>\r\n   )\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      userId: state.auth.id,\r\n      isAuth: state.auth.isAuth,\r\n      profileInfo: state.profile.profileInfo,\r\n      profileImage: state.profile.profileImage,\r\n      profileStatus: state.profile.profileStatus,\r\n      profileMeInfo: state.profile.profileMeInfo,\r\n      profilePosts: state.profile.profilePosts\r\n\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      getProfileInfo: (userId) => { dispatch(getProfileInfo(userId)) },\r\n      setProfileImage: (image) => { dispatch(setProfileImage(image)) },\r\n      getProfileStatus: (userId) => { dispatch(getProfileStatus(userId)) },\r\n      setProfileStatus: (status) => { dispatch(setProfileStatus(status)) },\r\n      getProfileMeInfo: (userId) => { dispatch(getProfileMeInfo(userId)) },\r\n      addProfilePost: (dataPost) => { dispatch(addProfilePost(dataPost)) },\r\n      removeProfilePost: (id) => { dispatch(removeProfilePost(id)) }\r\n   }\r\n}\r\nlet withRouterUrlUserId = withRouter(ProfileContainer)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouterUrlUserId)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\Users.jsx",["153","154","155"],"import React, { useEffect } from 'react'\r\nimport s from './Users.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { getUsersFollowedTC, unfollowUserTC } from '../../redux/users.reducer'\r\nimport PreloaderLine from '../Common/Preloader/PreloaderLine/PreloaderLine'\r\nimport Paginator from '../Common/Paginator/Paginator'\r\nimport { NavLink } from 'react-router-dom'\r\nimport userIcon from '../../assets/images/userIcon.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserMinus } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nexport const Users = (props) => {\r\n   return (\r\n      <>\r\n         <div className={s.users}>\r\n            <div className={s.users__title}>\r\n               Users\r\n            </div>\r\n            <div className={s.users__menu}>\r\n               <div className={s.menuUsers__row}>\r\n                  <div className={s.menuUsers__title}>\r\n                     My requests\r\n                  </div>\r\n                  <NavLink className={s.menuUsers__button} to={'/users/all'}>Find more</NavLink>\r\n               </div>\r\n            </div>\r\n            {props.isAuth\r\n               ? < div className={s.users__request}>\r\n                  {props.usersFollowed.map((user) => {\r\n                     return (\r\n                        user.followed &&\r\n                        <div className={s.requestUsers__item} key={user.id}>\r\n                           <div className={s.itemUsers__row}>\r\n                              <NavLink className={s.itemUsers__image} to={`/profile/${user.id}`}>\r\n                                 {!user.photos.small\r\n                                    ? <img src={userIcon} />\r\n                                    : <img src={user.photos.small} />\r\n                                 }\r\n                              </NavLink>\r\n                              <div className={s.itemUsers__body}>\r\n                                 <NavLink className={s.bodyUsers__name} to={`/profile/${user.id}`}>{user.name}</NavLink>\r\n                                 <div className={s.bodyUsers__navigation}>\r\n                                    <div className={s.navigationUsers__row}>\r\n                                       <NavLink className={s.navigationUsers__message} to={'/messages'}>Write a message</NavLink>\r\n                                       <div className={s.navigationUsers__subscribe}>\r\n                                          <button disabled={props.isReadyToggle.some((userId) => userId === user.id)} onClick={(e) => { props.unfollowUserTC(user.id) }}><FontAwesomeIcon icon={faUserMinus} /></button>\r\n                                       </div>\r\n                                    </div>\r\n                                 </div>\r\n                              </div>\r\n                           </div>\r\n                           <div className={s.requestUsers__line}></div>\r\n                        </div>\r\n                     )\r\n                  })}\r\n                  <Paginator pageFollowed={props.pageFollowed} countFollowed={props.countFollowed} totalCount={props.totalCount} onPageChange={props.onPageChange} page={props.page} />\r\n               </div>\r\n               : <div className={s.login__warning}>\r\n                  To view this page, you need to go to the site.\r\n               </div>\r\n            }\r\n         </div>\r\n      </>\r\n   )\r\n}\r\nconst UsersContainer = (props) => {\r\n   useEffect(() => {\r\n      let [page, count] = [1, props.countFollowed]\r\n      props.getUsersFollowedTC(count, page, true)\r\n   }, [props.isFollowed])\r\n   let onPageChange = (pageFollowed) => {\r\n      let count = props.countFollowed\r\n      props.getUsersFollowedTC(count, pageFollowed, true)\r\n   }\r\n   return (\r\n      <>\r\n         {props.isReadyPage\r\n            ? <Users isAuth={props.isAuth} pageFollowed={props.pageFollowed} usersFollowed={props.usersFollowed} countFollowed={props.countFollowed} totalCount={props.totalCount} onPageChange={onPageChange} page={props.page} unfollowUserTC={props.unfollowUserTC} followUserTC={props.followUserTC} isReadyToggle={props.isReadyToggle} />\r\n            : <div className={s.preloader__usersWrapper}>\r\n               <div className={s.preloader__usersBlock}>\r\n                  <PreloaderLine />\r\n               </div>\r\n            </div >\r\n         }\r\n      </>\r\n   )\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      countFollowed: state.users.countFollowed,\r\n      pageFollowed: state.users.pageFollowed,\r\n      totalCount: state.users.totalCount,\r\n      usersFollowed: state.users.usersFollowed,\r\n      isReadyPage: state.users.isReadyPage,\r\n      isReadyToggle: state.users.isReadyToggle,\r\n      isAuth: state.auth.isAuth\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      getUsersFollowedTC: (count, pageFollowed, follower) => { dispatch(getUsersFollowedTC(count, pageFollowed, follower)) },\r\n      unfollowUserTC: (userId) => { dispatch(unfollowUserTC(userId)) }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\store.js",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\api\\api.js",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Login\\Login.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Login\\LoginForm.jsx",["156","157"],"import React from 'react'\r\nimport s from './LoginForm.module.css'\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required } from \"../../validators/validators\";\r\nimport { useState } from \"react\";\r\nimport { Input, CheckBoxLogin } from \"../Common/FormControl/FormControl\";\r\n\r\nexport const LoginForm = (props) => {\r\n   const [checked, setChecked] = useState(false)\r\n   const [activeCheckbox, setActiveCheckbox] = useState(`${s.login__checkbox}`)\r\n   return (\r\n      <form className={s.login__form} onSubmit={props.handleSubmit}>\r\n         <div className={s.login__item}><Field className={s.login__input} component={Input} type={'input'} name={'email'} validate={required} /></div>\r\n         <div className={s.login__item}><Field className={s.login__input} component={Input} type={'password'} name={'password'} validate={required} /></div>\r\n         <div className={s.login__item}>\r\n            {!checked\r\n               ? <label>\r\n                  <div className={s.login__checkboxBlock} onClick={() => { setActiveCheckbox(`${s.login__checkbox} ${s.checkbox__active}`); setChecked(true); }} >\r\n                     <div className={activeCheckbox}></div>\r\n                     <span>Remember me</span>\r\n                  </div>\r\n                  <Field className={s.checkboxLogin} component={'input'} type={'checkbox'} name={'rememberMe'} checked={checked} />\r\n               </label>\r\n               : <label>\r\n                  <div className={s.login__checkboxBlock} onClick={() => { setActiveCheckbox(`${s.login__checkbox}`); setChecked(false); }} >\r\n                     <div className={activeCheckbox}></div>\r\n                     <span>Remember me</span>\r\n                  </div>\r\n                  <Field className={s.checkboxLogin} component={'input'} type={'checkbox'} name={'rememberMe'} checked={checked} />\r\n               </label>\r\n            }\r\n         </div>\r\n         <div>\r\n            {props.isCaptcha && <img className={s.login__captcha} src={props.urlCaptcha} />}\r\n            {props.isCaptcha && <div className={s.login__item}><Field className={s.login__input} component={'input'} type={'input'} name={'captcha'} /></div>}\r\n         </div>\r\n         <button className={s.login__button} type={'submit'}>To come in</button>\r\n      </form>\r\n   )\r\n}\r\nexport const LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\validators\\validators.js",["158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"export const required = (value) => {\r\n   if (value) {\r\n      return undefined\r\n   }\r\n   else {\r\n      return 'Require filed'\r\n   }\r\n}\r\nexport const minLengthCreator = (minLength) => {\r\n   return (value) => {\r\n      if (value && value.length > minLength) {\r\n         return 'Field is too long'\r\n      }\r\n      return undefined\r\n   }\r\n}\r\nexport const validUrlFormat = () => {\r\n   return (value) => {\r\n      let regExp = /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/\r\n      if (regExp.test(value) === true) {\r\n         return undefined\r\n      }\r\n      return 'Invalid url address'\r\n   }\r\n}\r\nexport const validDateFormat = () => {\r\n   return (value) => {\r\n      let regExp = /^(\\d{1,2})[\\s\\.\\/-](\\d{1,2})[\\s\\.\\/-](\\d{4})$/\r\n      if (regExp.test(value) === true) {\r\n         return undefined\r\n      }\r\n      return 'Invalid date'\r\n   }\r\n}\r\n",["188","189"],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Preloader\\Preloader.jsx",["190"],"import React from 'react'\r\nimport loadingImage from '../../../assets/images/loading.svg'\r\nimport s from './Preloader.module.css'\r\n\r\nlet Preloader = (props) => {\r\n   return (\r\n      <img src={loadingImage} className={s.preloader__img} />\r\n   )\r\n}\r\nexport default Preloader","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Paginator\\Paginator.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\modals\\ModalStatus\\ModalStatus.jsx",["191"],"import React from 'react'\r\nimport s from './ModalStatus.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { setProfileStatus } from '../../../redux/profile.reducer'\r\nimport ModalStatusReduxForm from './ModalStatusForm'\r\n\r\nexport const ModalStatus = (props) => {\r\n   const onSubmit = (dataForm) => {\r\n      let status = dataForm.status\r\n      props.setProfileStatus(status)\r\n      props.editModalStatus(false)\r\n   }\r\n   return (\r\n      <div className={s.modalStatus} onClick={() => props.editModalStatus(false)}>\r\n         <div className={s.modalStatus__window} onClick={(e) => e.stopPropagation()}>\r\n            <ModalStatusReduxForm profileStatus={props.profileStatus} onSubmit={onSubmit} profileStatus={props.profileStatus} />\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      profileStatus: state.profile.profileStatus\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      setProfileStatus: (status) => { dispatch(setProfileStatus(status)) }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalStatus)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\modals\\ModalStatus\\ModalStatusForm.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\FormControl\\FormControl.js",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Settings\\SettingsContact.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Settings\\SettingsContactForm.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersAll.jsx",["192","193","194","195","196"],"import React, { useEffect, useState } from 'react'\r\nimport s from './UsersAll.module.css'\r\nimport cn from 'classnames'\r\nimport { connect } from 'react-redux'\r\nimport { followUserTC, getOnceUnfollowedTC, getUsersUnfollowedTC, isFetchingUsers, unfollowUserTC } from '../../redux/users.reducer'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\nimport userIcon from '../../assets/images/userIcon.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { NavLink } from 'react-router-dom'\r\nimport PreloaderLine from '../Common/Preloader/PreloaderLine/PreloaderLine'\r\n\r\nexport const UsersAll = (props) => {\r\n   return (\r\n      <div className={s.usersAll}>\r\n         <div className={s.usersAll__title}>\r\n            Find friends\r\n         </div>\r\n         <div className={s.usersAll__body}>\r\n            <div className={s.bodyUsersAll__row}>\r\n               {props.usersUnfollowed.map((user) => {\r\n                  return (\r\n                     <div className={s.bodyUsersAll__item} key={user.id}>\r\n                        <NavLink className={s.bodyUsersAll__image} to={`/profile/${user.id}`}>\r\n                           {user.photos.small\r\n                              ? <img src={user.photos.small} />\r\n                              : <img src={userIcon} />\r\n                           }\r\n                        </NavLink>\r\n                        <div className={s.bodyUsersAll__body}>\r\n                           <div className={cn(s.bodyUsersAll__row, s.bodyUsersAll)}>\r\n                              <NavLink className={s.bodyUsersAll__name} to={`/profile/${user.id}`}>\r\n                                 <span>{user.name}</span>\r\n                              </NavLink>\r\n                              <div className={s.bodyUsersAll__subscribe}>\r\n                                 {!user.followed && props.isAuth\r\n                                    ? <button className={s.bodyUsersAll__abled} disabled={props.isReadyToggle.some((userId) => userId === user.id)} onClick={(e) => { props.followUserTC(user.id) }}><FontAwesomeIcon icon={faUserPlus} /></button>\r\n                                    : <button className={s.bodyUsersAll__disabled} disabled={true}><FontAwesomeIcon icon={faUserPlus} /></button>\r\n                                 }\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                  )\r\n               })\r\n               }\r\n               {\r\n                  function () {\r\n                     return (\r\n                        <div className={s.preloader__UsersAllWrapper}>\r\n                           <div className={s.preloader__UsersAllBlock}>\r\n                              <PreloaderLine />\r\n                           </div>\r\n                        </div >\r\n                     )\r\n                  }()\r\n               }\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\nconst UserAllContainer = (props) => {\r\n   const [isFetchingOnce, setIsFetchingOnce] = useState(false)\r\n   let [page, count] = [props.pageUnfollowed, props.countUnfollowed]\r\n   useEffect(() => {\r\n      if (!isFetchingOnce) {\r\n         props.getOnceUnfollowedTC()\r\n         setIsFetchingOnce(true)\r\n      }\r\n   }, [])\r\n   useEffect(() => {\r\n      if (props.isFetching) {\r\n         props.getUsersUnfollowedTC(count, page, false)\r\n      }\r\n   }, [props.isFetching])\r\n   useEffect(() => {\r\n      document.addEventListener('scroll', scrollHandler)\r\n      return () => {\r\n         document.removeEventListener('scroll', scrollHandler)\r\n      }\r\n   }, [])\r\n   const scrollHandler = (e) => {\r\n      const [scrollHeight, scrollTop, innerHeight] = [e.target.documentElement.scrollHeight, e.target.documentElement.scrollTop, window.innerHeight]\r\n      if (scrollTop + 100 >= scrollHeight - innerHeight) {\r\n         props.isFetchingUsers(true)\r\n      }\r\n   }\r\n   return (\r\n      <>\r\n         {isFetchingOnce\r\n            ? <UsersAll isAuth={props.isAuth} unfollowUserTC={props.unfollowUserTC} usersUnfollowed={props.usersUnfollowed} isReadyToggle={props.isReadyToggle} followUserTC={props.followUserTC} />\r\n            : <div className={s.preloader__UsersAllContainerWrapper}>\r\n               <div className={s.preloader__UsersAllContainerBlock}>\r\n                  <Preloader />\r\n               </div>\r\n            </div >\r\n         }\r\n      </>\r\n   )\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      usersFollowed: state.users.usersFollowed,\r\n      usersUnfollowed: state.users.usersUnfollowed,\r\n      countUnfollowed: state.users.countUnfollowed,\r\n      pageUnfollowed: state.users.pageUnfollowed,\r\n      isFetching: state.users.isFetching,\r\n      isReadyToggle: state.users.isReadyToggle,\r\n      isAuth: state.auth.isAuth\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      getUsersUnfollowedTC: (count, pageUnfollowed, follower) => { dispatch(getUsersUnfollowedTC(count, pageUnfollowed, follower)) },\r\n      isFetchingUsers: (bool) => { dispatch(isFetchingUsers(bool)) },\r\n      followUserTC: (userId) => { dispatch(followUserTC(userId)) },\r\n      unfollowUserTC: (userId) => { dispatch(unfollowUserTC(userId)) },\r\n      getOnceUnfollowedTC: () => { dispatch(getOnceUnfollowedTC()) }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAllContainer)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\hoc\\withAuthRedirect.js",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Preloader\\PreloaderLine\\PreloaderLine.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfilePostCreate\\ProfilePost.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfilePostList\\ProfilePostList.jsx",["197"],"import React from 'react'\r\nimport s from './ProfilePostList.module.css'\r\nimport cn from 'classnames'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst ProfilePostList = (props) => {\r\n   let posts = props.profilePosts.map((post) => {\r\n      return (\r\n         <div key={post.id} className={s.profile__newPost}>\r\n            <div className={cn(s.newPostProfile__row, s.newPostProfile)}>\r\n               <div className={s.newPostProfile__logo}>\r\n                  <img src={props.profileMeInfo.photos.small} />\r\n               </div>\r\n               <div className={s.newPostProfile__body}>\r\n                  <div className={s.newPostProfile__name}>\r\n                     {props.profileMeInfo.fullName}\r\n                  </div>\r\n                  <div className={s.newPostProfile__date}>\r\n                     {post.date}\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className={s.newPostProfileContent}>\r\n               {post.post}\r\n            </div>\r\n            <div className={s.newPostProfileRemove} onClick={(e) => { props.removeProfilePost(post.id) }}>\r\n               <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n         </div>\r\n      )\r\n   })\r\n   return (\r\n      <>\r\n         {posts}\r\n      </>\r\n   )\r\n}\r\nexport default ProfilePostList","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\hoc\\withSuspense.js",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\app.reducer.ts",[],["198","199"],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\auth.reducer.ts",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\login.reducer.ts",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\profile.reducer.ts",["200","201","202"],"import { profileApi } from \"../api/api\"\r\nimport { InfoContactsPhotoType } from \"../types/types\"\r\n\r\nconst getProfileInfoSuccessType = 'GET_PROFILE_INFO_SUCCESS'\r\nconst setProfileImageSuccessType = 'SET_PROFILE_IMAGE_SUCCESS'\r\nconst getProfileStatusSuccessType = 'GET_PROFILE_STATUS_SUCCESS'\r\nconst getProfileMeInfoSuccessType = 'GET_PROFILE_ME_INFO_SUCCESS'\r\nconst addProfilePostType = \"ADD_PROFILE_POST_TYPE\"\r\nconst removeProfilePostType = \"REMOVE_PROFILE_POST_TYPE\"\r\n\r\ntype InfoContactsType = {\r\n   github: string,\r\n   facebook: string,\r\n   twitter: string,\r\n   website: string,\r\n   youtube: string,\r\n   mainLink: string\r\n}\r\ntype InfoType = {\r\n   userId: number,\r\n   lookingForAJob: boolean,\r\n   lookingForAJobDescription: string,\r\n   fullName: string,\r\n   contacts: InfoContactsType,\r\n   photos: InfoContactsPhotoType\r\n\r\n}\r\ntype PostType = {\r\n   id: string,\r\n   data: string,\r\n   post: string\r\n}\r\n\r\nconst initialState = {\r\n   profileMeInfo: null as InfoType | null,\r\n   profileInfo: null as InfoType | null,\r\n   profileImage: null as string | null,\r\n   profileStatus: null as string | null,\r\n   profilePosts: [] as Array<PostType>\r\n}\r\ntype InitialStateType = typeof initialState\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n   switch (action.type) {\r\n      case getProfileInfoSuccessType: {\r\n         return {\r\n            ...state,\r\n            profileInfo: action.data\r\n         }\r\n      }\r\n      case setProfileImageSuccessType: {\r\n         return {\r\n            ...state,\r\n            profileImage: action.img,\r\n         }\r\n      }\r\n      case getProfileStatusSuccessType: {\r\n         return {\r\n            ...state,\r\n            profileStatus: action.status\r\n         }\r\n      }\r\n      case getProfileMeInfoSuccessType: {\r\n         return {\r\n            ...state,\r\n            profileMeInfo: action.dataMe,\r\n         }\r\n      }\r\n      case addProfilePostType: {\r\n         return {\r\n            ...state,\r\n            ...state.profilePosts.push(action.dataPost) as any\r\n         }\r\n      }\r\n      case removeProfilePostType: {\r\n         return {\r\n            ...state,\r\n            profilePosts: state.profilePosts.filter((post) => {\r\n               if (post.id !== action.id) {\r\n                  return true\r\n               }\r\n            })\r\n         }\r\n      }\r\n      default: {\r\n         return state\r\n      }\r\n   }\r\n}\r\nexport default profileReducer\r\ntype GetProfileInfoSuccessType = {\r\n   type: typeof getProfileInfoSuccessType,\r\n   data: InfoType\r\n}\r\ntype SetProfileImageSuccessType = {\r\n   type: typeof setProfileImageSuccessType,\r\n   img: string\r\n}\r\ntype GetProfileStatusSuccess = {\r\n   type: typeof getProfileStatusSuccessType,\r\n   status: string\r\n}\r\ntype GetProfileMeInfoSuccessType = {\r\n   type: typeof getProfileMeInfoSuccessType,\r\n   dataMe: InfoType\r\n}\r\ntype AddProfilePost = {\r\n   type: typeof addProfilePostType,\r\n   dataPost: PostType\r\n}\r\ntype removeProfilePost = {\r\n   type: typeof removeProfilePostType,\r\n   id: string\r\n}\r\nexport const getProfileInfoSuccess = (data: InfoType): GetProfileInfoSuccessType => ({ type: getProfileInfoSuccessType, data })\r\nexport const setProfileImageSuccess = (img: string): SetProfileImageSuccessType => ({ type: setProfileImageSuccessType, img })\r\nexport const getProfileStatusSuccess = (status: string): GetProfileStatusSuccess => ({ type: getProfileStatusSuccessType, status })\r\nexport const getProfileMeInfoSuccess = (dataMe: InfoType): GetProfileMeInfoSuccessType => ({ type: getProfileMeInfoSuccessType, dataMe })\r\nexport const addProfilePost = (dataPost: PostType): AddProfilePost => ({ type: addProfilePostType, dataPost })\r\nexport const removeProfilePost = (id: string) => ({ type: removeProfilePostType, id })\r\n\r\nexport const getProfileInfo = (userId: number) => {\r\n   return (dispatch: any) => {\r\n      return profileApi.getProfile(userId).then((data) => {\r\n         dispatch(getProfileInfoSuccess(data))\r\n      })\r\n   }\r\n}\r\nexport const getProfileMeInfo = (userId: number) => {\r\n   return (dispatch: any) => {\r\n      return profileApi.getProfile(userId).then((data) => {\r\n         dispatch(getProfileMeInfoSuccess(data))\r\n      })\r\n   }\r\n}\r\nexport const setProfileImage = (image: string) => {\r\n   return (dispatch: any) => {\r\n      profileApi.setImage(image).then((data) => {\r\n         if (data.resultCode === 0) {\r\n            let img = data.data.photos.small\r\n            dispatch(setProfileImageSuccess(img))\r\n         }\r\n      })\r\n   }\r\n}\r\nexport const getProfileStatus = (userId: number) => {\r\n   return (dispatch: any) => {\r\n      profileApi.getStatus(userId).then((response) => {\r\n         if (!response.data) {\r\n            dispatch(getProfileStatusSuccess(response.data))\r\n         }\r\n         dispatch(getProfileStatusSuccess(response.data))\r\n      })\r\n   }\r\n}\r\nexport const setProfileStatus = (status: string) => {\r\n   return (dispatch: any) => {\r\n      profileApi.setStatus(status).then((data) => {\r\n         console.log(data)\r\n         if (data.resultCode === 0) {\r\n            dispatch(getProfileStatusSuccess(status))\r\n         }\r\n      })\r\n   }\r\n}\r\nexport const setProfileContactInfo = (fullName: string, aboutMe: string, lookingForAJobDescription: string, isMarried: boolean, youtube: string, website: string, facebook: string, github: string, userId: number) => {\r\n   return (dispatch: any) => {\r\n      profileApi.setContactInfo(fullName, aboutMe, lookingForAJobDescription, isMarried, youtube, website, facebook, github).then((data) => {\r\n         if (data.resultCode === 0) {\r\n            dispatch(getProfileMeInfo(userId))\r\n            dispatch(getProfileInfo(userId))\r\n         }\r\n      })\r\n   }\r\n}\r\n","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\users.reducer.ts",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":12,"column":10,"nodeType":"209","messageId":"210","endLine":12,"endColumn":18},{"ruleId":"207","severity":1,"message":"211","line":13,"column":10,"nodeType":"209","messageId":"210","endLine":13,"endColumn":20},{"ruleId":"212","severity":1,"message":"213","line":22,"column":25,"nodeType":"214","endLine":22,"endColumn":46},{"ruleId":"212","severity":1,"message":"213","line":35,"column":84,"nodeType":"214","endLine":35,"endColumn":130},{"ruleId":"215","severity":1,"message":"216","line":39,"column":57,"nodeType":"217","messageId":"218","endLine":39,"endColumn":58},{"ruleId":"212","severity":1,"message":"213","line":42,"column":84,"nodeType":"214","endLine":42,"endColumn":130},{"ruleId":"219","severity":1,"message":"220","line":74,"column":7,"nodeType":"221","endLine":74,"endColumn":21,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":26,"column":22,"nodeType":"225","messageId":"226","endLine":26,"endColumn":30,"fix":"227"},{"ruleId":"212","severity":1,"message":"213","line":41,"column":55,"nodeType":"214","endLine":41,"endColumn":139},{"ruleId":"212","severity":1,"message":"213","line":150,"column":31,"nodeType":"214","endLine":150,"endColumn":77},{"ruleId":"219","severity":1,"message":"220","line":183,"column":7,"nodeType":"221","endLine":183,"endColumn":68,"suggestions":"228"},{"ruleId":"212","severity":1,"message":"213","line":37,"column":39,"nodeType":"214","endLine":37,"endColumn":61},{"ruleId":"212","severity":1,"message":"213","line":38,"column":39,"nodeType":"214","endLine":38,"endColumn":70},{"ruleId":"219","severity":1,"message":"220","line":71,"column":7,"nodeType":"221","endLine":71,"endColumn":25,"suggestions":"229"},{"ruleId":"207","severity":1,"message":"230","line":6,"column":17,"nodeType":"209","messageId":"210","endLine":6,"endColumn":30},{"ruleId":"212","severity":1,"message":"213","line":34,"column":33,"nodeType":"214","endLine":34,"endColumn":92},{"ruleId":"231","severity":1,"message":"232","line":19,"column":120,"nodeType":"233","messageId":"234","endLine":19,"endColumn":121,"suggestions":"235"},{"ruleId":"231","severity":1,"message":"236","line":19,"column":124,"nodeType":"233","messageId":"234","endLine":19,"endColumn":125,"suggestions":"237"},{"ruleId":"231","severity":1,"message":"238","line":19,"column":126,"nodeType":"233","messageId":"234","endLine":19,"endColumn":127,"suggestions":"239"},{"ruleId":"231","severity":1,"message":"240","line":19,"column":128,"nodeType":"233","messageId":"234","endLine":19,"endColumn":129,"suggestions":"241"},{"ruleId":"231","severity":1,"message":"242","line":19,"column":130,"nodeType":"233","messageId":"234","endLine":19,"endColumn":131,"suggestions":"243"},{"ruleId":"231","severity":1,"message":"232","line":19,"column":830,"nodeType":"233","messageId":"234","endLine":19,"endColumn":831,"suggestions":"244"},{"ruleId":"231","severity":1,"message":"236","line":19,"column":834,"nodeType":"233","messageId":"234","endLine":19,"endColumn":835,"suggestions":"245"},{"ruleId":"231","severity":1,"message":"238","line":19,"column":836,"nodeType":"233","messageId":"234","endLine":19,"endColumn":837,"suggestions":"246"},{"ruleId":"231","severity":1,"message":"240","line":19,"column":838,"nodeType":"233","messageId":"234","endLine":19,"endColumn":839,"suggestions":"247"},{"ruleId":"231","severity":1,"message":"242","line":19,"column":840,"nodeType":"233","messageId":"234","endLine":19,"endColumn":841,"suggestions":"248"},{"ruleId":"231","severity":1,"message":"232","line":19,"column":934,"nodeType":"233","messageId":"234","endLine":19,"endColumn":935,"suggestions":"249"},{"ruleId":"231","severity":1,"message":"236","line":19,"column":938,"nodeType":"233","messageId":"234","endLine":19,"endColumn":939,"suggestions":"250"},{"ruleId":"231","severity":1,"message":"238","line":19,"column":940,"nodeType":"233","messageId":"234","endLine":19,"endColumn":941,"suggestions":"251"},{"ruleId":"231","severity":1,"message":"240","line":19,"column":942,"nodeType":"233","messageId":"234","endLine":19,"endColumn":943,"suggestions":"252"},{"ruleId":"231","severity":1,"message":"242","line":19,"column":944,"nodeType":"233","messageId":"234","endLine":19,"endColumn":945,"suggestions":"253"},{"ruleId":"231","severity":1,"message":"232","line":19,"column":1045,"nodeType":"233","messageId":"234","endLine":19,"endColumn":1046,"suggestions":"254"},{"ruleId":"231","severity":1,"message":"236","line":19,"column":1049,"nodeType":"233","messageId":"234","endLine":19,"endColumn":1050,"suggestions":"255"},{"ruleId":"231","severity":1,"message":"238","line":19,"column":1051,"nodeType":"233","messageId":"234","endLine":19,"endColumn":1052,"suggestions":"256"},{"ruleId":"231","severity":1,"message":"240","line":19,"column":1053,"nodeType":"233","messageId":"234","endLine":19,"endColumn":1054,"suggestions":"257"},{"ruleId":"231","severity":1,"message":"242","line":19,"column":1055,"nodeType":"233","messageId":"234","endLine":19,"endColumn":1056,"suggestions":"258"},{"ruleId":"231","severity":1,"message":"259","line":19,"column":1093,"nodeType":"233","messageId":"234","endLine":19,"endColumn":1094,"suggestions":"260"},{"ruleId":"231","severity":1,"message":"232","line":19,"column":1175,"nodeType":"233","messageId":"234","endLine":19,"endColumn":1176,"suggestions":"261"},{"ruleId":"231","severity":1,"message":"236","line":19,"column":1179,"nodeType":"233","messageId":"234","endLine":19,"endColumn":1180,"suggestions":"262"},{"ruleId":"231","severity":1,"message":"238","line":19,"column":1181,"nodeType":"233","messageId":"234","endLine":19,"endColumn":1182,"suggestions":"263"},{"ruleId":"231","severity":1,"message":"240","line":19,"column":1183,"nodeType":"233","messageId":"234","endLine":19,"endColumn":1184,"suggestions":"264"},{"ruleId":"231","severity":1,"message":"242","line":19,"column":1185,"nodeType":"233","messageId":"234","endLine":19,"endColumn":1186,"suggestions":"265"},{"ruleId":"231","severity":1,"message":"266","line":28,"column":34,"nodeType":"233","messageId":"234","endLine":28,"endColumn":35,"suggestions":"267"},{"ruleId":"231","severity":1,"message":"268","line":28,"column":36,"nodeType":"233","messageId":"234","endLine":28,"endColumn":37,"suggestions":"269"},{"ruleId":"231","severity":1,"message":"266","line":28,"column":52,"nodeType":"233","messageId":"234","endLine":28,"endColumn":53,"suggestions":"270"},{"ruleId":"231","severity":1,"message":"268","line":28,"column":54,"nodeType":"233","messageId":"234","endLine":28,"endColumn":55,"suggestions":"271"},{"ruleId":"203","replacedBy":"272"},{"ruleId":"205","replacedBy":"273"},{"ruleId":"212","severity":1,"message":"213","line":7,"column":7,"nodeType":"214","endLine":7,"endColumn":62},{"ruleId":"274","severity":1,"message":"275","line":16,"column":91,"nodeType":"276","endLine":16,"endColumn":126},{"ruleId":"212","severity":1,"message":"213","line":26,"column":33,"nodeType":"214","endLine":26,"endColumn":64},{"ruleId":"212","severity":1,"message":"213","line":27,"column":33,"nodeType":"214","endLine":27,"endColumn":55},{"ruleId":"219","severity":1,"message":"277","line":71,"column":7,"nodeType":"221","endLine":71,"endColumn":9,"suggestions":"278"},{"ruleId":"219","severity":1,"message":"279","line":76,"column":7,"nodeType":"221","endLine":76,"endColumn":25,"suggestions":"280"},{"ruleId":"219","severity":1,"message":"281","line":82,"column":7,"nodeType":"221","endLine":82,"endColumn":9,"suggestions":"282"},{"ruleId":"212","severity":1,"message":"213","line":13,"column":19,"nodeType":"214","endLine":13,"endColumn":65},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"283","severity":1,"message":"284","line":77,"column":60,"nodeType":"285","messageId":"286","endLine":77,"endColumn":62},{"ruleId":"287","severity":1,"message":"288","line":119,"column":14,"nodeType":"209","messageId":"289","endLine":119,"endColumn":31},{"ruleId":"290","severity":1,"message":"291","line":119,"column":14,"nodeType":"209","messageId":"210","endLine":119,"endColumn":31},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"no-unused-vars","'MetaTags' is defined but never used.","Identifier","unusedVar","'ReactTitle' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["294"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"295","text":"296"},["297"],["298"],"'CheckBoxLogin' is defined but never used.","no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["299","300"],"Unnecessary escape character: \\(.",["301","302"],"Unnecessary escape character: \\).",["303","304"],"Unnecessary escape character: \\*.",["305","306"],"Unnecessary escape character: \\+.",["307","308"],["309","310"],["311","312"],["313","314"],["315","316"],["317","318"],["319","320"],["321","322"],["323","324"],["325","326"],["327","328"],["329","330"],["331","332"],["333","334"],["335","336"],["337","338"],"Unnecessary escape character: \\#.",["339","340"],["341","342"],["343","344"],["345","346"],["347","348"],["349","350"],"Unnecessary escape character: \\..",["351","352"],"Unnecessary escape character: \\/.",["353","354"],["355","356"],["357","358"],["292"],["293"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'isFetchingOnce' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["359"],"React Hook useEffect has missing dependencies: 'count', 'page', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["360"],"React Hook useEffect has a missing dependency: 'scrollHandler'. Either include it or remove the dependency array.",["361"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","@typescript-eslint/no-redeclare","'removeProfilePost' is already defined.","redeclared","@typescript-eslint/no-unused-vars","'removeProfilePost' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"362","fix":"363"},[1187,1187],"()",{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"messageId":"368","fix":"369","desc":"370"},{"messageId":"371","fix":"372","desc":"373"},{"messageId":"368","fix":"374","desc":"370"},{"messageId":"371","fix":"375","desc":"373"},{"messageId":"368","fix":"376","desc":"370"},{"messageId":"371","fix":"377","desc":"373"},{"messageId":"368","fix":"378","desc":"370"},{"messageId":"371","fix":"379","desc":"373"},{"messageId":"368","fix":"380","desc":"370"},{"messageId":"371","fix":"381","desc":"373"},{"messageId":"368","fix":"382","desc":"370"},{"messageId":"371","fix":"383","desc":"373"},{"messageId":"368","fix":"384","desc":"370"},{"messageId":"371","fix":"385","desc":"373"},{"messageId":"368","fix":"386","desc":"370"},{"messageId":"371","fix":"387","desc":"373"},{"messageId":"368","fix":"388","desc":"370"},{"messageId":"371","fix":"389","desc":"373"},{"messageId":"368","fix":"390","desc":"370"},{"messageId":"371","fix":"391","desc":"373"},{"messageId":"368","fix":"392","desc":"370"},{"messageId":"371","fix":"393","desc":"373"},{"messageId":"368","fix":"394","desc":"370"},{"messageId":"371","fix":"395","desc":"373"},{"messageId":"368","fix":"396","desc":"370"},{"messageId":"371","fix":"397","desc":"373"},{"messageId":"368","fix":"398","desc":"370"},{"messageId":"371","fix":"399","desc":"373"},{"messageId":"368","fix":"400","desc":"370"},{"messageId":"371","fix":"401","desc":"373"},{"messageId":"368","fix":"402","desc":"370"},{"messageId":"371","fix":"403","desc":"373"},{"messageId":"368","fix":"404","desc":"370"},{"messageId":"371","fix":"405","desc":"373"},{"messageId":"368","fix":"406","desc":"370"},{"messageId":"371","fix":"407","desc":"373"},{"messageId":"368","fix":"408","desc":"370"},{"messageId":"371","fix":"409","desc":"373"},{"messageId":"368","fix":"410","desc":"370"},{"messageId":"371","fix":"411","desc":"373"},{"messageId":"368","fix":"412","desc":"370"},{"messageId":"371","fix":"413","desc":"373"},{"messageId":"368","fix":"414","desc":"370"},{"messageId":"371","fix":"415","desc":"373"},{"messageId":"368","fix":"416","desc":"370"},{"messageId":"371","fix":"417","desc":"373"},{"messageId":"368","fix":"418","desc":"370"},{"messageId":"371","fix":"419","desc":"373"},{"messageId":"368","fix":"420","desc":"370"},{"messageId":"371","fix":"421","desc":"373"},{"messageId":"368","fix":"422","desc":"370"},{"messageId":"371","fix":"423","desc":"373"},{"messageId":"368","fix":"424","desc":"370"},{"messageId":"371","fix":"425","desc":"373"},{"messageId":"368","fix":"426","desc":"370"},{"messageId":"371","fix":"427","desc":"373"},{"messageId":"368","fix":"428","desc":"370"},{"messageId":"371","fix":"429","desc":"373"},{"messageId":"368","fix":"430","desc":"370"},{"messageId":"371","fix":"431","desc":"373"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},"Update the dependencies array to be: [props, props.isAuth]",{"range":"438","text":"439"},"Update the dependencies array to be: [props.match.params.userId, props.profileImage, props.isAuth, props]",{"range":"440","text":"441"},"Update the dependencies array to be: [props, props.isFollowed]",{"range":"442","text":"443"},"removeEscape",{"range":"444","text":"445"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"446","text":"447"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"448","text":"445"},{"range":"449","text":"447"},{"range":"450","text":"445"},{"range":"451","text":"447"},{"range":"452","text":"445"},{"range":"453","text":"447"},{"range":"454","text":"445"},{"range":"455","text":"447"},{"range":"456","text":"445"},{"range":"457","text":"447"},{"range":"458","text":"445"},{"range":"459","text":"447"},{"range":"460","text":"445"},{"range":"461","text":"447"},{"range":"462","text":"445"},{"range":"463","text":"447"},{"range":"464","text":"445"},{"range":"465","text":"447"},{"range":"466","text":"445"},{"range":"467","text":"447"},{"range":"468","text":"445"},{"range":"469","text":"447"},{"range":"470","text":"445"},{"range":"471","text":"447"},{"range":"472","text":"445"},{"range":"473","text":"447"},{"range":"474","text":"445"},{"range":"475","text":"447"},{"range":"476","text":"445"},{"range":"477","text":"447"},{"range":"478","text":"445"},{"range":"479","text":"447"},{"range":"480","text":"445"},{"range":"481","text":"447"},{"range":"482","text":"445"},{"range":"483","text":"447"},{"range":"484","text":"445"},{"range":"485","text":"447"},{"range":"486","text":"445"},{"range":"487","text":"447"},{"range":"488","text":"445"},{"range":"489","text":"447"},{"range":"490","text":"445"},{"range":"491","text":"447"},{"range":"492","text":"445"},{"range":"493","text":"447"},{"range":"494","text":"445"},{"range":"495","text":"447"},{"range":"496","text":"445"},{"range":"497","text":"447"},{"range":"498","text":"445"},{"range":"499","text":"447"},{"range":"500","text":"445"},{"range":"501","text":"447"},{"range":"502","text":"445"},{"range":"503","text":"447"},{"range":"504","text":"445"},{"range":"505","text":"447"},"Update the dependencies array to be: [isFetchingOnce, props]",{"range":"506","text":"507"},"Update the dependencies array to be: [count, page, props, props.isFetching]",{"range":"508","text":"509"},"Update the dependencies array to be: [scrollHandler]",{"range":"510","text":"511"},[3562,3576],"[props, props.isAuth]",[9709,9770],"[props.match.params.userId, props.profileImage, props.isAuth, props]",[3521,3539],"[props, props.isFollowed]",[518,519],"",[518,518],"\\",[522,523],[522,522],[524,525],[524,524],[526,527],[526,526],[528,529],[528,528],[1228,1229],[1228,1228],[1232,1233],[1232,1232],[1234,1235],[1234,1234],[1236,1237],[1236,1236],[1238,1239],[1238,1238],[1332,1333],[1332,1332],[1336,1337],[1336,1336],[1338,1339],[1338,1338],[1340,1341],[1340,1340],[1342,1343],[1342,1342],[1443,1444],[1443,1443],[1447,1448],[1447,1447],[1449,1450],[1449,1449],[1451,1452],[1451,1451],[1453,1454],[1453,1453],[1491,1492],[1491,1491],[1573,1574],[1573,1573],[1577,1578],[1577,1577],[1579,1580],[1579,1579],[1581,1582],[1581,1581],[1583,1584],[1583,1583],[1828,1829],[1828,1828],[1830,1831],[1830,1830],[1846,1847],[1846,1846],[1848,1849],[1848,1848],[3312,3314],"[isFetchingOnce, props]",[3442,3460],"[count, page, props, props.isFetching]",[3644,3646],"[scrollHandler]"]