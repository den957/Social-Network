[{"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\App.js":"2","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Header\\Header.jsx":"4","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Aside\\Aside.jsx":"5","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Messages\\Messages.jsx":"6","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\Profile.jsx":"7","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Login\\Login.jsx":"8","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Login\\LoginForm.jsx":"9","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Preloader\\Preloader.jsx":"10","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\modals\\ModalStatus\\ModalStatus.jsx":"11","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\modals\\ModalStatus\\ModalStatusForm.jsx":"12","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\hoc\\withAuthRedirect.js":"13","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Preloader\\PreloaderLine\\PreloaderLine.jsx":"14","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfilePostCreate\\ProfilePost.jsx":"15","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfilePostList\\ProfilePostList.jsx":"16","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\hoc\\withSuspense.js":"17","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\app.reducer.ts":"18","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\auth.reducer.ts":"19","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\login.reducer.ts":"20","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\profile.reducer.ts":"21","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\users.reducer.ts":"22","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Paginator\\Paginator.tsx":"23","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\Users.tsx":"24","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\store.ts":"25","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersContainer.tsx":"26","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersAll\\UsersAll.tsx":"27","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersAll\\UsersAllContainer.tsx":"28","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Settings\\Settings.tsx":"29","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Settings\\SettingsForm.tsx":"30","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\api\\api.ts":"31","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\validators\\validators.ts":"32","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\FormControl\\FormControl.tsx":"33"},{"size":709,"mtime":1614602397085,"results":"34","hashOfConfig":"35"},{"size":2797,"mtime":1615740938802,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"35"},{"size":4633,"mtime":1614274149637,"results":"38","hashOfConfig":"35"},{"size":1259,"mtime":1615139566694,"results":"39","hashOfConfig":"35"},{"size":506,"mtime":1613091159281,"results":"40","hashOfConfig":"35"},{"size":13039,"mtime":1615826189536,"results":"41","hashOfConfig":"35"},{"size":1411,"mtime":1615647541620,"results":"42","hashOfConfig":"35"},{"size":2334,"mtime":1615893220804,"results":"43","hashOfConfig":"35"},{"size":271,"mtime":1612897638793,"results":"44","hashOfConfig":"35"},{"size":1252,"mtime":1615831724989,"results":"45","hashOfConfig":"35"},{"size":622,"mtime":1615136780034,"results":"46","hashOfConfig":"35"},{"size":646,"mtime":1614278925930,"results":"47","hashOfConfig":"35"},{"size":766,"mtime":1614273514917,"results":"48","hashOfConfig":"35"},{"size":1809,"mtime":1614449456374,"results":"49","hashOfConfig":"35"},{"size":1383,"mtime":1615203425903,"results":"50","hashOfConfig":"35"},{"size":342,"mtime":1614507884420,"results":"51","hashOfConfig":"35"},{"size":1104,"mtime":1615901132457,"results":"52","hashOfConfig":"35"},{"size":3333,"mtime":1615817294802,"results":"53","hashOfConfig":"35"},{"size":968,"mtime":1615806803235,"results":"54","hashOfConfig":"35"},{"size":5924,"mtime":1615902256274,"results":"55","hashOfConfig":"35"},{"size":7152,"mtime":1615890278134,"results":"56","hashOfConfig":"35"},{"size":2214,"mtime":1615729251181,"results":"57","hashOfConfig":"35"},{"size":3530,"mtime":1615764149618,"results":"58","hashOfConfig":"35"},{"size":782,"mtime":1615714813632,"results":"59","hashOfConfig":"35"},{"size":2734,"mtime":1615892491067,"results":"60","hashOfConfig":"35"},{"size":3004,"mtime":1615764789100,"results":"61","hashOfConfig":"35"},{"size":3576,"mtime":1615893163631,"results":"62","hashOfConfig":"35"},{"size":3268,"mtime":1615902348540,"results":"63","hashOfConfig":"35"},{"size":5142,"mtime":1615846241339,"results":"64","hashOfConfig":"35"},{"size":3795,"mtime":1615899200352,"results":"65","hashOfConfig":"35"},{"size":2099,"mtime":1615844757549,"results":"66","hashOfConfig":"35"},{"size":429,"mtime":1615848189724,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"s4zipz",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"113"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"113"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"113"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"113"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"113"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\index.js",[],["147","148"],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\App.js",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Header\\Header.jsx",["149","150","151","152","153"],"import React, { useEffect, useState } from 'react'\r\nimport s from './Header.module.css'\r\nimport cn from 'classnames'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\r\nimport logoImg from '../../assets/images/logoImg.png'\r\nimport { connect } from 'react-redux'\r\nimport { logOutServerTC } from '../../redux/auth.reducer'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\nimport { getProfileMeInfo } from '../../redux/profile.reducer'\r\n\r\nexport const Header = (props) => {\r\n   let [modal, editModal] = useState(false)\r\n   return (\r\n      <div className={s.header} >\r\n         <div className={s.header__container}>\r\n            <div className={s.header__row}>\r\n               <div className={cn(s.header__logo, s.logoHeader)}>\r\n                  <div className={s.logoHeader__row}>\r\n                     <div className={s.logoHeader__img}>\r\n                        <img src={logoImg} />\r\n                     </div>\r\n                     <div className={s.logoHeader__name}>\r\n                        vkontakte\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               {props.isAuth\r\n                  ? <>\r\n                     {!modal\r\n                        ? <div className={cn(s.header__body, s.bodyHeader)} onClick={() => editModal(true)}>\r\n                           <div className={s.bodyHeader__row}>\r\n                              <div className={s.bodyHeader__fullName}>{props.isAuth && props.profileMeInfo.fullName}</div>\r\n                              <div className={s.bodyHeader__logo}>{props.isAuth && <img src={props.profileMeInfo.photos.small} />}</div>\r\n                              <div className={s.bodyHeader__arrow}><FontAwesomeIcon icon={faChevronDown} /></div>\r\n                           </div>\r\n                        </div>\r\n                        : <div className={s.header__body, s.bodyHeader} onClick={() => editModal(false)}>\r\n                           <div className={s.bodyHeader__row}>\r\n                              <div className={s.bodyHeader__fullName}>{props.isAuth && props.profileMeInfo.fullName}</div>\r\n                              <div className={s.bodyHeader__logo}>{props.isAuth && <img src={props.profileMeInfo.photos.small} />}</div>\r\n                              <div className={s.bodyHeader__arrow}><FontAwesomeIcon icon={faChevronDown} /></div>\r\n                           </div>\r\n                        </div>\r\n                     }\r\n                  </>\r\n                  : <div className={s.header__login}>\r\n                     <NavLink className={s.loginHeader__link} to={'/login'}>Login</NavLink>\r\n                  </div>\r\n               }\r\n            </div>\r\n            {modal &&\r\n               <div className={s.header__modal}>\r\n                  <div className={s.modalHeader__item} onClick={() => editModal(false)}>\r\n                     <NavLink to={'/settings'} className={s.modalHeader__link}>Settings</NavLink>\r\n                  </div>\r\n                  <div className={s.modalHeader__line}></div>\r\n                  <div className={s.modalHeader__link} onClick={() => { props.logOutServerTC(); editModal(false) }}>\r\n                     <span>Log Out</span>\r\n                  </div>\r\n               </div>\r\n            }\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst HeaderContainer = (props) => {\r\n   useEffect(() => {\r\n      if (props.isAuth) {\r\n         props.getProfileMeInfo(props.userId)\r\n      }\r\n   }, [props.isAuth])\r\n   if (props.isAuth) {\r\n      if (!props.profileMeInfo) {\r\n         return (\r\n            <div className={s.preloader__headerWrapper}>\r\n               <div className={s.preloader__headerBlock}>\r\n                  <Preloader />\r\n               </div>\r\n            </div >\r\n         )\r\n      }\r\n   }\r\n   return (\r\n      <Header profileMeInfo={props.profileMeInfo} userId={props.userId} login={props.login} isAuth={props.isAuth} logOutServerTC={props.logOutServerTC} getProfileMeInfo={props.getProfileMeInfo} />\r\n   )\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      isAuth: state.auth.isAuth,\r\n      login: state.auth.login,\r\n      userId: state.auth.id,\r\n      profileMeInfo: state.profile.profileMeInfo,\r\n      profileImage: state.profile.profileImage,\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      logOutServerTC: () => { dispatch(logOutServerTC()) },\r\n      getProfileMeInfo: (userId) => { dispatch(getProfileMeInfo(userId)) }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Aside\\Aside.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Messages\\Messages.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\Profile.jsx",["154","155","156","157"],"import React, { useEffect, useState } from 'react'\r\nimport s from './Profile.module.css'\r\nimport cn from 'classnames'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink, withRouter } from 'react-router-dom'\r\nimport { addProfilePost, getProfileInfo, getProfileMeInfo, getProfileStatus, removeProfilePost, setProfileImage, setProfileStatus } from '../../redux/profile.reducer'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\nimport logo from '../../assets/images/logo.jpg'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowAltCircleUp, faHome } from '@fortawesome/free-solid-svg-icons'\r\nimport { ProfileReduxPost } from './ProfilePostCreate/ProfilePost'\r\nimport ProfilePostList from './ProfilePostList/ProfilePostList'\r\n\r\nconst Profile = (props) => {\r\n   const [modalPost, setModalPost] = useState(false)\r\n   const [isShowDetails, editIsShowDetails] = useState(false)\r\n   const onChangeAvatar = (e) => {\r\n      let image = e.target.files[0]\r\n      props.setProfileImage(image)\r\n   }\r\n   const generateDate = () => {\r\n      return new Date()\r\n   }\r\n   const onSubmit = (dataPosts) => {\r\n      setModalPost(false)\r\n      let id = `f${(+new Date).toString(16)}`;\r\n      let date = `${generateDate().toLocaleDateString()} at ${generateDate().toLocaleTimeString()}`\r\n      const dataPost = {\r\n         id: id,\r\n         post: dataPosts.post,\r\n         date: date\r\n      }\r\n      props.addProfilePost(dataPost)\r\n   }\r\n   return (\r\n      <div className={s.profile}>\r\n         <div className={s.profile__row}>\r\n            {/* NARROW COLUMN */}\r\n            <div className={s.profile__narrow}>\r\n               <div className={s.profile__me}>\r\n                  <div className={s.meProfile__photo}><img src={props.profileInfo.photos.small ? props.profileInfo.photos.small : logo} />\r\n                     {props.isOwner &&\r\n                        <div className={s.meProfile__block}>\r\n                           <div className={s.meProfile__refresh}>\r\n                              <label className={s.refreshProfile__fake} htmlFor={'avatar-img'}><FontAwesomeIcon icon={faArrowAltCircleUp} className={s.refreshProfile__arrowTop} /><span>Refresh photo</span></label>\r\n                              <input className={s.refreshProfile__input} type='file' id={'avatar-img'} name='avatar-img' onChange={(e) => { onChangeAvatar(e) }} />\r\n                           </div>\r\n                        </div>\r\n                     }\r\n                  </div>\r\n               </div>\r\n               {props.isOwner\r\n                  ? <>\r\n                     <div className={s.profile__edit}>\r\n                        <NavLink className={s.editProfile__settings} to={'/settings'}>Edit</NavLink>\r\n                     </div>\r\n                     <div className={s.profile__enter}>\r\n                        <NavLink to={'/settings'}><span><FontAwesomeIcon icon={faHome} className={s.enterProfile__link} />Enter your contacts</span></NavLink>\r\n                     </div>\r\n                  </>\r\n                  : < div className={s.profile__edit}>\r\n                     <NavLink className={s.editProfile__messages} to={'/messages'}>Write a message</NavLink>\r\n                  </div>\r\n               }\r\n            </div>\r\n            {/* WIDE COLUMN */}\r\n            <div className={s.profile__wide}>\r\n               <div className={s.profile__info}>\r\n                  <div className={s.infoProfile__fullName}>\r\n                     <h4>{props.profileInfo.fullName}</h4>\r\n                  </div>\r\n                  {props.isOwner\r\n                     ? <>\r\n                        {props.profileStatus\r\n                           ? <div className={s.infoProfile__status} >\r\n                              <div onClick={(e) => { props.editModalStatus(true) }}>{props.profileStatus}</div>\r\n                           </div>\r\n                           : <div className={s.infoProfile__status} >\r\n                              <div className={s.infoProfile__fakeStatus} onClick={(e) => { props.editModalStatus(true) }}>status</div>\r\n                           </div>\r\n                        }\r\n                     </>\r\n                     : <>\r\n                        {props.profileStatus\r\n                           ? <div className={s.statusProfile__user}>\r\n                              <div>{props.profileStatus}</div>\r\n                           </div>\r\n                           : <div className={s.statusProfile__empty}></div>\r\n                        }\r\n                     </>\r\n                  }\r\n                  <div className={s.infoProfile__line}></div>\r\n                  <div className={s.infoProfile__information}>\r\n                     <div className={cn(s.informationProfile__row, s.informationProfile)}>\r\n                        <span className={s.informationProfile__title}>About me: </span>\r\n                        {props.profileInfo.aboutMe\r\n                           ? <span className={s.informationProfile__answer} >{props.profileInfo.aboutMe}</span>\r\n                           : <span className={s.informationProfile__answer}>not specified</span>\r\n                        }\r\n                        <span className={s.informationProfile__title}>Town: </span>\r\n                        {props.profileInfo.lookingForAJobDescription\r\n                           ? <span className={s.informationProfile__answer}>{props.profileInfo.lookingForAJobDescription}</span>\r\n                           : <span className={s.informationProfile__answer}>not specified</span>\r\n                        }\r\n                        <span className={s.informationProfile__title}>Family status: </span>\r\n                        {props.profileInfo.lookingForAJob\r\n                           ? <span className={s.informationProfile__answer}>married</span>\r\n                           : <span className={s.informationProfile__answer}>not married</span>\r\n                        }\r\n                     </div>\r\n                  </div>\r\n                  {isShowDetails\r\n                     ? <>\r\n                        <div className={s.infoProfile__showDetails} onClick={(e) => editIsShowDetails(false)}>\r\n                           <span>Hide detailed information</span>\r\n                        </div>\r\n                        <div className={s.infoProfile__information}>\r\n                           <div className={s.infoProfile__line}></div>\r\n                           <div className={cn(s.informationProfile__row, s.informationProfile)}>\r\n                              <span className={s.informationProfile__title}>YouTube: </span>\r\n                              {props.profileInfo.contacts.youtube\r\n                                 ? <span className={s.informationProfile__answer}>{props.profileInfo.contacts.youtube}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>Facebook: </span>\r\n                              {props.profileInfo.contacts.facebook\r\n                                 ? <span className={s.informationProfile__answer}>{props.profileInfo.contacts.facebook}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>LinkedIn: </span>\r\n                              {props.profileInfo.contacts.website\r\n                                 ? <span className={s.informationProfile__answer}>{props.profileInfo.contacts.website}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>GitHub: </span>\r\n                              {props.profileInfo.contacts.github\r\n                                 ? <span className={s.informationProfile__answer}>{props.profileInfo.contacts.github}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                           </div>\r\n                        </div>\r\n                     </>\r\n                     : <>\r\n                        <div className={s.infoProfile__showDetails} onClick={(e) => editIsShowDetails(true)}>\r\n                           <span>Show details</span>\r\n                        </div>\r\n                        <div></div>\r\n                     </>\r\n                  }\r\n                  <div className={s.infoProfile__line}></div>\r\n               </div>\r\n               {props.isOwner && props.isAuth &&\r\n                  <>\r\n                     <div className={s.profile__addPost}>\r\n                        <div className={s.addPostProfile__row}>\r\n                           <div className={s.addPostProfile__logo}>\r\n                              <img src={props.profileMeInfo.photos.small} />\r\n                           </div>\r\n                           <ProfileReduxPost onSubmit={onSubmit} setModalPost={setModalPost} modalPost={modalPost} />\r\n                        </div>\r\n                     </div>\r\n                     {props.profilePosts.length > 0 &&\r\n                        <ProfilePostList removeProfilePost={props.removeProfilePost} profileMeInfo={props.profileMeInfo} profilePosts={props.profilePosts} />\r\n                     }\r\n                  </>\r\n               }\r\n            </div>\r\n         </div>\r\n      </div >\r\n   )\r\n}\r\nexport const ProfileContainer = (props) => {\r\n   useEffect(() => {\r\n      let userId = props.match.params.userId\r\n      if (!userId) {\r\n         userId = props.userId\r\n         if (!userId) {\r\n            props.history.push('/login')\r\n         }\r\n         else {\r\n            props.getProfileInfo(userId)\r\n            props.getProfileMeInfo(userId)\r\n            props.getProfileStatus(userId)\r\n         }\r\n      }\r\n      else {\r\n         props.getProfileInfo(userId)\r\n         props.getProfileStatus(userId)\r\n      }\r\n   }, [props.match.params.userId, props.profileImage, props.isAuth])\r\n\r\n\r\n   return (\r\n      <>\r\n         {props.isAuth\r\n            ? props.profileInfo && props.profileMeInfo\r\n               ? <Profile removeProfilePost={props.removeProfilePost} profilePosts={props.profilePosts} addProfilePost={props.addProfilePost} profileMeInfo={props.profileMeInfo} modalStatus={props.modalStatus} editModalStatus={props.editModalStatus} profileInfo={props.profileInfo} birthday={props.birthday} lookingForAJobDescription={props.lookingForAJobDescription} setProfileImage={props.setProfileImage} isOwner={!props.match.params.userId} profileStatus={props.profileStatus} profileImage={props.profileImage} setProfileStatus={props.setProfileStatus} lookingForAJob={props.lookingForAJob} isAuth={props.isAuth} />\r\n               : <div className={s.preloader__profileWrapper}>\r\n                  <div className={s.preloader__profileBlock}>\r\n                     <Preloader />\r\n                  </div>\r\n               </div >\r\n            : props.profileInfo\r\n               ? <Profile removeProfilePost={props.removeProfilePost} profilePosts={props.profilePosts} addProfilePost={props.addProfilePost} modalStatus={props.modalStatus} editModalStatus={props.editModalStatus} profileInfo={props.profileInfo} birthday={props.birthday} lookingForAJobDescription={props.lookingForAJobDescription} setProfileImage={props.setProfileImage} isOwner={!props.match.params.userId} profileStatus={props.profileStatus} profileImage={props.profileImage} setProfileStatus={props.setProfileStatus} lookingForAJob={props.lookingForAJob} />\r\n               : <div className={s.preloader__profileWrapper}>\r\n                  <div className={s.preloader__profileBlock}>\r\n                     <Preloader />\r\n                  </div>\r\n               </div >\r\n         }\r\n      </>\r\n   )\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      userId: state.auth.id,\r\n      isAuth: state.auth.isAuth,\r\n      profileInfo: state.profile.profileInfo,\r\n      profileImage: state.profile.profileImage,\r\n      profileStatus: state.profile.profileStatus,\r\n      profileMeInfo: state.profile.profileMeInfo,\r\n      profilePosts: state.profile.profilePosts\r\n\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      getProfileInfo: (userId) => { dispatch(getProfileInfo(userId)) },\r\n      setProfileImage: (image) => { dispatch(setProfileImage(image)) },\r\n      getProfileStatus: (userId) => { dispatch(getProfileStatus(userId)) },\r\n      setProfileStatus: (status) => { dispatch(setProfileStatus(status)) },\r\n      getProfileMeInfo: (userId) => { dispatch(getProfileMeInfo(userId)) },\r\n      addProfilePost: (dataPost) => { dispatch(addProfilePost(dataPost)) },\r\n      removeProfilePost: (id) => { dispatch(removeProfilePost(id)) }\r\n   }\r\n}\r\nlet withRouterUrlUserId = withRouter(ProfileContainer)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouterUrlUserId)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Login\\Login.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Login\\LoginForm.jsx",["158"],"import React from 'react'\r\nimport s from './LoginForm.module.css'\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required } from \"../../validators/validators\";\r\nimport { useState } from \"react\";\r\nimport { Input } from \"../Common/FormControl/FormControl\";\r\n\r\nexport const LoginForm = (props) => {\r\n   const [checked, setChecked] = useState(false)\r\n   const [activeCheckbox, setActiveCheckbox] = useState(`${s.login__checkbox}`)\r\n   return (\r\n      <form className={s.login__form} onSubmit={props.handleSubmit}>\r\n         <div className={s.login__item}><Field className={s.login__input} component={Input} type={'input'} name={'email'} validate={required} /></div>\r\n         <div className={s.login__item}><Field className={s.login__input} component={Input} type={'password'} name={'password'} validate={required} /></div>\r\n         <div className={s.login__item}>\r\n            {!checked\r\n               ? <label>\r\n                  <div className={s.login__checkboxBlock} onClick={() => { setActiveCheckbox(`${s.login__checkbox} ${s.checkbox__active}`); setChecked(true); }} >\r\n                     <div className={activeCheckbox}></div>\r\n                     <span>Remember me</span>\r\n                  </div>\r\n                  <Field className={s.checkboxLogin} component={'input'} type={'checkbox'} name={'rememberMe'} checked={checked} />\r\n               </label>\r\n               : <label>\r\n                  <div className={s.login__checkboxBlock} onClick={() => { setActiveCheckbox(`${s.login__checkbox}`); setChecked(false); }} >\r\n                     <div className={activeCheckbox}></div>\r\n                     <span>Remember me</span>\r\n                  </div>\r\n                  <Field className={s.checkboxLogin} component={'input'} type={'checkbox'} name={'rememberMe'} checked={checked} />\r\n               </label>\r\n            }\r\n         </div>\r\n         <div>\r\n            {props.isCaptcha && <img className={s.login__captcha} src={props.urlCaptcha} />}\r\n            {props.isCaptcha && <div className={s.login__item}><Field className={s.login__input} component={'input'} type={'input'} name={'captcha'} /></div>}\r\n         </div>\r\n         <button className={s.login__button} type={'submit'}>To come in</button>\r\n      </form>\r\n   )\r\n}\r\nexport const LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Preloader\\Preloader.jsx",["159"],"import React from 'react'\r\nimport loadingImage from '../../../assets/images/loading.svg'\r\nimport s from './Preloader.module.css'\r\n\r\nlet Preloader = (props) => {\r\n   return (\r\n      <img src={loadingImage} className={s.preloader__img} />\r\n   )\r\n}\r\nexport default Preloader","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\modals\\ModalStatus\\ModalStatus.jsx",["160"],"import React from 'react'\r\nimport s from './ModalStatus.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { setProfileStatus } from '../../../redux/profile.reducer'\r\nimport ModalStatusReduxForm from './ModalStatusForm'\r\n\r\nexport const ModalStatus = (props) => {\r\n   const onSubmit = (dataForm) => {\r\n      if (Object.getOwnPropertyNames(dataForm).length > 0) {\r\n         props.setProfileStatus(dataForm.status)\r\n         props.editModalStatus(false)\r\n      }\r\n      else {\r\n         props.setProfileStatus('')\r\n         props.editModalStatus(false)\r\n      }\r\n   }\r\n   return (\r\n      <div className={s.modalStatus} onClick={() => props.editModalStatus(false)}>\r\n         <div className={s.modalStatus__window} onClick={(e) => e.stopPropagation()}>\r\n            <ModalStatusReduxForm profileStatus={props.profileStatus} onSubmit={onSubmit} profileStatus={props.profileStatus} />\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      profileStatus: state.profile.profileStatus\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      setProfileStatus: (status) => { dispatch(setProfileStatus(status)) }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalStatus)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\modals\\ModalStatus\\ModalStatusForm.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\hoc\\withAuthRedirect.js",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Preloader\\PreloaderLine\\PreloaderLine.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfilePostCreate\\ProfilePost.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfilePostList\\ProfilePostList.jsx",["161"],"import React from 'react'\r\nimport s from './ProfilePostList.module.css'\r\nimport cn from 'classnames'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst ProfilePostList = (props) => {\r\n   let posts = props.profilePosts.map((post) => {\r\n      return (\r\n         <div key={post.id} className={s.profile__newPost}>\r\n            <div className={cn(s.newPostProfile__row, s.newPostProfile)}>\r\n               <div className={s.newPostProfile__logo}>\r\n                  <img src={props.profileMeInfo.photos.small} />\r\n               </div>\r\n               <div className={s.newPostProfile__body}>\r\n                  <div className={s.newPostProfile__name}>\r\n                     {props.profileMeInfo.fullName}\r\n                  </div>\r\n                  <div className={s.newPostProfile__date}>\r\n                     {post.date}\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className={s.newPostProfileContent}>\r\n               {post.post}\r\n            </div>\r\n            <div className={s.newPostProfileRemove} onClick={(e) => { props.removeProfilePost(post.id) }}>\r\n               <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n         </div>\r\n      )\r\n   })\r\n   return (\r\n      <>\r\n         {posts}\r\n      </>\r\n   )\r\n}\r\nexport default ProfilePostList","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\hoc\\withSuspense.js",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\app.reducer.ts",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\auth.reducer.ts",[],["162","163"],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\login.reducer.ts",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\profile.reducer.ts",["164"],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\users.reducer.ts",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Paginator\\Paginator.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\Users.tsx",["165","166"],"import React from 'react'\r\nimport s from './Users.module.css'\r\nimport Paginator from '../Common/Paginator/Paginator'\r\nimport { NavLink } from 'react-router-dom'\r\nimport userIcon from '../../assets/images/userIcon.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserMinus } from '@fortawesome/free-solid-svg-icons'\r\nimport { UsersType } from '../../types/types'\r\n\r\ntype PropsType = {\r\n   isAuth: boolean,\r\n   usersFollowed: Array<UsersType>,\r\n   readyToggle: Array<number>,\r\n   totalCount: number | null,\r\n   countFollowed: number,\r\n   pageFollowed: number,\r\n   onPageChange: (pageFollowed: number) => void\r\n   unfollowUserTC: (userId: number) => void,\r\n}\r\nconst Users: React.FC<PropsType> = ({ isAuth, usersFollowed, readyToggle, unfollowUserTC, ...props }) => {\r\n   return (\r\n      <>\r\n         <div className={s.users}>\r\n            <div className={s.users__title}>\r\n               Users\r\n            </div>\r\n            <div className={s.users__menu}>\r\n               <div className={s.menuUsers__row}>\r\n                  <div className={s.menuUsers__title}>\r\n                     My requests\r\n                  </div>\r\n                  <NavLink className={s.menuUsers__button} to={'/users/all'}>Find more</NavLink>\r\n               </div>\r\n            </div>\r\n            {isAuth\r\n               ? < div className={s.users__request}>\r\n                  {usersFollowed.map((user) => {\r\n                     return (\r\n                        user.followed &&\r\n                        <div className={s.requestUsers__item} key={user.id}>\r\n                           <div className={s.itemUsers__row}>\r\n                              <NavLink className={s.itemUsers__image} to={`/profile/${user.id}`}>\r\n                                 {!user.photos.small\r\n                                    ? <img src={userIcon} />\r\n                                    : <img src={user.photos.small} />\r\n                                 }\r\n                              </NavLink>\r\n                              <div className={s.itemUsers__body}>\r\n                                 <NavLink className={s.bodyUsers__name} to={`/profile/${user.id}`}>{user.name}</NavLink>\r\n                                 <div className={s.bodyUsers__navigation}>\r\n                                    <div className={s.navigationUsers__row}>\r\n                                       <NavLink className={s.navigationUsers__message} to={'/messages'}>Write a message</NavLink>\r\n                                       <div className={s.navigationUsers__subscribe}>\r\n                                          <button disabled={readyToggle.some((userId) => userId === user.id)} onClick={(e) => { unfollowUserTC(user.id) }}><FontAwesomeIcon icon={faUserMinus} /></button>\r\n                                       </div>\r\n                                    </div>\r\n                                 </div>\r\n                              </div>\r\n                           </div>\r\n                           <div className={s.requestUsers__line}></div>\r\n                        </div>\r\n                     )\r\n                  })}\r\n                  <Paginator pageFollowed={props.pageFollowed} countFollowed={props.countFollowed} totalCount={props.totalCount} onPageChange={props.onPageChange} />\r\n               </div>\r\n               : <div className={s.login__warning}>\r\n                  To view this page, you need to go to the site.\r\n               </div>\r\n            }\r\n         </div>\r\n      </>\r\n   )\r\n}\r\nexport default Users\r\n","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\store.ts",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersContainer.tsx",["167"],"import React, { useEffect } from 'react'\r\nimport s from './Users.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { AppReducerType } from '../../redux/store'\r\nimport { getUsersFollowedTC, unfollowUserTC } from '../../redux/users.reducer'\r\nimport { UsersType } from '../../types/types'\r\nimport PreloaderLine from '../Common/Preloader/PreloaderLine/PreloaderLine'\r\nimport Users from './Users'\r\n\r\ntype MapStateToPropsType = {\r\n   isAuth: boolean,\r\n   usersFollowed: Array<UsersType>,\r\n   readyToggle: Array<number>,\r\n   totalCount: number | null,\r\n   countFollowed: number,\r\n   pageFollowed: number,\r\n   isReadyPage: boolean,\r\n}\r\ntype MapDispatchToPropsType = {\r\n   unfollowUserTC: (userId: number) => void,\r\n   getUsersFollowedTC: (count: number, pageFollowed: number, boolean: boolean) => void\r\n}\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst UsersContainer: React.FC<PropsType> = ({ countFollowed, isReadyPage, getUsersFollowedTC, ...props }) => {\r\n   useEffect(() => {\r\n      let [page, count] = [1, countFollowed]\r\n      getUsersFollowedTC(count, page, true)\r\n   }, [])\r\n   let onPageChange = (pageFollowed: number) => {\r\n      let count = countFollowed\r\n      getUsersFollowedTC(count, pageFollowed, true)\r\n   }\r\n   return (\r\n      <>\r\n         {isReadyPage\r\n            ? <Users isAuth={props.isAuth} pageFollowed={props.pageFollowed} usersFollowed={props.usersFollowed} countFollowed={countFollowed} totalCount={props.totalCount} onPageChange={onPageChange} unfollowUserTC={props.unfollowUserTC} readyToggle={props.readyToggle} />\r\n            : <div className={s.preloader__usersWrapper}>\r\n               <div className={s.preloader__usersBlock}>\r\n                  <PreloaderLine />\r\n               </div>\r\n            </div >\r\n         }\r\n      </>\r\n   )\r\n}\r\nconst mapStateToProps = (state: AppReducerType): MapStateToPropsType => {\r\n   return {\r\n      countFollowed: state.users.countFollowed,\r\n      pageFollowed: state.users.pageFollowed,\r\n      totalCount: state.users.totalCount,\r\n      usersFollowed: state.users.usersFollowed,\r\n      isReadyPage: state.users.isReadyPage,\r\n      readyToggle: state.users.readyToggle,\r\n      isAuth: state.auth.isAuth\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch: any): MapDispatchToPropsType => {\r\n   return {\r\n      getUsersFollowedTC: (count: number, pageFollowed: number, follower: boolean) => { dispatch(getUsersFollowedTC(count, pageFollowed, follower)) },\r\n      unfollowUserTC: (userId: number) => { dispatch(unfollowUserTC(userId)) }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersAll\\UsersAll.tsx",["168","169"],"import React from 'react'\r\nimport s from './UsersAll.module.css'\r\nimport cn from 'classnames'\r\nimport userIcon from '../../../assets/images/userIcon.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { NavLink } from 'react-router-dom'\r\nimport PreloaderLine from '../../Common/Preloader/PreloaderLine/PreloaderLine'\r\nimport { UsersType } from '../../../types/types'\r\n\r\ntype PropsType = {\r\n   isAuth: boolean,\r\n   usersUnfollowed: Array<UsersType>,\r\n   readyToggle: Array<number>,\r\n   followUserTC: (userId: number) => void,\r\n}\r\nexport const UsersAll: React.FC<PropsType> = ({ usersUnfollowed, isAuth, readyToggle, followUserTC }) => {\r\n   return (\r\n      <div className={s.usersAll}>\r\n         <div className={s.usersAll__title}>\r\n            Find friends\r\n         </div>\r\n         <div className={s.usersAll__body}>\r\n            <div className={s.bodyUsersAll__row}>\r\n               {usersUnfollowed.map((user) => {\r\n                  return (\r\n                     <div className={s.bodyUsersAll__item} key={user.id}>\r\n                        <NavLink className={s.bodyUsersAll__image} to={`/profile/${user.id}`}>\r\n                           {user.photos.small\r\n                              ? <img src={user.photos.small} />\r\n                              : <img src={userIcon} />\r\n                           }\r\n                        </NavLink>\r\n                        <div className={s.bodyUsersAll__body}>\r\n                           <div className={cn(s.bodyUsersAll__row, s.bodyUsersAll)}>\r\n                              <NavLink className={s.bodyUsersAll__name} to={`/profile/${user.id}`}>\r\n                                 <span>{user.name}</span>\r\n                              </NavLink>\r\n                              <div className={s.bodyUsersAll__subscribe}>\r\n                                 {!user.followed && isAuth\r\n                                    ? <button className={s.bodyUsersAll__abled} disabled={readyToggle.some((userId) => userId === user.id)} onClick={(e) => { followUserTC(user.id) }}><FontAwesomeIcon icon={faUserPlus} /></button>\r\n                                    : <button className={s.bodyUsersAll__disabled} disabled={true}><FontAwesomeIcon icon={faUserPlus} /></button>\r\n                                 }\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                  )\r\n               })\r\n               }\r\n               {\r\n                  function () {\r\n                     return (\r\n                        <div className={s.preloader__UsersAllWrapper}>\r\n                           <div className={s.preloader__UsersAllBlock}>\r\n                              <PreloaderLine />\r\n                           </div>\r\n                        </div >\r\n                     )\r\n                  }()\r\n               }\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersAll\\UsersAllContainer.tsx",["170","171","172"],"import React, { useEffect, useState } from 'react'\r\nimport s from './UsersAll.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { followUserTC, getOnceUnfollowedTC, getUsersUnfollowedTC, isFetchingUsers } from '../../../redux/users.reducer'\r\nimport Preloader from '../../Common/Preloader/Preloader'\r\nimport { UsersType } from '../../../types/types'\r\nimport { AppReducerType } from '../../../redux/store'\r\nimport { UsersAll } from './UsersAll'\r\nimport { ThunkDispatch } from 'redux-thunk'\r\nimport { AnyAction } from 'redux'\r\n\r\ntype MapStateToPropsType = {\r\n   isAuth: boolean,\r\n   readyToggle: Array<number>,\r\n   usersUnfollowed: Array<UsersType>,\r\n   countUnfollowed: number,\r\n   pageUnfollowed: number,\r\n   isFetching: boolean,\r\n}\r\ntype MapDispatchToPropsType = {\r\n   followUserTC: (userId: number) => void,\r\n   getUsersUnfollowedTC: (count: number, page: number, boolean: boolean) => void,\r\n   getOnceUnfollowedTC: () => void,\r\n   isFetchingUsers: (bool: boolean) => void,\r\n}\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst UserAllContainer: React.FC<PropsType> = ({ isFetchingUsers, pageUnfollowed, isFetching, countUnfollowed, getOnceUnfollowedTC, getUsersUnfollowedTC, ...props }) => {\r\n   const [isFetchingOnce, setIsFetchingOnce] = useState(false)\r\n   let [page, count] = [pageUnfollowed, countUnfollowed]\r\n   useEffect(() => {\r\n      if (!isFetchingOnce) {\r\n         getOnceUnfollowedTC()\r\n         setIsFetchingOnce(true)\r\n      }\r\n   }, [])\r\n   useEffect(() => {\r\n      if (isFetching) {\r\n         getUsersUnfollowedTC(count, page, false)\r\n      }\r\n   }, [isFetching])\r\n   useEffect(() => {\r\n      document.addEventListener('scroll', scrollHandler)\r\n      return () => {\r\n         document.removeEventListener('scroll', scrollHandler)\r\n      }\r\n   }, [])\r\n   const scrollHandler = (e: any): void => {\r\n      const [scrollHeight, scrollTop, innerHeight] = [e.target.documentElement.scrollHeight as number, e.target.documentElement.scrollTop as number, window.innerHeight as number]\r\n      if (scrollTop + 100 >= scrollHeight - innerHeight) {\r\n         isFetchingUsers(true)\r\n      }\r\n   }\r\n   return (\r\n      <>\r\n         {isFetchingOnce\r\n            ? <UsersAll isAuth={props.isAuth} followUserTC={props.followUserTC} usersUnfollowed={props.usersUnfollowed} readyToggle={props.readyToggle} />\r\n            : <div className={s.preloader__UsersAllContainerWrapper}>\r\n               <div className={s.preloader__UsersAllContainerBlock}>\r\n                  <Preloader />\r\n               </div>\r\n            </div >\r\n         }\r\n      </>\r\n   )\r\n}\r\nconst mapStateToProps = (state: AppReducerType): MapStateToPropsType => {\r\n   return {\r\n      usersUnfollowed: state.users.usersUnfollowed,\r\n      countUnfollowed: state.users.countUnfollowed,\r\n      pageUnfollowed: state.users.pageUnfollowed,\r\n      isFetching: state.users.isFetching,\r\n      readyToggle: state.users.readyToggle,\r\n      isAuth: state.auth.isAuth\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>): MapDispatchToPropsType => {\r\n   return {\r\n      getUsersUnfollowedTC: (count: number, pageUnfollowed: number, follower: boolean): void => { dispatch(getUsersUnfollowedTC(count, pageUnfollowed, follower)) },\r\n      isFetchingUsers: (bool: boolean): void => { dispatch(isFetchingUsers(bool)) },\r\n      followUserTC: (userId: number): void => { dispatch(followUserTC(userId)) },\r\n      getOnceUnfollowedTC: (): void => { dispatch(getOnceUnfollowedTC()) }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAllContainer)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Settings\\Settings.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Settings\\SettingsForm.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\api\\api.ts",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\validators\\validators.ts",["173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202"],"export const required = (value: string): string | undefined => {\r\n   if (value) {\r\n      return undefined\r\n   }\r\n   else {\r\n      return 'Require filed'\r\n   }\r\n}\r\nexport const minLengthCreator = (minLength: number) => {\r\n   return (value: string): string | undefined => {\r\n      if (value && value.length > minLength) {\r\n         return 'Field is too long'\r\n      }\r\n      return undefined\r\n   }\r\n}\r\nexport const validUrlFormat = () => {\r\n   return (value: string): string | undefined => {\r\n      let regExp = /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/\r\n      if (regExp.test(value) === true) {\r\n         return undefined\r\n      }\r\n      return 'Invalid url address'\r\n   }\r\n}\r\nexport const validDateFormat = () => {\r\n   return (value: string): string | undefined => {\r\n      let regExp = /^(\\d{1,2})[\\s\\.\\/-](\\d{1,2})[\\s\\.\\/-](\\d{4})$/\r\n      if (regExp.test(value) === true) {\r\n         return undefined\r\n      }\r\n      return 'Invalid date'\r\n   }\r\n}\r\n","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\FormControl\\FormControl.tsx",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":22,"column":25,"nodeType":"209","endLine":22,"endColumn":46},{"ruleId":"207","severity":1,"message":"208","line":35,"column":84,"nodeType":"209","endLine":35,"endColumn":130},{"ruleId":"210","severity":1,"message":"211","line":39,"column":57,"nodeType":"212","messageId":"213","endLine":39,"endColumn":58},{"ruleId":"207","severity":1,"message":"208","line":42,"column":84,"nodeType":"209","endLine":42,"endColumn":130},{"ruleId":"214","severity":1,"message":"215","line":74,"column":7,"nodeType":"216","endLine":74,"endColumn":21,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":26,"column":22,"nodeType":"220","messageId":"221","endLine":26,"endColumn":30,"fix":"222"},{"ruleId":"207","severity":1,"message":"208","line":41,"column":55,"nodeType":"209","endLine":41,"endColumn":139},{"ruleId":"207","severity":1,"message":"208","line":157,"column":31,"nodeType":"209","endLine":157,"endColumn":77},{"ruleId":"214","severity":1,"message":"215","line":190,"column":7,"nodeType":"216","endLine":190,"endColumn":68,"suggestions":"223"},{"ruleId":"207","severity":1,"message":"208","line":34,"column":33,"nodeType":"209","endLine":34,"endColumn":92},{"ruleId":"207","severity":1,"message":"208","line":7,"column":7,"nodeType":"209","endLine":7,"endColumn":62},{"ruleId":"224","severity":1,"message":"225","line":21,"column":91,"nodeType":"226","endLine":21,"endColumn":126},{"ruleId":"207","severity":1,"message":"208","line":13,"column":19,"nodeType":"209","endLine":13,"endColumn":65},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"227","severity":1,"message":"228","line":81,"column":60,"nodeType":"229","messageId":"230","endLine":81,"endColumn":62},{"ruleId":"207","severity":1,"message":"208","line":44,"column":39,"nodeType":"209","endLine":44,"endColumn":61},{"ruleId":"207","severity":1,"message":"208","line":45,"column":39,"nodeType":"209","endLine":45,"endColumn":70},{"ruleId":"214","severity":1,"message":"231","line":29,"column":7,"nodeType":"216","endLine":29,"endColumn":9,"suggestions":"232"},{"ruleId":"207","severity":1,"message":"208","line":30,"column":33,"nodeType":"209","endLine":30,"endColumn":64},{"ruleId":"207","severity":1,"message":"208","line":31,"column":33,"nodeType":"209","endLine":31,"endColumn":55},{"ruleId":"214","severity":1,"message":"233","line":36,"column":7,"nodeType":"216","endLine":36,"endColumn":9,"suggestions":"234"},{"ruleId":"214","severity":1,"message":"235","line":41,"column":7,"nodeType":"216","endLine":41,"endColumn":19,"suggestions":"236"},{"ruleId":"214","severity":1,"message":"237","line":47,"column":7,"nodeType":"216","endLine":47,"endColumn":9,"suggestions":"238"},{"ruleId":"239","severity":1,"message":"240","line":19,"column":120,"nodeType":"241","messageId":"242","endLine":19,"endColumn":121,"suggestions":"243"},{"ruleId":"239","severity":1,"message":"244","line":19,"column":124,"nodeType":"241","messageId":"242","endLine":19,"endColumn":125,"suggestions":"245"},{"ruleId":"239","severity":1,"message":"246","line":19,"column":126,"nodeType":"241","messageId":"242","endLine":19,"endColumn":127,"suggestions":"247"},{"ruleId":"239","severity":1,"message":"248","line":19,"column":128,"nodeType":"241","messageId":"242","endLine":19,"endColumn":129,"suggestions":"249"},{"ruleId":"239","severity":1,"message":"250","line":19,"column":130,"nodeType":"241","messageId":"242","endLine":19,"endColumn":131,"suggestions":"251"},{"ruleId":"239","severity":1,"message":"240","line":19,"column":830,"nodeType":"241","messageId":"242","endLine":19,"endColumn":831,"suggestions":"252"},{"ruleId":"239","severity":1,"message":"244","line":19,"column":834,"nodeType":"241","messageId":"242","endLine":19,"endColumn":835,"suggestions":"253"},{"ruleId":"239","severity":1,"message":"246","line":19,"column":836,"nodeType":"241","messageId":"242","endLine":19,"endColumn":837,"suggestions":"254"},{"ruleId":"239","severity":1,"message":"248","line":19,"column":838,"nodeType":"241","messageId":"242","endLine":19,"endColumn":839,"suggestions":"255"},{"ruleId":"239","severity":1,"message":"250","line":19,"column":840,"nodeType":"241","messageId":"242","endLine":19,"endColumn":841,"suggestions":"256"},{"ruleId":"239","severity":1,"message":"240","line":19,"column":934,"nodeType":"241","messageId":"242","endLine":19,"endColumn":935,"suggestions":"257"},{"ruleId":"239","severity":1,"message":"244","line":19,"column":938,"nodeType":"241","messageId":"242","endLine":19,"endColumn":939,"suggestions":"258"},{"ruleId":"239","severity":1,"message":"246","line":19,"column":940,"nodeType":"241","messageId":"242","endLine":19,"endColumn":941,"suggestions":"259"},{"ruleId":"239","severity":1,"message":"248","line":19,"column":942,"nodeType":"241","messageId":"242","endLine":19,"endColumn":943,"suggestions":"260"},{"ruleId":"239","severity":1,"message":"250","line":19,"column":944,"nodeType":"241","messageId":"242","endLine":19,"endColumn":945,"suggestions":"261"},{"ruleId":"239","severity":1,"message":"240","line":19,"column":1045,"nodeType":"241","messageId":"242","endLine":19,"endColumn":1046,"suggestions":"262"},{"ruleId":"239","severity":1,"message":"244","line":19,"column":1049,"nodeType":"241","messageId":"242","endLine":19,"endColumn":1050,"suggestions":"263"},{"ruleId":"239","severity":1,"message":"246","line":19,"column":1051,"nodeType":"241","messageId":"242","endLine":19,"endColumn":1052,"suggestions":"264"},{"ruleId":"239","severity":1,"message":"248","line":19,"column":1053,"nodeType":"241","messageId":"242","endLine":19,"endColumn":1054,"suggestions":"265"},{"ruleId":"239","severity":1,"message":"250","line":19,"column":1055,"nodeType":"241","messageId":"242","endLine":19,"endColumn":1056,"suggestions":"266"},{"ruleId":"239","severity":1,"message":"267","line":19,"column":1093,"nodeType":"241","messageId":"242","endLine":19,"endColumn":1094,"suggestions":"268"},{"ruleId":"239","severity":1,"message":"240","line":19,"column":1175,"nodeType":"241","messageId":"242","endLine":19,"endColumn":1176,"suggestions":"269"},{"ruleId":"239","severity":1,"message":"244","line":19,"column":1179,"nodeType":"241","messageId":"242","endLine":19,"endColumn":1180,"suggestions":"270"},{"ruleId":"239","severity":1,"message":"246","line":19,"column":1181,"nodeType":"241","messageId":"242","endLine":19,"endColumn":1182,"suggestions":"271"},{"ruleId":"239","severity":1,"message":"248","line":19,"column":1183,"nodeType":"241","messageId":"242","endLine":19,"endColumn":1184,"suggestions":"272"},{"ruleId":"239","severity":1,"message":"250","line":19,"column":1185,"nodeType":"241","messageId":"242","endLine":19,"endColumn":1186,"suggestions":"273"},{"ruleId":"239","severity":1,"message":"274","line":28,"column":34,"nodeType":"241","messageId":"242","endLine":28,"endColumn":35,"suggestions":"275"},{"ruleId":"239","severity":1,"message":"276","line":28,"column":36,"nodeType":"241","messageId":"242","endLine":28,"endColumn":37,"suggestions":"277"},{"ruleId":"239","severity":1,"message":"274","line":28,"column":52,"nodeType":"241","messageId":"242","endLine":28,"endColumn":53,"suggestions":"278"},{"ruleId":"239","severity":1,"message":"276","line":28,"column":54,"nodeType":"241","messageId":"242","endLine":28,"endColumn":55,"suggestions":"279"},"no-native-reassign",["280"],"no-negated-in-lhs",["281"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["282"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"283","text":"284"},["285"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'countFollowed' and 'getUsersFollowedTC'. Either include them or remove the dependency array. If 'getUsersFollowedTC' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["286"],"React Hook useEffect has missing dependencies: 'getOnceUnfollowedTC' and 'isFetchingOnce'. Either include them or remove the dependency array. If 'getOnceUnfollowedTC' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["287"],"React Hook useEffect has missing dependencies: 'count', 'getUsersUnfollowedTC', and 'page'. Either include them or remove the dependency array. If 'getUsersUnfollowedTC' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["288"],"React Hook useEffect has a missing dependency: 'scrollHandler'. Either include it or remove the dependency array.",["289"],"no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["290","291"],"Unnecessary escape character: \\(.",["292","293"],"Unnecessary escape character: \\).",["294","295"],"Unnecessary escape character: \\*.",["296","297"],"Unnecessary escape character: \\+.",["298","299"],["300","301"],["302","303"],["304","305"],["306","307"],["308","309"],["310","311"],["312","313"],["314","315"],["316","317"],["318","319"],["320","321"],["322","323"],["324","325"],["326","327"],["328","329"],"Unnecessary escape character: \\#.",["330","331"],["332","333"],["334","335"],["336","337"],["338","339"],["340","341"],"Unnecessary escape character: \\..",["342","343"],"Unnecessary escape character: \\/.",["344","345"],["346","347"],["348","349"],"no-global-assign","no-unsafe-negation",{"desc":"350","fix":"351"},[1187,1187],"()",{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"messageId":"362","fix":"363","desc":"364"},{"messageId":"365","fix":"366","desc":"367"},{"messageId":"362","fix":"368","desc":"364"},{"messageId":"365","fix":"369","desc":"367"},{"messageId":"362","fix":"370","desc":"364"},{"messageId":"365","fix":"371","desc":"367"},{"messageId":"362","fix":"372","desc":"364"},{"messageId":"365","fix":"373","desc":"367"},{"messageId":"362","fix":"374","desc":"364"},{"messageId":"365","fix":"375","desc":"367"},{"messageId":"362","fix":"376","desc":"364"},{"messageId":"365","fix":"377","desc":"367"},{"messageId":"362","fix":"378","desc":"364"},{"messageId":"365","fix":"379","desc":"367"},{"messageId":"362","fix":"380","desc":"364"},{"messageId":"365","fix":"381","desc":"367"},{"messageId":"362","fix":"382","desc":"364"},{"messageId":"365","fix":"383","desc":"367"},{"messageId":"362","fix":"384","desc":"364"},{"messageId":"365","fix":"385","desc":"367"},{"messageId":"362","fix":"386","desc":"364"},{"messageId":"365","fix":"387","desc":"367"},{"messageId":"362","fix":"388","desc":"364"},{"messageId":"365","fix":"389","desc":"367"},{"messageId":"362","fix":"390","desc":"364"},{"messageId":"365","fix":"391","desc":"367"},{"messageId":"362","fix":"392","desc":"364"},{"messageId":"365","fix":"393","desc":"367"},{"messageId":"362","fix":"394","desc":"364"},{"messageId":"365","fix":"395","desc":"367"},{"messageId":"362","fix":"396","desc":"364"},{"messageId":"365","fix":"397","desc":"367"},{"messageId":"362","fix":"398","desc":"364"},{"messageId":"365","fix":"399","desc":"367"},{"messageId":"362","fix":"400","desc":"364"},{"messageId":"365","fix":"401","desc":"367"},{"messageId":"362","fix":"402","desc":"364"},{"messageId":"365","fix":"403","desc":"367"},{"messageId":"362","fix":"404","desc":"364"},{"messageId":"365","fix":"405","desc":"367"},{"messageId":"362","fix":"406","desc":"364"},{"messageId":"365","fix":"407","desc":"367"},{"messageId":"362","fix":"408","desc":"364"},{"messageId":"365","fix":"409","desc":"367"},{"messageId":"362","fix":"410","desc":"364"},{"messageId":"365","fix":"411","desc":"367"},{"messageId":"362","fix":"412","desc":"364"},{"messageId":"365","fix":"413","desc":"367"},{"messageId":"362","fix":"414","desc":"364"},{"messageId":"365","fix":"415","desc":"367"},{"messageId":"362","fix":"416","desc":"364"},{"messageId":"365","fix":"417","desc":"367"},{"messageId":"362","fix":"418","desc":"364"},{"messageId":"365","fix":"419","desc":"367"},{"messageId":"362","fix":"420","desc":"364"},{"messageId":"365","fix":"421","desc":"367"},{"messageId":"362","fix":"422","desc":"364"},{"messageId":"365","fix":"423","desc":"367"},{"messageId":"362","fix":"424","desc":"364"},{"messageId":"365","fix":"425","desc":"367"},"Update the dependencies array to be: [props, props.isAuth]",{"range":"426","text":"427"},"Update the dependencies array to be: [props.match.params.userId, props.profileImage, props.isAuth, props]",{"range":"428","text":"429"},"Update the dependencies array to be: [countFollowed, getUsersFollowedTC]",{"range":"430","text":"431"},"Update the dependencies array to be: [getOnceUnfollowedTC, isFetchingOnce]",{"range":"432","text":"433"},"Update the dependencies array to be: [count, getUsersUnfollowedTC, isFetching, page]",{"range":"434","text":"435"},"Update the dependencies array to be: [scrollHandler]",{"range":"436","text":"437"},"removeEscape",{"range":"438","text":"439"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"440","text":"441"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"442","text":"439"},{"range":"443","text":"441"},{"range":"444","text":"439"},{"range":"445","text":"441"},{"range":"446","text":"439"},{"range":"447","text":"441"},{"range":"448","text":"439"},{"range":"449","text":"441"},{"range":"450","text":"439"},{"range":"451","text":"441"},{"range":"452","text":"439"},{"range":"453","text":"441"},{"range":"454","text":"439"},{"range":"455","text":"441"},{"range":"456","text":"439"},{"range":"457","text":"441"},{"range":"458","text":"439"},{"range":"459","text":"441"},{"range":"460","text":"439"},{"range":"461","text":"441"},{"range":"462","text":"439"},{"range":"463","text":"441"},{"range":"464","text":"439"},{"range":"465","text":"441"},{"range":"466","text":"439"},{"range":"467","text":"441"},{"range":"468","text":"439"},{"range":"469","text":"441"},{"range":"470","text":"439"},{"range":"471","text":"441"},{"range":"472","text":"439"},{"range":"473","text":"441"},{"range":"474","text":"439"},{"range":"475","text":"441"},{"range":"476","text":"439"},{"range":"477","text":"441"},{"range":"478","text":"439"},{"range":"479","text":"441"},{"range":"480","text":"439"},{"range":"481","text":"441"},{"range":"482","text":"439"},{"range":"483","text":"441"},{"range":"484","text":"439"},{"range":"485","text":"441"},{"range":"486","text":"439"},{"range":"487","text":"441"},{"range":"488","text":"439"},{"range":"489","text":"441"},{"range":"490","text":"439"},{"range":"491","text":"441"},{"range":"492","text":"439"},{"range":"493","text":"441"},{"range":"494","text":"439"},{"range":"495","text":"441"},{"range":"496","text":"439"},{"range":"497","text":"441"},{"range":"498","text":"439"},{"range":"499","text":"441"},[3562,3576],"[props, props.isAuth]",[10095,10156],"[props.match.params.userId, props.profileImage, props.isAuth, props]",[1104,1106],"[countFollowed, getUsersFollowedTC]",[1480,1482],"[getOnceUnfollowedTC, isFetchingOnce]",[1598,1610],"[count, getUsersUnfollowedTC, isFetching, page]",[1794,1796],"[scrollHandler]",[610,611],"",[610,610],"\\",[614,615],[614,614],[616,617],[616,616],[618,619],[618,618],[620,621],[620,620],[1320,1321],[1320,1320],[1324,1325],[1324,1324],[1326,1327],[1326,1326],[1328,1329],[1328,1328],[1330,1331],[1330,1330],[1424,1425],[1424,1424],[1428,1429],[1428,1428],[1430,1431],[1430,1430],[1432,1433],[1432,1432],[1434,1435],[1434,1434],[1535,1536],[1535,1535],[1539,1540],[1539,1539],[1541,1542],[1541,1541],[1543,1544],[1543,1543],[1545,1546],[1545,1545],[1583,1584],[1583,1583],[1665,1666],[1665,1665],[1669,1670],[1669,1669],[1671,1672],[1671,1671],[1673,1674],[1673,1673],[1675,1676],[1675,1675],[1948,1949],[1948,1948],[1950,1951],[1950,1950],[1966,1967],[1966,1966],[1968,1969],[1968,1968]]