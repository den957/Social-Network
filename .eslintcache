[{"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\App.js":"2","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Header\\Header.jsx":"4","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Aside\\Aside.jsx":"5","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Messages\\Messages.jsx":"6","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Preloader\\Preloader.jsx":"7","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Preloader\\PreloaderLine\\PreloaderLine.jsx":"8","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\hoc\\withSuspense.js":"9","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\app.reducer.ts":"10","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\auth.reducer.ts":"11","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\login.reducer.ts":"12","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\profile.reducer.ts":"13","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\users.reducer.ts":"14","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Paginator\\Paginator.tsx":"15","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\Users.tsx":"16","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\store.ts":"17","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersContainer.tsx":"18","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersAll\\UsersAll.tsx":"19","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersAll\\UsersAllContainer.tsx":"20","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Settings\\Settings.tsx":"21","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Settings\\SettingsForm.tsx":"22","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\api\\api.ts":"23","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\validators\\validators.ts":"24","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\FormControl\\FormControl.tsx":"25","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\Profile.tsx":"26","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfilePostCreate\\ProfilePost.tsx":"27","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfilePostList\\ProfilePostList.tsx":"28","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\hoc\\withAuthRedirect.tsx":"29","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"30","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\modals\\ModalStatus\\ModalStatus.tsx":"31","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\modals\\ModalStatus\\ModalStatusForm.tsx":"32","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Login\\Login.tsx":"33","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Login\\LoginForm.tsx":"34"},{"size":709,"mtime":1614602397085,"results":"35","hashOfConfig":"36"},{"size":2806,"mtime":1615976238867,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"36"},{"size":4633,"mtime":1614274149637,"results":"39","hashOfConfig":"36"},{"size":1259,"mtime":1615139566694,"results":"40","hashOfConfig":"36"},{"size":506,"mtime":1613091159281,"results":"41","hashOfConfig":"36"},{"size":271,"mtime":1612897638793,"results":"42","hashOfConfig":"36"},{"size":766,"mtime":1614273514917,"results":"43","hashOfConfig":"36"},{"size":342,"mtime":1614507884420,"results":"44","hashOfConfig":"36"},{"size":1104,"mtime":1615901132457,"results":"45","hashOfConfig":"36"},{"size":3333,"mtime":1615817294802,"results":"46","hashOfConfig":"36"},{"size":968,"mtime":1615806803235,"results":"47","hashOfConfig":"36"},{"size":5928,"mtime":1615986070320,"results":"48","hashOfConfig":"36"},{"size":7152,"mtime":1615890278134,"results":"49","hashOfConfig":"36"},{"size":2214,"mtime":1615729251181,"results":"50","hashOfConfig":"36"},{"size":3530,"mtime":1615984340212,"results":"51","hashOfConfig":"36"},{"size":782,"mtime":1615714813632,"results":"52","hashOfConfig":"36"},{"size":2724,"mtime":1615987298947,"results":"53","hashOfConfig":"36"},{"size":3004,"mtime":1615764789100,"results":"54","hashOfConfig":"36"},{"size":3546,"mtime":1615988069353,"results":"55","hashOfConfig":"36"},{"size":3268,"mtime":1615924254866,"results":"56","hashOfConfig":"36"},{"size":5142,"mtime":1615991139708,"results":"57","hashOfConfig":"36"},{"size":3793,"mtime":1615986085395,"results":"58","hashOfConfig":"36"},{"size":2099,"mtime":1615844757549,"results":"59","hashOfConfig":"36"},{"size":1200,"mtime":1615913835407,"results":"60","hashOfConfig":"36"},{"size":9858,"mtime":1615986289318,"results":"61","hashOfConfig":"36"},{"size":1486,"mtime":1615916440136,"results":"62","hashOfConfig":"36"},{"size":1633,"mtime":1615978257513,"results":"63","hashOfConfig":"36"},{"size":848,"mtime":1615932369729,"results":"64","hashOfConfig":"36"},{"size":3968,"mtime":1615985992830,"results":"65","hashOfConfig":"36"},{"size":1840,"mtime":1615990957185,"results":"66","hashOfConfig":"36"},{"size":869,"mtime":1615991311831,"results":"67","hashOfConfig":"36"},{"size":2118,"mtime":1615996183205,"results":"68","hashOfConfig":"36"},{"size":2623,"mtime":1615996240995,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"s4zipz",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"93"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"93"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"93"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"134","usedDeprecatedRules":"93"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"93"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"93"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"93"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"93"},"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\index.js",[],["155","156"],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\App.js",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Header\\Header.jsx",["157","158","159","160","161"],"import React, { useEffect, useState } from 'react'\r\nimport s from './Header.module.css'\r\nimport cn from 'classnames'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\r\nimport logoImg from '../../assets/images/logoImg.png'\r\nimport { connect } from 'react-redux'\r\nimport { logOutServerTC } from '../../redux/auth.reducer'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\nimport { getProfileMeInfo } from '../../redux/profile.reducer'\r\n\r\nexport const Header = (props) => {\r\n   let [modal, editModal] = useState(false)\r\n   return (\r\n      <div className={s.header} >\r\n         <div className={s.header__container}>\r\n            <div className={s.header__row}>\r\n               <div className={cn(s.header__logo, s.logoHeader)}>\r\n                  <div className={s.logoHeader__row}>\r\n                     <div className={s.logoHeader__img}>\r\n                        <img src={logoImg} />\r\n                     </div>\r\n                     <div className={s.logoHeader__name}>\r\n                        vkontakte\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               {props.isAuth\r\n                  ? <>\r\n                     {!modal\r\n                        ? <div className={cn(s.header__body, s.bodyHeader)} onClick={() => editModal(true)}>\r\n                           <div className={s.bodyHeader__row}>\r\n                              <div className={s.bodyHeader__fullName}>{props.isAuth && props.profileMeInfo.fullName}</div>\r\n                              <div className={s.bodyHeader__logo}>{props.isAuth && <img src={props.profileMeInfo.photos.small} />}</div>\r\n                              <div className={s.bodyHeader__arrow}><FontAwesomeIcon icon={faChevronDown} /></div>\r\n                           </div>\r\n                        </div>\r\n                        : <div className={s.header__body, s.bodyHeader} onClick={() => editModal(false)}>\r\n                           <div className={s.bodyHeader__row}>\r\n                              <div className={s.bodyHeader__fullName}>{props.isAuth && props.profileMeInfo.fullName}</div>\r\n                              <div className={s.bodyHeader__logo}>{props.isAuth && <img src={props.profileMeInfo.photos.small} />}</div>\r\n                              <div className={s.bodyHeader__arrow}><FontAwesomeIcon icon={faChevronDown} /></div>\r\n                           </div>\r\n                        </div>\r\n                     }\r\n                  </>\r\n                  : <div className={s.header__login}>\r\n                     <NavLink className={s.loginHeader__link} to={'/login'}>Login</NavLink>\r\n                  </div>\r\n               }\r\n            </div>\r\n            {modal &&\r\n               <div className={s.header__modal}>\r\n                  <div className={s.modalHeader__item} onClick={() => editModal(false)}>\r\n                     <NavLink to={'/settings'} className={s.modalHeader__link}>Settings</NavLink>\r\n                  </div>\r\n                  <div className={s.modalHeader__line}></div>\r\n                  <div className={s.modalHeader__link} onClick={() => { props.logOutServerTC(); editModal(false) }}>\r\n                     <span>Log Out</span>\r\n                  </div>\r\n               </div>\r\n            }\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst HeaderContainer = (props) => {\r\n   useEffect(() => {\r\n      if (props.isAuth) {\r\n         props.getProfileMeInfo(props.userId)\r\n      }\r\n   }, [props.isAuth])\r\n   if (props.isAuth) {\r\n      if (!props.profileMeInfo) {\r\n         return (\r\n            <div className={s.preloader__headerWrapper}>\r\n               <div className={s.preloader__headerBlock}>\r\n                  <Preloader />\r\n               </div>\r\n            </div >\r\n         )\r\n      }\r\n   }\r\n   return (\r\n      <Header profileMeInfo={props.profileMeInfo} userId={props.userId} login={props.login} isAuth={props.isAuth} logOutServerTC={props.logOutServerTC} getProfileMeInfo={props.getProfileMeInfo} />\r\n   )\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      isAuth: state.auth.isAuth,\r\n      login: state.auth.login,\r\n      userId: state.auth.id,\r\n      profileMeInfo: state.profile.profileMeInfo,\r\n      profileImage: state.profile.profileImage,\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      logOutServerTC: () => { dispatch(logOutServerTC()) },\r\n      getProfileMeInfo: (userId) => { dispatch(getProfileMeInfo(userId)) }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Aside\\Aside.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Messages\\Messages.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Preloader\\Preloader.jsx",["162"],"import React from 'react'\r\nimport loadingImage from '../../../assets/images/loading.svg'\r\nimport s from './Preloader.module.css'\r\n\r\nlet Preloader = (props) => {\r\n   return (\r\n      <img src={loadingImage} className={s.preloader__img} />\r\n   )\r\n}\r\nexport default Preloader","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Preloader\\PreloaderLine\\PreloaderLine.jsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\hoc\\withSuspense.js",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\app.reducer.ts",[],["163","164"],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\auth.reducer.ts",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\login.reducer.ts",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\profile.reducer.ts",["165"],"import { AppReducerType } from './store';\r\nimport { ThunkAction } from \"redux-thunk\"\r\nimport { profileApi, ResultCode } from \"../api/api\"\r\nimport { InfoContactsPhotoType } from \"../types/types\"\r\n\r\nconst getProfileInfoSuccessType = 'GET_PROFILE_INFO_SUCCESS'\r\nconst setProfileImageSuccessType = 'SET_PROFILE_IMAGE_SUCCESS'\r\nconst getProfileStatusSuccessType = 'GET_PROFILE_STATUS_SUCCESS'\r\nconst getProfileMeInfoSuccessType = 'GET_PROFILE_ME_INFO_SUCCESS'\r\nconst addProfilePostType = \"ADD_PROFILE_POST_TYPE\"\r\nconst removeProfilePostType = \"REMOVE_PROFILE_POST_TYPE\"\r\n\r\nexport type InfoType = {\r\n   userId: number,\r\n   lookingForAJob: boolean,\r\n   lookingForAJobDescription: string,\r\n   fullName: string,\r\n   aboutMe: string\r\n   contacts: {\r\n      github: string,\r\n      facebook: string,\r\n      twitter: string,\r\n      website: string,\r\n      youtube: string,\r\n      mainLink: string\r\n   },\r\n   photos: InfoContactsPhotoType\r\n\r\n}\r\nexport type PostType = {\r\n   id: string,\r\n   date: string,\r\n   post: string\r\n}\r\n\r\nconst initialState = {\r\n   profileMeInfo: null as InfoType | null,\r\n   profileInfo: null as InfoType | null,\r\n   profileImage: null as string | null,\r\n   profileStatus: '' as string,\r\n   profilePosts: [] as Array<PostType>\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionsType = GetProfileInfoSuccessType | SetProfileImageSuccessType | GetProfileStatusSuccess | GetProfileMeInfoSuccessType | AddProfilePost | RemoveProfilePost\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n   switch (action.type) {\r\n      case getProfileInfoSuccessType: {\r\n         return {\r\n            ...state,\r\n            profileInfo: action.data\r\n         }\r\n      }\r\n      case setProfileImageSuccessType: {\r\n         return {\r\n            ...state,\r\n            profileImage: action.img,\r\n         }\r\n      }\r\n      case getProfileStatusSuccessType: {\r\n         return {\r\n            ...state,\r\n            profileStatus: action.status\r\n         }\r\n      }\r\n      case getProfileMeInfoSuccessType: {\r\n         return {\r\n            ...state,\r\n            profileMeInfo: action.dataMe,\r\n         }\r\n      }\r\n      case addProfilePostType: {\r\n         return {\r\n            ...state,\r\n            ...state.profilePosts.push(action.dataPost) as {}\r\n         }\r\n      }\r\n      case removeProfilePostType: {\r\n         return {\r\n            ...state,\r\n            profilePosts: state.profilePosts.filter((post) => {\r\n               if (post.id !== action.id) {\r\n                  return true\r\n               }\r\n            })\r\n         }\r\n      }\r\n      default: {\r\n         return state\r\n      }\r\n   }\r\n}\r\nexport default profileReducer\r\ntype GetProfileInfoSuccessType = {\r\n   type: typeof getProfileInfoSuccessType,\r\n   data: InfoType\r\n}\r\ntype SetProfileImageSuccessType = {\r\n   type: typeof setProfileImageSuccessType,\r\n   img: string\r\n}\r\ntype GetProfileStatusSuccess = {\r\n   type: typeof getProfileStatusSuccessType,\r\n   status: string\r\n}\r\ntype GetProfileMeInfoSuccessType = {\r\n   type: typeof getProfileMeInfoSuccessType,\r\n   dataMe: InfoType\r\n}\r\ntype AddProfilePost = {\r\n   type: typeof addProfilePostType,\r\n   dataPost: PostType\r\n}\r\ntype RemoveProfilePost = {\r\n   type: typeof removeProfilePostType,\r\n   id: string\r\n}\r\nexport const getProfileInfoSuccess = (data: InfoType): GetProfileInfoSuccessType => ({ type: getProfileInfoSuccessType, data })\r\nexport const setProfileImageSuccess = (img: string): SetProfileImageSuccessType => ({ type: setProfileImageSuccessType, img })\r\nexport const getProfileStatusSuccess = (status: string): GetProfileStatusSuccess => ({ type: getProfileStatusSuccessType, status })\r\nexport const getProfileMeInfoSuccess = (dataMe: InfoType): GetProfileMeInfoSuccessType => ({ type: getProfileMeInfoSuccessType, dataMe })\r\nexport const addProfilePost = (dataPost: PostType): AddProfilePost => ({ type: addProfilePostType, dataPost })\r\nexport const removeProfilePost = (id: string): RemoveProfilePost => ({ type: removeProfilePostType, id })\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppReducerType, unknown, ActionsType>\r\n\r\nexport const getProfileInfo = (userId: number): ThunkType =>\r\n   async dispatch => {\r\n      let data = await profileApi.getProfile(userId)\r\n      dispatch(getProfileInfoSuccess(data))\r\n   }\r\nexport const getProfileMeInfo = (userId: number): ThunkType =>\r\n   async dispatch => {\r\n      let data = await profileApi.getProfile(userId)\r\n      dispatch(getProfileMeInfoSuccess(data))\r\n   }\r\nexport const setProfileImage = (image: File): ThunkType =>\r\n   async dispatch => {\r\n      let data = await profileApi.setImage(image)\r\n      if (data.resultCode === ResultCode.Success) {\r\n         dispatch(setProfileImageSuccess(data.data.photos.small))\r\n      }\r\n   }\r\nexport const getProfileStatus = (userId: number): ThunkType =>\r\n   async dispatch => {\r\n      let response = await profileApi.getStatus(userId)\r\n      if (!response.data) {\r\n         dispatch(getProfileStatusSuccess(response.data))\r\n      }\r\n      dispatch(getProfileStatusSuccess(response.data))\r\n   }\r\nexport const setProfileStatus = (status: string): ThunkType =>\r\n   async dispatch => {\r\n      let data = await profileApi.setStatus(status)\r\n      if (data.resultCode === ResultCode.Success) {\r\n         dispatch(getProfileStatusSuccess(status))\r\n      }\r\n   }\r\nexport const setProfileContactInfo = (fullName: string, aboutMe: string, lookingForAJobDescription: string, isMarried: boolean, youtube: string, website: string, facebook: string, github: string, userId: number | null): ThunkType =>\r\n   async dispatch => {\r\n      let data = await profileApi.setContactInfo(fullName, aboutMe, lookingForAJobDescription, isMarried, youtube, website, facebook, github)\r\n      if (data.resultCode === ResultCode.Success) {\r\n         if (userId != null) {\r\n            dispatch(getProfileMeInfo(userId))\r\n            dispatch(getProfileInfo(userId))\r\n         }\r\n      }\r\n   }","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\users.reducer.ts",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\Paginator\\Paginator.tsx",[],["166","167"],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\Users.tsx",["168","169"],"import React from 'react'\r\nimport s from './Users.module.css'\r\nimport Paginator from '../Common/Paginator/Paginator'\r\nimport { NavLink } from 'react-router-dom'\r\nimport userIcon from '../../assets/images/userIcon.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserMinus } from '@fortawesome/free-solid-svg-icons'\r\nimport { UsersType } from '../../types/types'\r\n\r\ntype PropsType = {\r\n   isAuth: boolean,\r\n   usersFollowed: Array<UsersType>,\r\n   readyToggle: Array<number>,\r\n   totalCount: number | null,\r\n   countFollowed: number,\r\n   pageFollowed: number,\r\n   onPageChange: (pageFollowed: number) => void\r\n   unfollowUserTC: (userId: number) => void,\r\n}\r\nconst Users: React.FC<PropsType> = ({ isAuth, usersFollowed, readyToggle, unfollowUserTC, ...props }) => {\r\n   return (\r\n      <>\r\n         <div className={s.users}>\r\n            <div className={s.users__title}>\r\n               Users\r\n            </div>\r\n            <div className={s.users__menu}>\r\n               <div className={s.menuUsers__row}>\r\n                  <div className={s.menuUsers__title}>\r\n                     My requests\r\n                  </div>\r\n                  <NavLink className={s.menuUsers__button} to={'/users/all'}>Find more</NavLink>\r\n               </div>\r\n            </div>\r\n            {isAuth\r\n               ? < div className={s.users__request}>\r\n                  {usersFollowed.map((user) => {\r\n                     return (\r\n                        user.followed &&\r\n                        <div className={s.requestUsers__item} key={user.id}>\r\n                           <div className={s.itemUsers__row}>\r\n                              <NavLink className={s.itemUsers__image} to={`/profile/${user.id}`}>\r\n                                 {!user.photos.small\r\n                                    ? <img src={userIcon} />\r\n                                    : <img src={user.photos.small} />\r\n                                 }\r\n                              </NavLink>\r\n                              <div className={s.itemUsers__body}>\r\n                                 <NavLink className={s.bodyUsers__name} to={`/profile/${user.id}`}>{user.name}</NavLink>\r\n                                 <div className={s.bodyUsers__navigation}>\r\n                                    <div className={s.navigationUsers__row}>\r\n                                       <NavLink className={s.navigationUsers__message} to={'/messages'}>Write a message</NavLink>\r\n                                       <div className={s.navigationUsers__subscribe}>\r\n                                          <button disabled={readyToggle.some((userId) => userId === user.id)} onClick={(e) => { unfollowUserTC(user.id) }}><FontAwesomeIcon icon={faUserMinus} /></button>\r\n                                       </div>\r\n                                    </div>\r\n                                 </div>\r\n                              </div>\r\n                           </div>\r\n                           <div className={s.requestUsers__line}></div>\r\n                        </div>\r\n                     )\r\n                  })}\r\n                  <Paginator pageFollowed={props.pageFollowed} countFollowed={props.countFollowed} totalCount={props.totalCount} onPageChange={props.onPageChange} />\r\n               </div>\r\n               : <div className={s.login__warning}>\r\n                  To view this page, you need to go to the site.\r\n               </div>\r\n            }\r\n         </div>\r\n      </>\r\n   )\r\n}\r\nexport default Users\r\n","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\redux\\store.ts",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersContainer.tsx",["170"],"import React, { useEffect } from 'react'\r\nimport s from './Users.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { AppReducerType } from '../../redux/store'\r\nimport { getUsersFollowedTC, unfollowUserTC } from '../../redux/users.reducer'\r\nimport { UsersType } from '../../types/types'\r\nimport PreloaderLine from '../Common/Preloader/PreloaderLine/PreloaderLine'\r\nimport Users from './Users'\r\nimport { AnyAction } from 'redux'\r\nimport { ThunkDispatch } from 'redux-thunk'\r\n\r\ntype MapStateToPropsType = {\r\n   isAuth: boolean,\r\n   usersFollowed: Array<UsersType>,\r\n   readyToggle: Array<number>,\r\n   totalCount: number | null,\r\n   countFollowed: number,\r\n   pageFollowed: number,\r\n   isReadyPage: boolean,\r\n}\r\ntype MapDispatchToPropsType = {\r\n   unfollowUserTC: (userId: number) => void,\r\n   getUsersFollowedTC: (count: number, pageFollowed: number, boolean: boolean) => void\r\n}\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst UsersContainer: React.FC<PropsType> = ({ countFollowed, isReadyPage, getUsersFollowedTC, ...props }) => {\r\n   useEffect(() => {\r\n      let [page, count] = [1, countFollowed]\r\n      getUsersFollowedTC(count, page, true)\r\n   }, [])\r\n   let onPageChange = (pageFollowed: number) => {\r\n      let count = countFollowed\r\n      getUsersFollowedTC(count, pageFollowed, true)\r\n   }\r\n   return (\r\n      <>\r\n         {isReadyPage\r\n            ? <Users isAuth={props.isAuth} pageFollowed={props.pageFollowed} usersFollowed={props.usersFollowed} countFollowed={countFollowed} totalCount={props.totalCount} onPageChange={onPageChange} unfollowUserTC={props.unfollowUserTC} readyToggle={props.readyToggle} />\r\n            : <div className={s.preloader__usersWrapper}>\r\n               <div className={s.preloader__usersBlock}>\r\n                  <PreloaderLine />\r\n               </div>\r\n            </div >\r\n         }\r\n      </>\r\n   )\r\n}\r\nconst mapStateToProps = (state: AppReducerType): MapStateToPropsType => {\r\n   return {\r\n      countFollowed: state.users.countFollowed,\r\n      pageFollowed: state.users.pageFollowed,\r\n      totalCount: state.users.totalCount,\r\n      usersFollowed: state.users.usersFollowed,\r\n      isReadyPage: state.users.isReadyPage,\r\n      readyToggle: state.users.readyToggle,\r\n      isAuth: state.auth.isAuth\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>): MapDispatchToPropsType => {\r\n   return {\r\n      getUsersFollowedTC: (count: number, pageFollowed: number, follower: boolean) => { dispatch(getUsersFollowedTC(count, pageFollowed, follower)) },\r\n      unfollowUserTC: (userId: number) => { dispatch(unfollowUserTC(userId)) }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersAll\\UsersAll.tsx",["171","172"],"import React from 'react'\r\nimport s from './UsersAll.module.css'\r\nimport cn from 'classnames'\r\nimport userIcon from '../../../assets/images/userIcon.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { NavLink } from 'react-router-dom'\r\nimport PreloaderLine from '../../Common/Preloader/PreloaderLine/PreloaderLine'\r\nimport { UsersType } from '../../../types/types'\r\n\r\ntype PropsType = {\r\n   isAuth: boolean,\r\n   usersUnfollowed: Array<UsersType>,\r\n   readyToggle: Array<number>,\r\n   followUserTC: (userId: number) => void,\r\n}\r\nexport const UsersAll: React.FC<PropsType> = ({ usersUnfollowed, isAuth, readyToggle, followUserTC }) => {\r\n   return (\r\n      <div className={s.usersAll}>\r\n         <div className={s.usersAll__title}>\r\n            Find friends\r\n         </div>\r\n         <div className={s.usersAll__body}>\r\n            <div className={s.bodyUsersAll__row}>\r\n               {usersUnfollowed.map((user) => {\r\n                  return (\r\n                     <div className={s.bodyUsersAll__item} key={user.id}>\r\n                        <NavLink className={s.bodyUsersAll__image} to={`/profile/${user.id}`}>\r\n                           {user.photos.small\r\n                              ? <img src={user.photos.small} />\r\n                              : <img src={userIcon} />\r\n                           }\r\n                        </NavLink>\r\n                        <div className={s.bodyUsersAll__body}>\r\n                           <div className={cn(s.bodyUsersAll__row, s.bodyUsersAll)}>\r\n                              <NavLink className={s.bodyUsersAll__name} to={`/profile/${user.id}`}>\r\n                                 <span>{user.name}</span>\r\n                              </NavLink>\r\n                              <div className={s.bodyUsersAll__subscribe}>\r\n                                 {!user.followed && isAuth\r\n                                    ? <button className={s.bodyUsersAll__abled} disabled={readyToggle.some((userId) => userId === user.id)} onClick={(e) => { followUserTC(user.id) }}><FontAwesomeIcon icon={faUserPlus} /></button>\r\n                                    : <button className={s.bodyUsersAll__disabled} disabled={true}><FontAwesomeIcon icon={faUserPlus} /></button>\r\n                                 }\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                  )\r\n               })\r\n               }\r\n               {\r\n                  function () {\r\n                     return (\r\n                        <div className={s.preloader__UsersAllWrapper}>\r\n                           <div className={s.preloader__UsersAllBlock}>\r\n                              <PreloaderLine />\r\n                           </div>\r\n                        </div >\r\n                     )\r\n                  }()\r\n               }\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Users\\UsersAll\\UsersAllContainer.tsx",["173","174","175"],"import React, { useEffect, useState } from 'react'\r\nimport s from './UsersAll.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { followUserTC, getOnceUnfollowedTC, getUsersUnfollowedTC, isFetchingUsers } from '../../../redux/users.reducer'\r\nimport Preloader from '../../Common/Preloader/Preloader'\r\nimport { UsersType } from '../../../types/types'\r\nimport { AppReducerType } from '../../../redux/store'\r\nimport { UsersAll } from './UsersAll'\r\nimport { ThunkDispatch } from 'redux-thunk'\r\nimport { AnyAction } from 'redux'\r\n\r\ntype MapStateToPropsType = {\r\n   isAuth: boolean,\r\n   readyToggle: Array<number>,\r\n   usersUnfollowed: Array<UsersType>,\r\n   countUnfollowed: number,\r\n   pageUnfollowed: number,\r\n   isFetching: boolean,\r\n}\r\ntype MapDispatchToPropsType = {\r\n   followUserTC: (userId: number) => void,\r\n   getUsersUnfollowedTC: (count: number, page: number, boolean: boolean) => void,\r\n   getOnceUnfollowedTC: () => void,\r\n   isFetchingUsers: (bool: boolean) => void,\r\n}\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst UserAllContainer: React.FC<PropsType> = ({ isFetchingUsers, pageUnfollowed, isFetching, countUnfollowed, getOnceUnfollowedTC, getUsersUnfollowedTC, ...props }) => {\r\n   const [isFetchingOnce, setIsFetchingOnce] = useState(false)\r\n   let [page, count] = [pageUnfollowed, countUnfollowed]\r\n   useEffect(() => {\r\n      if (!isFetchingOnce) {\r\n         getOnceUnfollowedTC()\r\n         setIsFetchingOnce(true)\r\n      }\r\n   }, [])\r\n   useEffect(() => {\r\n      if (isFetching) {\r\n         getUsersUnfollowedTC(count, page, false)\r\n      }\r\n   }, [isFetching])\r\n   useEffect(() => {\r\n      document.addEventListener('scroll', scrollHandler)\r\n      return () => {\r\n         document.removeEventListener('scroll', scrollHandler)\r\n      }\r\n   }, [])\r\n   const scrollHandler = (e: any): void => {\r\n      const [scrollHeight, scrollTop, innerHeight] = [e.target.documentElement.scrollHeight, e.target.documentElement.scrollTop, window.innerHeight]\r\n      if (scrollTop + 100 >= scrollHeight - innerHeight) {\r\n         isFetchingUsers(true)\r\n      }\r\n   }\r\n   return (\r\n      <>\r\n         {isFetchingOnce\r\n            ? <UsersAll isAuth={props.isAuth} followUserTC={props.followUserTC} usersUnfollowed={props.usersUnfollowed} readyToggle={props.readyToggle} />\r\n            : <div className={s.preloader__UsersAllContainerWrapper}>\r\n               <div className={s.preloader__UsersAllContainerBlock}>\r\n                  <Preloader />\r\n               </div>\r\n            </div >\r\n         }\r\n      </>\r\n   )\r\n}\r\nconst mapStateToProps = (state: AppReducerType): MapStateToPropsType => {\r\n   return {\r\n      usersUnfollowed: state.users.usersUnfollowed,\r\n      countUnfollowed: state.users.countUnfollowed,\r\n      pageUnfollowed: state.users.pageUnfollowed,\r\n      isFetching: state.users.isFetching,\r\n      readyToggle: state.users.readyToggle,\r\n      isAuth: state.auth.isAuth\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>): MapDispatchToPropsType => {\r\n   return {\r\n      getUsersUnfollowedTC: (count: number, pageUnfollowed: number, follower: boolean): void => { dispatch(getUsersUnfollowedTC(count, pageUnfollowed, follower)) },\r\n      isFetchingUsers: (bool: boolean): void => { dispatch(isFetchingUsers(bool)) },\r\n      followUserTC: (userId: number): void => { dispatch(followUserTC(userId)) },\r\n      getOnceUnfollowedTC: (): void => { dispatch(getOnceUnfollowedTC()) }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAllContainer)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Settings\\Settings.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Settings\\SettingsForm.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\api\\api.ts",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\validators\\validators.ts",["176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],"export const required = (value: string): string | undefined => {\r\n   if (value) {\r\n      return undefined\r\n   }\r\n   else {\r\n      return 'Require filed'\r\n   }\r\n}\r\nexport const minLengthCreator = (minLength: number) => {\r\n   return (value: string): string | undefined => {\r\n      if (value && value.length > minLength) {\r\n         return 'Field is too long'\r\n      }\r\n      return undefined\r\n   }\r\n}\r\nexport const validUrlFormat = () => {\r\n   return (value: string): string | undefined => {\r\n      let regExp = /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/\r\n      if (regExp.test(value) === true) {\r\n         return undefined\r\n      }\r\n      return 'Invalid url address'\r\n   }\r\n}\r\nexport const validDateFormat = () => {\r\n   return (value: string): string | undefined => {\r\n      let regExp = /^(\\d{1,2})[\\s\\.\\/-](\\d{1,2})[\\s\\.\\/-](\\d{4})$/\r\n      if (regExp.test(value) === true) {\r\n         return undefined\r\n      }\r\n      return 'Invalid date'\r\n   }\r\n}\r\n","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Common\\FormControl\\FormControl.tsx",["206"],"import React, { LegacyRef, useEffect, useRef, useState } from 'react'\r\nimport { WrappedFieldProps } from 'redux-form'\r\nimport s from './FormControls.module.css'\r\nexport const Input: React.FC<WrappedFieldProps> = ({ input, meta, ...props }) => {\r\n   return (\r\n      <div className={meta.touched && meta.error ? s.input__validate : ''} >\r\n         <input {...input}{...props} />\r\n         {meta.touched && meta.error ? <span>{meta.error}</span> : ''}\r\n      </div>\r\n   )\r\n}\r\nexport const AutoHeightTextarea: React.FC<WrappedFieldProps> = ({ input, ...props }) => {\r\n   const textareaRef = useRef<HTMLTextAreaElement>(null)\r\n   const [currentValue, setCurrentValue] = useState<string>(\"\")\r\n   useEffect(() => {\r\n      if (textareaRef && textareaRef.current) {\r\n         textareaRef.current.style.height = '2.8em'\r\n         const scrollHeight = textareaRef.current.scrollHeight\r\n         textareaRef.current.style.height = `${scrollHeight}px`\r\n      }\r\n   }, [currentValue]);\r\n   return (\r\n      <textarea {...input}{...props} ref={textareaRef} autoFocus={true} className={s.addPost__textarea} value={currentValue} onChange={e => setCurrentValue(e.target.value)} placeholder={'Anything new?'} />\r\n   )\r\n}","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\Profile.tsx",["207","208","209"],"import React, { ChangeEvent, useState } from 'react'\r\nimport s from './Profile.module.css'\r\nimport cn from 'classnames'\r\nimport { NavLink } from 'react-router-dom'\r\nimport logo from '../../assets/images/logo.jpg'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowAltCircleUp, faHome } from '@fortawesome/free-solid-svg-icons'\r\nimport { ProfileReduxPost } from './ProfilePostCreate/ProfilePost'\r\nimport ProfilePostList from './ProfilePostList/ProfilePostList'\r\nimport { InfoType, PostType } from '../../redux/profile.reducer'\r\n\r\ntype PropsType = {\r\n   setProfileImage: (image: File) => void,\r\n   addProfilePost: (dataPost: PostType) => void,\r\n   profileInfo: InfoType,\r\n   isOwner: boolean,\r\n   profileStatus: string,\r\n   editModalStatus: (el: boolean) => void,\r\n   isAuth: boolean,\r\n   profileMeInfo: InfoType,\r\n   profilePosts: Array<PostType>,\r\n   removeProfilePost: (id: string) => void,\r\n   modalPost: boolean,\r\n   setModalPost: (el: boolean) => void\r\n}\r\nconst Profile: React.FC<PropsType> = ({ setProfileImage, addProfilePost, profileInfo, isOwner, profileStatus, editModalStatus, isAuth, ...props }) => {\r\n   const [modalPost, setModalPost] = useState<boolean>(false)\r\n   const [isShowDetails, editIsShowDetails] = useState<boolean>(false)\r\n   const onChangeAvatar = (e: ChangeEvent<HTMLInputElement>) => {\r\n      if (e.target.files?.length) {\r\n         setProfileImage(e.target.files[0])\r\n      }\r\n   }\r\n   const generateDate = () => {\r\n      return new Date()\r\n   }\r\n   const onSubmit = (dataPosts: PostType) => {\r\n      setModalPost(false)\r\n      let id = `f${(+new Date).toString(16)}`;\r\n      let date = `${generateDate().toLocaleDateString()} at ${generateDate().toLocaleTimeString()}`\r\n      const dataPost = {\r\n         id: id,\r\n         post: dataPosts.post,\r\n         date: date\r\n      }\r\n      addProfilePost(dataPost)\r\n   }\r\n   return (\r\n      <div className={s.profile}>\r\n         <div className={s.profile__row}>\r\n            {/* NARROW COLUMN */}\r\n            <div className={s.profile__narrow}>\r\n               <div className={s.profile__me}>\r\n                  <div className={s.meProfile__photo}><img src={profileInfo.photos.small ? profileInfo.photos.small : logo} />\r\n                     {isOwner &&\r\n                        <div className={s.meProfile__block}>\r\n                           <div className={s.meProfile__refresh}>\r\n                              <label className={s.refreshProfile__fake} htmlFor={'avatar-img'}><FontAwesomeIcon icon={faArrowAltCircleUp} className={s.refreshProfile__arrowTop} /><span>Refresh photo</span></label>\r\n                              <input className={s.refreshProfile__input} type='file' id={'avatar-img'} name='avatar-img' onChange={(e) => { onChangeAvatar(e) }} />\r\n                           </div>\r\n                        </div>\r\n                     }\r\n                  </div>\r\n               </div>\r\n               {isOwner\r\n                  ? <>\r\n                     <div className={s.profile__edit}>\r\n                        <NavLink className={s.editProfile__settings} to={'/settings'}>Edit</NavLink>\r\n                     </div>\r\n                     <div className={s.profile__enter}>\r\n                        <NavLink to={'/settings'}><span><FontAwesomeIcon icon={faHome} className={s.enterProfile__link} />Enter your contacts</span></NavLink>\r\n                     </div>\r\n                  </>\r\n                  : < div className={s.profile__edit}>\r\n                     <NavLink className={s.editProfile__messages} to={'/messages'}>Write a message</NavLink>\r\n                  </div>\r\n               }\r\n            </div>\r\n            {/* WIDE COLUMN */}\r\n            <div className={s.profile__wide}>\r\n               <div className={s.profile__info}>\r\n                  <div className={s.infoProfile__fullName}>\r\n                     <h4>{profileInfo.fullName}</h4>\r\n                  </div>\r\n                  {isOwner\r\n                     ? <>\r\n                        {profileStatus\r\n                           ? <div className={s.infoProfile__status} >\r\n                              <div onClick={(e) => { editModalStatus(true) }}>{profileStatus}</div>\r\n                           </div>\r\n                           : <div className={s.infoProfile__status} >\r\n                              <div className={s.infoProfile__fakeStatus} onClick={() => { editModalStatus(true) }}>status</div>\r\n                           </div>\r\n                        }\r\n                     </>\r\n                     : <>\r\n                        {profileStatus\r\n                           ? <div className={s.statusProfile__user}>\r\n                              <div>{profileStatus}</div>\r\n                           </div>\r\n                           : <div className={s.statusProfile__empty}></div>\r\n                        }\r\n                     </>\r\n                  }\r\n                  <div className={s.infoProfile__line}></div>\r\n                  <div className={s.infoProfile__information}>\r\n                     <div className={cn(s.informationProfile__row, s.informationProfile)}>\r\n                        <span className={s.informationProfile__title}>About me: </span>\r\n                        {profileInfo.aboutMe\r\n                           ? <span className={s.informationProfile__answer} >{profileInfo.aboutMe}</span>\r\n                           : <span className={s.informationProfile__answer}>not specified</span>\r\n                        }\r\n                        <span className={s.informationProfile__title}>Town: </span>\r\n                        {profileInfo.lookingForAJobDescription\r\n                           ? <span className={s.informationProfile__answer}>{profileInfo.lookingForAJobDescription}</span>\r\n                           : <span className={s.informationProfile__answer}>not specified</span>\r\n                        }\r\n                        <span className={s.informationProfile__title}>Family status: </span>\r\n                        {profileInfo.lookingForAJob\r\n                           ? <span className={s.informationProfile__answer}>married</span>\r\n                           : <span className={s.informationProfile__answer}>not married</span>\r\n                        }\r\n                     </div>\r\n                  </div>\r\n                  {isShowDetails\r\n                     ? <>\r\n                        <div className={s.infoProfile__showDetails} onClick={() => editIsShowDetails(false)}>\r\n                           <span>Hide detailed information</span>\r\n                        </div>\r\n                        <div className={s.infoProfile__information}>\r\n                           <div className={s.infoProfile__line}></div>\r\n                           <div className={cn(s.informationProfile__row, s.informationProfile)}>\r\n                              <span className={s.informationProfile__title}>YouTube: </span>\r\n                              {profileInfo.contacts.youtube\r\n                                 ? <span className={s.informationProfile__answer}>{profileInfo.contacts.youtube}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>Facebook: </span>\r\n                              {profileInfo.contacts.facebook\r\n                                 ? <span className={s.informationProfile__answer}>{profileInfo.contacts.facebook}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>LinkedIn: </span>\r\n                              {profileInfo.contacts.website\r\n                                 ? <span className={s.informationProfile__answer}>{profileInfo.contacts.website}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                              <span className={s.informationProfile__title}>GitHub: </span>\r\n                              {profileInfo.contacts.github\r\n                                 ? <span className={s.informationProfile__answer}>{profileInfo.contacts.github}</span>\r\n                                 : <span className={s.informationProfile__answer}>not specified</span>\r\n                              }\r\n                           </div>\r\n                        </div>\r\n                     </>\r\n                     : <>\r\n                        <div className={s.infoProfile__showDetails} onClick={(e) => editIsShowDetails(true)}>\r\n                           <span>Show details</span>\r\n                        </div>\r\n                        <div></div>\r\n                     </>\r\n                  }\r\n                  <div className={s.infoProfile__line}></div>\r\n               </div>\r\n               {isOwner && isAuth &&\r\n                  <>\r\n                     <div className={s.profile__addPost}>\r\n                        <div className={s.addPostProfile__row}>\r\n                           <div className={s.addPostProfile__logo}>\r\n                              <img src={props.profileMeInfo.photos.small as string} />\r\n                           </div>\r\n                           <ProfileReduxPost onSubmit={onSubmit} setModalPost={setModalPost} modalPost={modalPost} />\r\n                        </div>\r\n                     </div>\r\n                     {props.profilePosts.length > 0 &&\r\n                        <ProfilePostList removeProfilePost={props.removeProfilePost} profileMeInfo={props.profileMeInfo} profilePosts={props.profilePosts} />\r\n                     }\r\n                  </>\r\n               }\r\n            </div>\r\n         </div>\r\n      </div >\r\n   )\r\n}\r\nexport default Profile","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfilePostCreate\\ProfilePost.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfilePostList\\ProfilePostList.tsx",["210"],"import React from 'react'\r\nimport s from './ProfilePostList.module.css'\r\nimport cn from 'classnames'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { PostType, InfoType } from '../../../redux/profile.reducer'\r\ntype PropsType = {\r\n   profilePosts: Array<PostType>,\r\n   profileMeInfo: InfoType,\r\n   removeProfilePost: (id: string) => void\r\n}\r\nconst ProfilePostList: React.FC<PropsType> = ({ profilePosts, profileMeInfo, removeProfilePost }) => {\r\n   let posts = profilePosts.map((post) => {\r\n      return (\r\n         <div key={post.id} className={s.profile__newPost}>\r\n            <div className={cn(s.newPostProfile__row, s.newPostProfile)}>\r\n               <div className={s.newPostProfile__logo}>\r\n                  <img src={profileMeInfo.photos.small as string} />\r\n               </div>\r\n               <div className={s.newPostProfile__body}>\r\n                  <div className={s.newPostProfile__name}>\r\n                     {profileMeInfo.fullName}\r\n                  </div>\r\n                  <div className={s.newPostProfile__date}>\r\n                     {post.date}\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className={s.newPostProfileContent}>\r\n               {post.post}\r\n            </div>\r\n            <div className={s.newPostProfileRemove} onClick={(e) => { removeProfilePost(post.id) }}>\r\n               <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n         </div>\r\n      )\r\n   })\r\n   return (\r\n      <>\r\n         {posts}\r\n      </>\r\n   )\r\n}\r\nexport default ProfilePostList","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\hoc\\withAuthRedirect.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",["211"],"import React, { useEffect } from 'react'\r\nimport s from './Profile.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter, RouteComponentProps } from 'react-router'\r\nimport Profile from './Profile'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\nimport { addProfilePost, getProfileInfo, getProfileMeInfo, getProfileStatus, InfoType, PostType, removeProfilePost, setProfileImage } from '../../redux/profile.reducer'\r\nimport { AppReducerType } from '../../redux/store'\r\nimport { ThunkDispatch } from 'redux-thunk'\r\nimport { AnyAction } from 'redux'\r\n\r\ntype MapStateToPropsType = {\r\n   userId: number | null,\r\n   profileInfo: InfoType | null,\r\n   profileStatus: string,\r\n   isAuth: boolean,\r\n   profileMeInfo: InfoType | null,\r\n   profilePosts: Array<PostType>,\r\n   profileImage: string | null\r\n}\r\ntype MapDispatchToPropsType = {\r\n   getProfileInfo: (userId: number) => void,\r\n   getProfileMeInfo: (userId: number) => void,\r\n   getProfileStatus: (userId: number) => void,\r\n   setProfileImage: (image: File) => void,\r\n   addProfilePost: (dataPost: PostType) => void,\r\n   removeProfilePost: (id: string) => void,\r\n}\r\ntype OwnPropsType = {\r\n   editModalStatus: (el: boolean) => void,\r\n   setModalPost: (el: boolean) => void,\r\n   modalPost: boolean,\r\n}\r\ntype MathParamsType = {\r\n   userId: string\r\n}\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType & OwnPropsType & RouteComponentProps<MathParamsType>\r\nexport const ProfileContainer: React.FC<PropsType> = ({ match, history, userId, getProfileInfo, getProfileMeInfo, getProfileStatus, profileImage, ...props }) => {\r\n   useEffect(() => {\r\n      let id: number | null = +match.params.userId\r\n      if (!id) {\r\n         if (!userId) {\r\n            history.push('/login')\r\n         }\r\n         else {\r\n            getProfileInfo(userId)\r\n            getProfileMeInfo(userId)\r\n            getProfileStatus(userId)\r\n         }\r\n      }\r\n      else {\r\n         getProfileInfo(id)\r\n         getProfileStatus(id)\r\n      }\r\n   }, [match.params.userId, profileImage, props.isAuth])\r\n\r\n   return (\r\n      <>\r\n         {props.profileInfo && props.profileMeInfo\r\n            ? <Profile removeProfilePost={props.removeProfilePost} modalPost={props.modalPost} setModalPost={props.setModalPost} profilePosts={props.profilePosts} addProfilePost={props.addProfilePost} profileMeInfo={props.profileMeInfo} editModalStatus={props.editModalStatus} profileInfo={props.profileInfo} setProfileImage={props.setProfileImage} isOwner={!match.params.userId} profileStatus={props.profileStatus} isAuth={props.isAuth} />\r\n            : <div className={s.preloader__profileWrapper}>\r\n               <div className={s.preloader__profileBlock}>\r\n                  <Preloader />\r\n               </div>\r\n            </div >\r\n         }\r\n      </>\r\n   )\r\n}\r\nconst mapStateToProps = (state: AppReducerType): MapStateToPropsType => {\r\n   return {\r\n      userId: state.auth.id,\r\n      isAuth: state.auth.isAuth,\r\n      profileInfo: state.profile.profileInfo,\r\n      profileStatus: state.profile.profileStatus,\r\n      profileMeInfo: state.profile.profileMeInfo,\r\n      profilePosts: state.profile.profilePosts,\r\n      profileImage: state.profile.profileImage\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>): MapDispatchToPropsType => {\r\n   return {\r\n      getProfileInfo: (userId: number) => { dispatch(getProfileInfo(userId)) },\r\n      setProfileImage: (image: File) => { dispatch(setProfileImage(image)) },\r\n      getProfileStatus: (userId: number) => { dispatch(getProfileStatus(userId)) },\r\n      getProfileMeInfo: (userId: number) => { dispatch(getProfileMeInfo(userId)) },\r\n      addProfilePost: (dataPost: PostType) => { dispatch(addProfilePost(dataPost)) },\r\n      removeProfilePost: (id: string) => { dispatch(removeProfilePost(id)) }\r\n   }\r\n}\r\nlet withRouterUrlUserId = withRouter(ProfileContainer)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouterUrlUserId)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\modals\\ModalStatus\\ModalStatus.tsx",["212"],"import React from 'react'\r\nimport s from './ModalStatus.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { InfoType, setProfileStatus } from '../../../redux/profile.reducer'\r\nimport ModalStatusReduxForm from './ModalStatusForm'\r\nimport { AppReducerType } from '../../../redux/store'\r\nimport { ThunkDispatch } from 'redux-thunk'\r\nimport { AnyAction } from 'redux'\r\nexport type DataFormStatusType = {\r\n   status: string\r\n}\r\ntype MapStateToProps = {\r\n   profileStatus: string\r\n}\r\ntype MapDispatchToProps = {\r\n   setProfileStatus: (status: string) => void\r\n}\r\ntype OwnProps = {\r\n   editModalStatus: (text: boolean) => void\r\n}\r\ntype PropsType = MapStateToProps & MapDispatchToProps & OwnProps\r\nexport const ModalStatus: React.FC<PropsType> = ({ editModalStatus, setProfileStatus, ...props }) => {\r\n   const onSubmit = (dataForm: DataFormStatusType): void => {\r\n      if (Object.getOwnPropertyNames(dataForm).length > 0) {\r\n         setProfileStatus(dataForm.status)\r\n         editModalStatus(false)\r\n      }\r\n      else {\r\n         setProfileStatus('')\r\n         editModalStatus(false)\r\n      }\r\n   }\r\n   return (\r\n      <div className={s.modalStatus} onClick={() => editModalStatus(false)}>\r\n         <div className={s.modalStatus__window} onClick={(e) => e.stopPropagation()}>\r\n            <ModalStatusReduxForm onSubmit={onSubmit} profileStatus={props.profileStatus} />\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\nconst mapStateToProps = (state: AppReducerType): MapStateToProps => {\r\n   return {\r\n      profileStatus: state.profile.profileStatus\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>): MapDispatchToProps => {\r\n   return {\r\n      setProfileStatus: (status: string) => { dispatch(setProfileStatus(status)) }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalStatus)","C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\modals\\ModalStatus\\ModalStatusForm.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Login\\Login.tsx",[],"C:\\Users\\PC\\Desktop\\repeat-project\\my-app\\src\\components\\Login\\LoginForm.tsx",["213"],"import React from 'react'\r\nimport s from './LoginForm.module.css'\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\"\r\nimport { required } from \"../../validators/validators\"\r\nimport { useState } from \"react\"\r\nimport { Input } from \"../Common/FormControl/FormControl\"\r\nimport { DataFormLoginType } from './Login'\r\n\r\ntype OwnPropsType = {\r\n   isCaptcha: boolean,\r\n   urlCaptcha: string | null\r\n}\r\n\r\nexport const LoginForm: React.FC<InjectedFormProps<DataFormLoginType, OwnPropsType> & OwnPropsType> = ({ handleSubmit, isCaptcha, urlCaptcha }) => {\r\n   const [checked, setChecked] = useState<boolean>(false)\r\n   const [activeCheckbox, setActiveCheckbox] = useState<string>(`${s.login__checkbox}`)\r\n   return (\r\n      <form className={s.login__form} onSubmit={handleSubmit}>\r\n         <div className={s.login__item}><Field className={s.login__input} component={Input} type={'input'} name={'email'} validate={required} /></div>\r\n         <div className={s.login__item}><Field className={s.login__input} component={Input} type={'password'} name={'password'} validate={required} /></div>\r\n         <div className={s.login__item}>\r\n            {!checked\r\n               ? <label>\r\n                  <div className={s.login__checkboxBlock} onClick={() => { setActiveCheckbox(`${s.login__checkbox} ${s.checkbox__active}`); setChecked(true); }} >\r\n                     <div className={activeCheckbox}></div>\r\n                     <span>Remember me</span>\r\n                  </div>\r\n                  <Field className={s.checkboxLogin} component={'input'} type={'checkbox'} name={'rememberMe'} checked={checked} />\r\n               </label>\r\n               : <label>\r\n                  <div className={s.login__checkboxBlock} onClick={() => { setActiveCheckbox(`${s.login__checkbox}`); setChecked(false); }} >\r\n                     <div className={activeCheckbox}></div>\r\n                     <span>Remember me</span>\r\n                  </div>\r\n                  <Field className={s.checkboxLogin} component={'input'} type={'checkbox'} name={'rememberMe'} checked={checked} />\r\n               </label>\r\n            }\r\n         </div>\r\n         <div>\r\n            {isCaptcha && <img className={s.login__captcha} src={urlCaptcha as string} />}\r\n            {isCaptcha && <div className={s.login__item}><Field className={s.login__input} component={'input'} type={'input'} name={'captcha'} /></div>}\r\n         </div>\r\n         <button className={s.login__button} type={'submit'}>To come in</button>\r\n      </form>\r\n   )\r\n}\r\nexport const LoginReduxForm = reduxForm<DataFormLoginType, OwnPropsType>({ form: 'login' })(LoginForm)",{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":22,"column":25,"nodeType":"220","endLine":22,"endColumn":46},{"ruleId":"218","severity":1,"message":"219","line":35,"column":84,"nodeType":"220","endLine":35,"endColumn":130},{"ruleId":"221","severity":1,"message":"222","line":39,"column":57,"nodeType":"223","messageId":"224","endLine":39,"endColumn":58},{"ruleId":"218","severity":1,"message":"219","line":42,"column":84,"nodeType":"220","endLine":42,"endColumn":130},{"ruleId":"225","severity":1,"message":"226","line":74,"column":7,"nodeType":"227","endLine":74,"endColumn":21,"suggestions":"228"},{"ruleId":"218","severity":1,"message":"219","line":7,"column":7,"nodeType":"220","endLine":7,"endColumn":62},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"229","severity":1,"message":"230","line":81,"column":60,"nodeType":"231","messageId":"232","endLine":81,"endColumn":62},{"ruleId":"214","replacedBy":"233"},{"ruleId":"216","replacedBy":"234"},{"ruleId":"218","severity":1,"message":"219","line":44,"column":39,"nodeType":"220","endLine":44,"endColumn":61},{"ruleId":"218","severity":1,"message":"219","line":45,"column":39,"nodeType":"220","endLine":45,"endColumn":70},{"ruleId":"225","severity":1,"message":"235","line":31,"column":7,"nodeType":"227","endLine":31,"endColumn":9,"suggestions":"236"},{"ruleId":"218","severity":1,"message":"219","line":30,"column":33,"nodeType":"220","endLine":30,"endColumn":64},{"ruleId":"218","severity":1,"message":"219","line":31,"column":33,"nodeType":"220","endLine":31,"endColumn":55},{"ruleId":"225","severity":1,"message":"237","line":36,"column":7,"nodeType":"227","endLine":36,"endColumn":9,"suggestions":"238"},{"ruleId":"225","severity":1,"message":"239","line":41,"column":7,"nodeType":"227","endLine":41,"endColumn":19,"suggestions":"240"},{"ruleId":"225","severity":1,"message":"241","line":47,"column":7,"nodeType":"227","endLine":47,"endColumn":9,"suggestions":"242"},{"ruleId":"243","severity":1,"message":"244","line":19,"column":120,"nodeType":"245","messageId":"246","endLine":19,"endColumn":121,"suggestions":"247"},{"ruleId":"243","severity":1,"message":"248","line":19,"column":124,"nodeType":"245","messageId":"246","endLine":19,"endColumn":125,"suggestions":"249"},{"ruleId":"243","severity":1,"message":"250","line":19,"column":126,"nodeType":"245","messageId":"246","endLine":19,"endColumn":127,"suggestions":"251"},{"ruleId":"243","severity":1,"message":"252","line":19,"column":128,"nodeType":"245","messageId":"246","endLine":19,"endColumn":129,"suggestions":"253"},{"ruleId":"243","severity":1,"message":"254","line":19,"column":130,"nodeType":"245","messageId":"246","endLine":19,"endColumn":131,"suggestions":"255"},{"ruleId":"243","severity":1,"message":"244","line":19,"column":830,"nodeType":"245","messageId":"246","endLine":19,"endColumn":831,"suggestions":"256"},{"ruleId":"243","severity":1,"message":"248","line":19,"column":834,"nodeType":"245","messageId":"246","endLine":19,"endColumn":835,"suggestions":"257"},{"ruleId":"243","severity":1,"message":"250","line":19,"column":836,"nodeType":"245","messageId":"246","endLine":19,"endColumn":837,"suggestions":"258"},{"ruleId":"243","severity":1,"message":"252","line":19,"column":838,"nodeType":"245","messageId":"246","endLine":19,"endColumn":839,"suggestions":"259"},{"ruleId":"243","severity":1,"message":"254","line":19,"column":840,"nodeType":"245","messageId":"246","endLine":19,"endColumn":841,"suggestions":"260"},{"ruleId":"243","severity":1,"message":"244","line":19,"column":934,"nodeType":"245","messageId":"246","endLine":19,"endColumn":935,"suggestions":"261"},{"ruleId":"243","severity":1,"message":"248","line":19,"column":938,"nodeType":"245","messageId":"246","endLine":19,"endColumn":939,"suggestions":"262"},{"ruleId":"243","severity":1,"message":"250","line":19,"column":940,"nodeType":"245","messageId":"246","endLine":19,"endColumn":941,"suggestions":"263"},{"ruleId":"243","severity":1,"message":"252","line":19,"column":942,"nodeType":"245","messageId":"246","endLine":19,"endColumn":943,"suggestions":"264"},{"ruleId":"243","severity":1,"message":"254","line":19,"column":944,"nodeType":"245","messageId":"246","endLine":19,"endColumn":945,"suggestions":"265"},{"ruleId":"243","severity":1,"message":"244","line":19,"column":1045,"nodeType":"245","messageId":"246","endLine":19,"endColumn":1046,"suggestions":"266"},{"ruleId":"243","severity":1,"message":"248","line":19,"column":1049,"nodeType":"245","messageId":"246","endLine":19,"endColumn":1050,"suggestions":"267"},{"ruleId":"243","severity":1,"message":"250","line":19,"column":1051,"nodeType":"245","messageId":"246","endLine":19,"endColumn":1052,"suggestions":"268"},{"ruleId":"243","severity":1,"message":"252","line":19,"column":1053,"nodeType":"245","messageId":"246","endLine":19,"endColumn":1054,"suggestions":"269"},{"ruleId":"243","severity":1,"message":"254","line":19,"column":1055,"nodeType":"245","messageId":"246","endLine":19,"endColumn":1056,"suggestions":"270"},{"ruleId":"243","severity":1,"message":"271","line":19,"column":1093,"nodeType":"245","messageId":"246","endLine":19,"endColumn":1094,"suggestions":"272"},{"ruleId":"243","severity":1,"message":"244","line":19,"column":1175,"nodeType":"245","messageId":"246","endLine":19,"endColumn":1176,"suggestions":"273"},{"ruleId":"243","severity":1,"message":"248","line":19,"column":1179,"nodeType":"245","messageId":"246","endLine":19,"endColumn":1180,"suggestions":"274"},{"ruleId":"243","severity":1,"message":"250","line":19,"column":1181,"nodeType":"245","messageId":"246","endLine":19,"endColumn":1182,"suggestions":"275"},{"ruleId":"243","severity":1,"message":"252","line":19,"column":1183,"nodeType":"245","messageId":"246","endLine":19,"endColumn":1184,"suggestions":"276"},{"ruleId":"243","severity":1,"message":"254","line":19,"column":1185,"nodeType":"245","messageId":"246","endLine":19,"endColumn":1186,"suggestions":"277"},{"ruleId":"243","severity":1,"message":"278","line":28,"column":34,"nodeType":"245","messageId":"246","endLine":28,"endColumn":35,"suggestions":"279"},{"ruleId":"243","severity":1,"message":"280","line":28,"column":36,"nodeType":"245","messageId":"246","endLine":28,"endColumn":37,"suggestions":"281"},{"ruleId":"243","severity":1,"message":"278","line":28,"column":52,"nodeType":"245","messageId":"246","endLine":28,"endColumn":53,"suggestions":"282"},{"ruleId":"243","severity":1,"message":"280","line":28,"column":54,"nodeType":"245","messageId":"246","endLine":28,"endColumn":55,"suggestions":"283"},{"ruleId":"284","severity":1,"message":"285","line":1,"column":17,"nodeType":"286","messageId":"287","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"289","line":39,"column":22,"nodeType":"290","messageId":"291","endLine":39,"endColumn":30,"fix":"292"},{"ruleId":"218","severity":1,"message":"219","line":54,"column":55,"nodeType":"220","endLine":54,"endColumn":127},{"ruleId":"218","severity":1,"message":"219","line":170,"column":31,"nodeType":"220","endLine":170,"endColumn":87},{"ruleId":"218","severity":1,"message":"219","line":18,"column":19,"nodeType":"220","endLine":18,"endColumn":69},{"ruleId":"225","severity":1,"message":"293","line":55,"column":7,"nodeType":"227","endLine":55,"endColumn":56,"suggestions":"294"},{"ruleId":"284","severity":1,"message":"295","line":4,"column":10,"nodeType":"286","messageId":"287","endLine":4,"endColumn":18},{"ruleId":"218","severity":1,"message":"219","line":40,"column":27,"nodeType":"220","endLine":40,"endColumn":90},"no-native-reassign",["296"],"no-negated-in-lhs",["297"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["298"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["296"],["297"],"React Hook useEffect has missing dependencies: 'countFollowed' and 'getUsersFollowedTC'. Either include them or remove the dependency array. If 'getUsersFollowedTC' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["299"],"React Hook useEffect has missing dependencies: 'getOnceUnfollowedTC' and 'isFetchingOnce'. Either include them or remove the dependency array. If 'getOnceUnfollowedTC' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["300"],"React Hook useEffect has missing dependencies: 'count', 'getUsersUnfollowedTC', and 'page'. Either include them or remove the dependency array. If 'getUsersUnfollowedTC' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["301"],"React Hook useEffect has a missing dependency: 'scrollHandler'. Either include it or remove the dependency array.",["302"],"no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["303","304"],"Unnecessary escape character: \\(.",["305","306"],"Unnecessary escape character: \\).",["307","308"],"Unnecessary escape character: \\*.",["309","310"],"Unnecessary escape character: \\+.",["311","312"],["313","314"],["315","316"],["317","318"],["319","320"],["321","322"],["323","324"],["325","326"],["327","328"],["329","330"],["331","332"],["333","334"],["335","336"],["337","338"],["339","340"],["341","342"],"Unnecessary escape character: \\#.",["343","344"],["345","346"],["347","348"],["349","350"],["351","352"],["353","354"],"Unnecessary escape character: \\..",["355","356"],"Unnecessary escape character: \\/.",["357","358"],["359","360"],["361","362"],"@typescript-eslint/no-unused-vars","'LegacyRef' is defined but never used.","Identifier","unusedVar","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"363","text":"364"},"React Hook useEffect has missing dependencies: 'getProfileInfo', 'getProfileMeInfo', 'getProfileStatus', 'history', and 'userId'. Either include them or remove the dependency array. If 'getProfileInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["365"],"'InfoType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"messageId":"376","fix":"377","desc":"378"},{"messageId":"379","fix":"380","desc":"381"},{"messageId":"376","fix":"382","desc":"378"},{"messageId":"379","fix":"383","desc":"381"},{"messageId":"376","fix":"384","desc":"378"},{"messageId":"379","fix":"385","desc":"381"},{"messageId":"376","fix":"386","desc":"378"},{"messageId":"379","fix":"387","desc":"381"},{"messageId":"376","fix":"388","desc":"378"},{"messageId":"379","fix":"389","desc":"381"},{"messageId":"376","fix":"390","desc":"378"},{"messageId":"379","fix":"391","desc":"381"},{"messageId":"376","fix":"392","desc":"378"},{"messageId":"379","fix":"393","desc":"381"},{"messageId":"376","fix":"394","desc":"378"},{"messageId":"379","fix":"395","desc":"381"},{"messageId":"376","fix":"396","desc":"378"},{"messageId":"379","fix":"397","desc":"381"},{"messageId":"376","fix":"398","desc":"378"},{"messageId":"379","fix":"399","desc":"381"},{"messageId":"376","fix":"400","desc":"378"},{"messageId":"379","fix":"401","desc":"381"},{"messageId":"376","fix":"402","desc":"378"},{"messageId":"379","fix":"403","desc":"381"},{"messageId":"376","fix":"404","desc":"378"},{"messageId":"379","fix":"405","desc":"381"},{"messageId":"376","fix":"406","desc":"378"},{"messageId":"379","fix":"407","desc":"381"},{"messageId":"376","fix":"408","desc":"378"},{"messageId":"379","fix":"409","desc":"381"},{"messageId":"376","fix":"410","desc":"378"},{"messageId":"379","fix":"411","desc":"381"},{"messageId":"376","fix":"412","desc":"378"},{"messageId":"379","fix":"413","desc":"381"},{"messageId":"376","fix":"414","desc":"378"},{"messageId":"379","fix":"415","desc":"381"},{"messageId":"376","fix":"416","desc":"378"},{"messageId":"379","fix":"417","desc":"381"},{"messageId":"376","fix":"418","desc":"378"},{"messageId":"379","fix":"419","desc":"381"},{"messageId":"376","fix":"420","desc":"378"},{"messageId":"379","fix":"421","desc":"381"},{"messageId":"376","fix":"422","desc":"378"},{"messageId":"379","fix":"423","desc":"381"},{"messageId":"376","fix":"424","desc":"378"},{"messageId":"379","fix":"425","desc":"381"},{"messageId":"376","fix":"426","desc":"378"},{"messageId":"379","fix":"427","desc":"381"},{"messageId":"376","fix":"428","desc":"378"},{"messageId":"379","fix":"429","desc":"381"},{"messageId":"376","fix":"430","desc":"378"},{"messageId":"379","fix":"431","desc":"381"},{"messageId":"376","fix":"432","desc":"378"},{"messageId":"379","fix":"433","desc":"381"},{"messageId":"376","fix":"434","desc":"378"},{"messageId":"379","fix":"435","desc":"381"},{"messageId":"376","fix":"436","desc":"378"},{"messageId":"379","fix":"437","desc":"381"},{"messageId":"376","fix":"438","desc":"378"},{"messageId":"379","fix":"439","desc":"381"},[1612,1612],"()",{"desc":"440","fix":"441"},"Update the dependencies array to be: [props, props.isAuth]",{"range":"442","text":"443"},"Update the dependencies array to be: [countFollowed, getUsersFollowedTC]",{"range":"444","text":"445"},"Update the dependencies array to be: [getOnceUnfollowedTC, isFetchingOnce]",{"range":"446","text":"447"},"Update the dependencies array to be: [count, getUsersUnfollowedTC, isFetching, page]",{"range":"448","text":"449"},"Update the dependencies array to be: [scrollHandler]",{"range":"450","text":"451"},"removeEscape",{"range":"452","text":"453"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"454","text":"455"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"456","text":"453"},{"range":"457","text":"455"},{"range":"458","text":"453"},{"range":"459","text":"455"},{"range":"460","text":"453"},{"range":"461","text":"455"},{"range":"462","text":"453"},{"range":"463","text":"455"},{"range":"464","text":"453"},{"range":"465","text":"455"},{"range":"466","text":"453"},{"range":"467","text":"455"},{"range":"468","text":"453"},{"range":"469","text":"455"},{"range":"470","text":"453"},{"range":"471","text":"455"},{"range":"472","text":"453"},{"range":"473","text":"455"},{"range":"474","text":"453"},{"range":"475","text":"455"},{"range":"476","text":"453"},{"range":"477","text":"455"},{"range":"478","text":"453"},{"range":"479","text":"455"},{"range":"480","text":"453"},{"range":"481","text":"455"},{"range":"482","text":"453"},{"range":"483","text":"455"},{"range":"484","text":"453"},{"range":"485","text":"455"},{"range":"486","text":"453"},{"range":"487","text":"455"},{"range":"488","text":"453"},{"range":"489","text":"455"},{"range":"490","text":"453"},{"range":"491","text":"455"},{"range":"492","text":"453"},{"range":"493","text":"455"},{"range":"494","text":"453"},{"range":"495","text":"455"},{"range":"496","text":"453"},{"range":"497","text":"455"},{"range":"498","text":"453"},{"range":"499","text":"455"},{"range":"500","text":"453"},{"range":"501","text":"455"},{"range":"502","text":"453"},{"range":"503","text":"455"},{"range":"504","text":"453"},{"range":"505","text":"455"},{"range":"506","text":"453"},{"range":"507","text":"455"},{"range":"508","text":"453"},{"range":"509","text":"455"},{"range":"510","text":"453"},{"range":"511","text":"455"},{"range":"512","text":"453"},{"range":"513","text":"455"},"Update the dependencies array to be: [getProfileInfo, getProfileMeInfo, getProfileStatus, history, match.params.userId, profileImage, props.isAuth, userId]",{"range":"514","text":"515"},[3562,3576],"[props, props.isAuth]",[1184,1186],"[countFollowed, getUsersFollowedTC]",[1480,1482],"[getOnceUnfollowedTC, isFetchingOnce]",[1598,1610],"[count, getUsersUnfollowedTC, isFetching, page]",[1794,1796],"[scrollHandler]",[610,611],"",[610,610],"\\",[614,615],[614,614],[616,617],[616,616],[618,619],[618,618],[620,621],[620,620],[1320,1321],[1320,1320],[1324,1325],[1324,1324],[1326,1327],[1326,1326],[1328,1329],[1328,1328],[1330,1331],[1330,1330],[1424,1425],[1424,1424],[1428,1429],[1428,1428],[1430,1431],[1430,1430],[1432,1433],[1432,1432],[1434,1435],[1434,1434],[1535,1536],[1535,1535],[1539,1540],[1539,1539],[1541,1542],[1541,1541],[1543,1544],[1543,1543],[1545,1546],[1545,1545],[1583,1584],[1583,1583],[1665,1666],[1665,1665],[1669,1670],[1669,1669],[1671,1672],[1671,1671],[1673,1674],[1673,1673],[1675,1676],[1675,1675],[1948,1949],[1948,1948],[1950,1951],[1950,1950],[1966,1967],[1966,1966],[1968,1969],[1968,1968],[2003,2052],"[getProfileInfo, getProfileMeInfo, getProfileStatus, history, match.params.userId, profileImage, props.isAuth, userId]"]